-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell library for the Microsoft Language Server Protocol, data types
--   
--   An implementation of the types to allow language implementors to
--   support the Language Server Protocol for their specific language.
@package lsp-types
@version 2.1.0.0

module Data.IxMap
class Ord (Base f) => IxOrd f where {
    type Base f;
}
toBase :: forall a. IxOrd f => f a -> Base f
newtype IxMap (k :: a -> Type) (f :: a -> Type)
IxMap :: Map (Base k) (Some f) -> IxMap (k :: a -> Type) (f :: a -> Type)
[$sel:getMap:IxMap] :: IxMap (k :: a -> Type) (f :: a -> Type) -> Map (Base k) (Some f)
emptyIxMap :: IxMap k f
insertIxMap :: IxOrd k => k m -> f m -> IxMap k f -> Maybe (IxMap k f)
lookupIxMap :: IxOrd k => k m -> IxMap k f -> Maybe (f m)
pickFromIxMap :: IxOrd k => k m -> IxMap k f -> (Maybe (f m), IxMap k f)


-- | This module defines orphan <tt>aeson</tt> instances for <a>Row</a>.
--   They differ from the instances in `row-types-aeson` in one crucial
--   respect: they serialise <a>Nothing</a> fields by *omitting* them in
--   the resulting object, and parse absent fields as <a>Nothing</a>.
--   <tt>aeson</tt> can be configured to have this behviour for instances
--   for datatypes, but we want to do this for record types generically.
--   
--   This is crucial to match what LSP clients expect.
module Data.Row.Aeson

-- | Serialise a value as an entry in a JSON object. This allows
--   customizing the behaviour in the object context, in order to e.g. omit
--   the field.
class ToJSONEntry a
toJSONEntry :: ToJSONEntry a => String -> a -> Object
class FromJSONEntry a
parseJSONEntry :: FromJSONEntry a => Object -> String -> Parser a
lazyUncons :: KnownSymbol l => Label l -> Rec r -> (Rec (r .- l), r .! l)
instance Data.Aeson.Types.FromJSON.FromJSON a => Data.Row.Aeson.FromJSONEntry (GHC.Maybe.Maybe a)
instance Data.Aeson.Types.FromJSON.FromJSON a => Data.Row.Aeson.FromJSONEntry a
instance (Data.Row.Internal.AllUniqueLabels r, Data.Row.Internal.Forall r Data.Row.Aeson.FromJSONEntry) => Data.Aeson.Types.FromJSON.FromJSON (Data.Row.Records.Rec r)
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Row.Aeson.ToJSONEntry (GHC.Maybe.Maybe a)
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Row.Aeson.ToJSONEntry a
instance Data.Row.Internal.Forall r Data.Row.Aeson.ToJSONEntry => Data.Aeson.Types.ToJSON.ToJSON (Data.Row.Records.Rec r)

module Data.Row.Hashable
instance (Data.Row.Internal.Forall r Data.Hashable.Class.Hashable, Data.Row.Internal.Forall r GHC.Classes.Eq) => Data.Hashable.Class.Hashable (Data.Row.Records.Rec r)

module Language.LSP.Protocol.Utils.Misc
rdrop :: Int -> [a] -> [a]

-- | Given a wrapper and a singleton GADT, construct FromJSON instances for
--   each constructor return type by invoking the FromJSON instance for the
--   wrapper and unwrapping
makeSingletonFromJSON :: Name -> Name -> [Name] -> Q [Dec]
makeRegHelper :: Name -> DecsQ

-- | Standard options for use when generating JSON instances NOTE: This
--   needs to be in a separate file because of the TH stage restriction
lspOptions :: Options

-- | Standard options for use when generating JSON instances for an
--   untagged union
lspOptionsUntagged :: Options
prettyJSON :: Value -> Doc ann
newtype ViaJSON a
ViaJSON :: a -> ViaJSON a
instance Data.Aeson.Types.ToJSON.ToJSON a => Prettyprinter.Internal.Pretty (Language.LSP.Protocol.Utils.Misc.ViaJSON a)

module Language.LSP.Protocol.Types

-- | An alternative type (isomorphic to <a>Either</a>), but which is
--   encoded into JSON without a tag for the alternative.
--   
--   This corresponds to <tt>a | b</tt> types in the LSP specification.
data a |? b
InL :: a -> (|?) a b
InR :: b -> (|?) a b
infixr 9 |?
toEither :: (a |? b) -> Either a b

-- | Prism for the left-hand side of an <a>(|?)</a>.
_L :: Prism' (a |? b) a

-- | Prism for the right-hand side of an <a>(|?)</a>.
_R :: Prism' (a |? b) b

-- | 32-bit signed integer type
data () => Int32

-- | The "uinteger" type in the LSP spec.
--   
--   Unusually, this is a **31**-bit unsigned integer, not a 32-bit one.
data UInt

-- | A type for that is precisely null and nothing else.
--   
--   This is useful since the LSP specification often includes types like
--   <tt>a | null</tt> as distinct from an optional value of type
--   <tt>a</tt>.
data Null
Null :: Null
absorbNull :: Monoid a => (a |? Null) -> a
nullToMaybe :: (a |? Null) -> Maybe a
maybeToNull :: Maybe a -> a |? Null

-- | Include a value in an JSON object optionally, omitting it if it is
--   <a>Nothing</a>.
(.=?) :: (KeyValue kv, ToJSON v) => String -> Maybe v -> [kv]

-- | Constructs <a>NormalizedFilePath</a> from <a>OsPath</a>. Throws
--   <a>EncodingException</a> if the conversion fails.
--   
--   We store a <tt>Text</tt> in <a>NormalizedFilePath</a>, which is UTF-16
--   or UTF-8 depending on the verion of text library. <a>OsPath</a> may
--   have a different encoding than <tt>Text</tt>, so this function may
--   fail. But DO NOTE THAT encoding mismatch doesn't always mean an
--   exception will be thrown. <a>Possibly your encoding simply won't throw
--   exception on failure</a>. Possibly the conversion function can't find
--   any invalid byte sequence, giving a sucessful but wrong result.
osPathToNormalizedFilePath :: MonadThrow m => OsPath -> m NormalizedFilePath

-- | Extracts <a>OsPath</a> from <a>NormalizedFilePath</a>. Throws
--   <a>EncodingException</a> if the conversion fails.
normalizedFilePathToOsPath :: MonadThrow m => NormalizedFilePath -> m OsPath
data () => EncodingException

-- | The <tt>Uri</tt> type in the LSP specification.
newtype Uri
Uri :: Text -> Uri
[$sel:getUri:Uri] :: Uri -> Text
uriToFilePath :: Uri -> Maybe FilePath
filePathToUri :: FilePath -> Uri

-- | A normalized <a>Uri</a>.
--   
--   If you want to use a URI as a map key, use this type. It is important
--   to normalize the percent encoding in the URI since URIs that only
--   differ when it comes to the percent-encoding should be treated as
--   equivalent.
--   
--   <a>NormalizedUri</a> has a cached hash in order to make it especially
--   fast in a hash map.
data NormalizedUri
NormalizedUri :: !Int -> !Text -> NormalizedUri
toNormalizedUri :: Uri -> NormalizedUri
fromNormalizedUri :: NormalizedUri -> Uri

-- | A file path that is already normalized.
--   
--   The <a>NormalizedUri</a> is cached to avoided repeated normalisation
--   when we need to compute them (which is a lot).
--   
--   This is one of the most performance critical parts of HLS, do not
--   modify it without profiling.
data NormalizedFilePath
toNormalizedFilePath :: FilePath -> NormalizedFilePath

-- | Extracts <a>FilePath</a> from <a>NormalizedFilePath</a>.
fromNormalizedFilePath :: NormalizedFilePath -> FilePath
normalizedFilePathToUri :: NormalizedFilePath -> NormalizedUri
uriToNormalizedFilePath :: NormalizedUri -> Maybe NormalizedFilePath

-- | <a>NormalizedFilePath</a> that contains an empty file path
emptyNormalizedFilePath :: NormalizedFilePath

-- | <i>Warning: This function is considered private. Use
--   normalizedFilePathToUri instead.</i>
platformAwareUriToFilePath :: String -> Uri -> Maybe FilePath

-- | <i>Warning: This function is considered private. Use
--   normalizedUriToFilePath instead.</i>
platformAwareFilePathToUri :: SystemOS -> FilePath -> Uri

-- | A helper function for creating ranges. prop&gt; mkRange l c l' c' =
--   Range (Position l c) (Position l' c')
mkRange :: UInt -> UInt -> UInt -> UInt -> Range

-- | <a>isSubrangeOf</a> returns true if for every <a>Position</a> in the
--   first <a>Range</a>, it's also in the second <a>Range</a>.
isSubrangeOf :: Range -> Range -> Bool

-- | <a>positionInRange</a> returns true if the given <a>Position</a> is in
--   the <a>Range</a>.
positionInRange :: Position -> Range -> Bool

-- | A class for types that represent a LSP enum type.
--   
--   This class carries conversion functions to and from the 'base type' of
--   the enum. Not all base type values may have corresponding enum values.
class LspEnum a where {
    
    -- | The base type of the enum.
    type EnumBaseType a :: Type;
}

-- | The known values of this type, the ones listed in the LSP
--   specification.
knownValues :: LspEnum a => Set a

-- | Convert an enum value to the base type.
toEnumBaseType :: LspEnum a => a -> EnumBaseType a

-- | Convert a base type value to an enum value, failing if it does not
--   correspond to an enum value.
fromEnumBaseType :: LspEnum a => EnumBaseType a -> Maybe a

-- | Convert a base type value to an enum value, failing if it does not
--   correspond to an enum value.
fromEnumBaseType :: (LspEnum a, LspOpenEnum a) => EnumBaseType a -> Maybe a

-- | A class for types that represent a LSP open enum type.
--   
--   Open enum types allow any base type value to be used as a
--   <tt>custom</tt> enum value.
class LspEnum a => LspOpenEnum a

-- | Convert a base type to an enum value. All base type values can be
--   converted this way.
fromOpenEnumBaseType :: LspOpenEnum a => EnumBaseType a -> a

-- | Newtype for <tt>deriving via</tt> to get standard JSON and
--   <a>IsString</a> instances in terms of the <a>LspEnum</a> class
--   methods.
newtype AsLspEnum a b
AsLspEnum :: a -> AsLspEnum a b

-- | A type whose only inhabitant is a single, statically-known string.
--   
--   This corresponds to types like <tt>"hello"</tt> in the LSP
--   specification that are exactly types with a single inhabitant.
data AString (s :: Symbol)
[AString] :: KnownSymbol s => AString s

-- | A type whose only inhabitant is a single, statically-known integer.
--   
--   This corresponds to types like <tt>1</tt> in the LSP specification
--   that are exactly types with a single inhabitant.
data AnInteger (n :: Nat)
[AnInteger] :: KnownNat n => AnInteger n

-- | Convenience alias for the type in the <a>_documentChanges</a> field.
type DocumentChange = TextDocumentEdit |? CreateFile |? RenameFile |? DeleteFile

-- | Applies a <a>TextEdit</a> to some <a>Text</a>.
--   
--   <pre>
--   &gt;&gt;&gt; applyTextEdit (TextEdit (Range (Position 0 1) (Position 0 2)) "i") "foo"
--   "fio"
--   </pre>
applyTextEdit :: TextEdit -> Text -> Text

-- | <a>editTextEdit</a> <tt>outer</tt> <tt>inner</tt> applies
--   <tt>inner</tt> to the text inside <tt>outer</tt>.
editTextEdit :: TextEdit -> TextEdit -> TextEdit

-- | Conversion between <a>OptionalVersionedTextDocumentIdentifier</a> and
--   <a>VersionedTextDocumentIdentifier</a>.
_versionedTextDocumentIdentifier :: Prism' OptionalVersionedTextDocumentIdentifier VersionedTextDocumentIdentifier

-- | Create a <a>MarkupContent</a> containing plain text.
mkPlainText :: Text -> MarkupContent

-- | Create a <a>MarkupContent</a> containing markdown.
mkMarkdown :: Text -> MarkupContent

-- | Create a <a>MarkupContent</a> containing a language-annotated code
--   block only.
mkMarkdownCodeBlock :: Text -> Text -> MarkupContent

-- | Markdown for a section separator in Markdown, being a horizontal line.
sectionSeparator :: Text

-- | Given some plaintext, convert it into some equivalent markdown text.
--   This is not *quite* the identity function.
plainTextToMarkdown :: Text -> Text

-- | Does the first <a>CodeActionKind</a> subsume the other one,
--   hierarchically. Reflexive.
codeActionKindSubsumes :: CodeActionKind -> CodeActionKind -> Bool

-- | Prism for extracting the <a>WorkDoneProgressBegin</a> case from the
--   unstructured <tt>value</tt> field of <tt>ProgressParams</tt>.
_workDoneProgressBegin :: Prism' Value WorkDoneProgressBegin

-- | Prism for extracting the <a>WorkDoneProgressEnd</a> case from the
--   unstructured <tt>value</tt> field of <tt>ProgressParams</tt>.
_workDoneProgressEnd :: Prism' Value WorkDoneProgressEnd

-- | Prism for extracting the <a>WorkDoneProgressReport</a> case from the
--   unstructured <tt>value</tt> field of <tt>ProgressParams</tt>.
_workDoneProgressReport :: Prism' Value WorkDoneProgressReport
defaultSemanticTokensLegend :: SemanticTokensLegend

-- | A single 'semantic token' as described in the LSP specification, using
--   absolute positions. This is the kind of token that is usually easiest
--   for editors to produce.
data SemanticTokenAbsolute
SemanticTokenAbsolute :: UInt -> UInt -> UInt -> SemanticTokenTypes -> [SemanticTokenModifiers] -> SemanticTokenAbsolute
[$sel:_line:SemanticTokenAbsolute] :: SemanticTokenAbsolute -> UInt
[$sel:_startChar:SemanticTokenAbsolute] :: SemanticTokenAbsolute -> UInt
[$sel:_length:SemanticTokenAbsolute] :: SemanticTokenAbsolute -> UInt
[$sel:_tokenType:SemanticTokenAbsolute] :: SemanticTokenAbsolute -> SemanticTokenTypes
[$sel:_tokenModifiers:SemanticTokenAbsolute] :: SemanticTokenAbsolute -> [SemanticTokenModifiers]

-- | A single 'semantic token' as described in the LSP specification, using
--   relative positions.
data SemanticTokenRelative
SemanticTokenRelative :: UInt -> UInt -> UInt -> SemanticTokenTypes -> [SemanticTokenModifiers] -> SemanticTokenRelative
[$sel:_deltaLine:SemanticTokenRelative] :: SemanticTokenRelative -> UInt
[$sel:_deltaStartChar:SemanticTokenRelative] :: SemanticTokenRelative -> UInt
[$sel:_length:SemanticTokenRelative] :: SemanticTokenRelative -> UInt
[$sel:_tokenType:SemanticTokenRelative] :: SemanticTokenRelative -> SemanticTokenTypes
[$sel:_tokenModifiers:SemanticTokenRelative] :: SemanticTokenRelative -> [SemanticTokenModifiers]

-- | Turn a list of absolutely-positioned tokens into a list of
--   relatively-positioned tokens. The tokens are assumed to be in the
--   order that they appear in the document!
relativizeTokens :: [SemanticTokenAbsolute] -> [SemanticTokenRelative]

-- | Turn a list of relatively-positioned tokens into a list of
--   absolutely-positioned tokens. The tokens are assumed to be in the
--   order that they appear in the document!
absolutizeTokens :: [SemanticTokenRelative] -> [SemanticTokenAbsolute]

-- | Encode a series of relatively-positioned semantic tokens into an
--   integer array following the given legend.
encodeTokens :: SemanticTokensLegend -> [SemanticTokenRelative] -> Either Text [UInt]

-- | An edit to a buffer of items.
data Edit a
Edit :: UInt -> UInt -> [a] -> Edit a
[$sel:editStart:Edit] :: Edit a -> UInt
[$sel:editDeleteCount:Edit] :: Edit a -> UInt
[$sel:editInsertions:Edit] :: Edit a -> [a]

-- | Compute a list of edits that will turn the first list into the second
--   list.
computeEdits :: Eq a => [a] -> [a] -> [Edit a]

-- | Convenience method for making a <a>SemanticTokens</a> from a list of
--   <a>SemanticTokenAbsolute</a>s. An error may be returned if
makeSemanticTokens :: SemanticTokensLegend -> [SemanticTokenAbsolute] -> Either Text SemanticTokens

-- | Convenience function for making a <a>SemanticTokensDelta</a> from a
--   previous and current <a>SemanticTokens</a>. The resulting
--   <a>SemanticTokensDelta</a> lacks a result ID, which must be set
--   separately if you are using that.
makeSemanticTokensDelta :: SemanticTokens -> SemanticTokens -> SemanticTokensDelta

-- | Tests whether <a>WatchKind_Create</a> is contained in the provided
--   WatchKind enum
containsCreate :: WatchKind -> Bool

-- | Tests whether <a>WatchKind_Change</a> is contained in the provided
--   WatchKind enum
containsChange :: WatchKind -> Bool

-- | Tests whether <a>WatchKind_Delete</a> is contained in the provided
--   WatchKind enum
containsDelete :: WatchKind -> Bool

-- | Combine a set of WatchKind types into a new WatchKind type that
--   accurately represents the set
combineWatchKinds :: Set WatchKind -> WatchKind

-- | An unchanged document diagnostic report for a workspace diagnostic
--   result.
data WorkspaceUnchangedDocumentDiagnosticReport
WorkspaceUnchangedDocumentDiagnosticReport :: AString "unchanged" -> Text -> Uri -> (Int32 |? Null) -> WorkspaceUnchangedDocumentDiagnosticReport

-- | A document diagnostic report indicating no changes to the last result.
--   A server can only return <tt>unchanged</tt> if result ids are
--   provided.
[$sel:_kind:WorkspaceUnchangedDocumentDiagnosticReport] :: WorkspaceUnchangedDocumentDiagnosticReport -> AString "unchanged"

-- | A result id which will be sent on the next diagnostic request for the
--   same document.
[$sel:_resultId:WorkspaceUnchangedDocumentDiagnosticReport] :: WorkspaceUnchangedDocumentDiagnosticReport -> Text

-- | The URI for which diagnostic information is reported.
[$sel:_uri:WorkspaceUnchangedDocumentDiagnosticReport] :: WorkspaceUnchangedDocumentDiagnosticReport -> Uri

-- | The version number for which the diagnostics are reported. If the
--   document is not marked as open <a>null</a> can be provided.
[$sel:_version:WorkspaceUnchangedDocumentDiagnosticReport] :: WorkspaceUnchangedDocumentDiagnosticReport -> Int32 |? Null

-- | Registration options for a <tt>WorkspaceSymbolRequest</tt>.
data WorkspaceSymbolRegistrationOptions
WorkspaceSymbolRegistrationOptions :: Maybe Bool -> Maybe Bool -> WorkspaceSymbolRegistrationOptions

[$sel:_workDoneProgress:WorkspaceSymbolRegistrationOptions] :: WorkspaceSymbolRegistrationOptions -> Maybe Bool

-- | The server provides support to resolve additional information for a
--   workspace symbol.
[$sel:_resolveProvider:WorkspaceSymbolRegistrationOptions] :: WorkspaceSymbolRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>WorkspaceSymbolRequest</tt>.
data WorkspaceSymbolParams
WorkspaceSymbolParams :: Maybe ProgressToken -> Maybe ProgressToken -> Text -> WorkspaceSymbolParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:WorkspaceSymbolParams] :: WorkspaceSymbolParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:WorkspaceSymbolParams] :: WorkspaceSymbolParams -> Maybe ProgressToken

-- | A query string to filter symbols by. Clients may send an empty string
--   here to request all symbols.
[$sel:_query:WorkspaceSymbolParams] :: WorkspaceSymbolParams -> Text

-- | Server capabilities for a <tt>WorkspaceSymbolRequest</tt>.
data WorkspaceSymbolOptions
WorkspaceSymbolOptions :: Maybe Bool -> Maybe Bool -> WorkspaceSymbolOptions

[$sel:_workDoneProgress:WorkspaceSymbolOptions] :: WorkspaceSymbolOptions -> Maybe Bool

-- | The server provides support to resolve additional information for a
--   workspace symbol.
[$sel:_resolveProvider:WorkspaceSymbolOptions] :: WorkspaceSymbolOptions -> Maybe Bool

-- | Client capabilities for a <tt>WorkspaceSymbolRequest</tt>.
data WorkspaceSymbolClientCapabilities
WorkspaceSymbolClientCapabilities :: Maybe Bool -> Maybe (Rec (("valueSet" .== Maybe [SymbolKind]) .+ Empty)) -> Maybe (Rec (("valueSet" .== [SymbolTag]) .+ Empty)) -> Maybe (Rec (("properties" .== [Text]) .+ Empty)) -> WorkspaceSymbolClientCapabilities

-- | Symbol request supports dynamic registration.
[$sel:_dynamicRegistration:WorkspaceSymbolClientCapabilities] :: WorkspaceSymbolClientCapabilities -> Maybe Bool

-- | Specific capabilities for the <tt>SymbolKind</tt> in the
--   `workspace/symbol` request.
[$sel:_symbolKind:WorkspaceSymbolClientCapabilities] :: WorkspaceSymbolClientCapabilities -> Maybe (Rec (("valueSet" .== Maybe [SymbolKind]) .+ Empty))

-- | The client supports tags on <tt>SymbolInformation</tt>. Clients
--   supporting tags have to handle unknown tags gracefully.
[$sel:_tagSupport:WorkspaceSymbolClientCapabilities] :: WorkspaceSymbolClientCapabilities -> Maybe (Rec (("valueSet" .== [SymbolTag]) .+ Empty))

-- | The client support partial workspace symbols. The client will send the
--   request `workspaceSymbol/resolve` to the server to resolve additional
--   properties.
[$sel:_resolveSupport:WorkspaceSymbolClientCapabilities] :: WorkspaceSymbolClientCapabilities -> Maybe (Rec (("properties" .== [Text]) .+ Empty))

-- | A special workspace symbol that supports locations without a range.
--   
--   See also SymbolInformation.
data WorkspaceSymbol
WorkspaceSymbol :: Text -> SymbolKind -> Maybe [SymbolTag] -> Maybe Text -> (Location |? Rec (("uri" .== Uri) .+ Empty)) -> Maybe Value -> WorkspaceSymbol

-- | The name of this symbol.
[$sel:_name:WorkspaceSymbol] :: WorkspaceSymbol -> Text

-- | The kind of this symbol.
[$sel:_kind:WorkspaceSymbol] :: WorkspaceSymbol -> SymbolKind

-- | Tags for this symbol.
[$sel:_tags:WorkspaceSymbol] :: WorkspaceSymbol -> Maybe [SymbolTag]

-- | The name of the symbol containing this symbol. This information is for
--   user interface purposes (e.g. to render a qualifier in the user
--   interface if necessary). It can't be used to re-infer a hierarchy for
--   the document symbols.
[$sel:_containerName:WorkspaceSymbol] :: WorkspaceSymbol -> Maybe Text

-- | The location of the symbol. Whether a server is allowed to return a
--   location without a range depends on the client capability
--   `workspace.symbol.resolveSupport`.
--   
--   See SymbolInformation#location for more details.
[$sel:_location:WorkspaceSymbol] :: WorkspaceSymbol -> Location |? Rec (("uri" .== Uri) .+ Empty)

-- | A data entry field that is preserved on a workspace symbol between a
--   workspace symbol request and a workspace symbol resolve request.
[$sel:_data_:WorkspaceSymbol] :: WorkspaceSymbol -> Maybe Value

-- | A full document diagnostic report for a workspace diagnostic result.
data WorkspaceFullDocumentDiagnosticReport
WorkspaceFullDocumentDiagnosticReport :: AString "full" -> Maybe Text -> [Diagnostic] -> Uri -> (Int32 |? Null) -> WorkspaceFullDocumentDiagnosticReport

-- | A full document diagnostic report.
[$sel:_kind:WorkspaceFullDocumentDiagnosticReport] :: WorkspaceFullDocumentDiagnosticReport -> AString "full"

-- | An optional result id. If provided it will be sent on the next
--   diagnostic request for the same document.
[$sel:_resultId:WorkspaceFullDocumentDiagnosticReport] :: WorkspaceFullDocumentDiagnosticReport -> Maybe Text

-- | The actual items.
[$sel:_items:WorkspaceFullDocumentDiagnosticReport] :: WorkspaceFullDocumentDiagnosticReport -> [Diagnostic]

-- | The URI for which diagnostic information is reported.
[$sel:_uri:WorkspaceFullDocumentDiagnosticReport] :: WorkspaceFullDocumentDiagnosticReport -> Uri

-- | The version number for which the diagnostics are reported. If the
--   document is not marked as open <a>null</a> can be provided.
[$sel:_version:WorkspaceFullDocumentDiagnosticReport] :: WorkspaceFullDocumentDiagnosticReport -> Int32 |? Null

data WorkspaceFoldersServerCapabilities
WorkspaceFoldersServerCapabilities :: Maybe Bool -> Maybe (Text |? Bool) -> WorkspaceFoldersServerCapabilities

-- | The server has support for workspace folders
[$sel:_supported:WorkspaceFoldersServerCapabilities] :: WorkspaceFoldersServerCapabilities -> Maybe Bool

-- | Whether the server wants to receive workspace folder change
--   notifications.
--   
--   If a string is provided the string is treated as an ID under which the
--   notification is registered on the client side. The ID can be used to
--   unregister for these events using the `client/unregisterCapability`
--   request.
[$sel:_changeNotifications:WorkspaceFoldersServerCapabilities] :: WorkspaceFoldersServerCapabilities -> Maybe (Text |? Bool)

data WorkspaceFoldersInitializeParams
WorkspaceFoldersInitializeParams :: Maybe ([WorkspaceFolder] |? Null) -> WorkspaceFoldersInitializeParams

-- | The workspace folders configured in the client when the server starts.
--   
--   This property is only available if the client supports workspace
--   folders. It can be <a>null</a> if the client supports workspace
--   folders but none are configured.
[$sel:_workspaceFolders:WorkspaceFoldersInitializeParams] :: WorkspaceFoldersInitializeParams -> Maybe ([WorkspaceFolder] |? Null)

-- | The workspace folder change event.
data WorkspaceFoldersChangeEvent
WorkspaceFoldersChangeEvent :: [WorkspaceFolder] -> [WorkspaceFolder] -> WorkspaceFoldersChangeEvent

-- | The array of added workspace folders
[$sel:_added:WorkspaceFoldersChangeEvent] :: WorkspaceFoldersChangeEvent -> [WorkspaceFolder]

-- | The array of the removed workspace folders
[$sel:_removed:WorkspaceFoldersChangeEvent] :: WorkspaceFoldersChangeEvent -> [WorkspaceFolder]

-- | A workspace folder inside a client.
data WorkspaceFolder
WorkspaceFolder :: Uri -> Text -> WorkspaceFolder

-- | The associated URI for this workspace folder.
[$sel:_uri:WorkspaceFolder] :: WorkspaceFolder -> Uri

-- | The name of the workspace folder. Used to refer to this workspace
--   folder in the user interface.
[$sel:_name:WorkspaceFolder] :: WorkspaceFolder -> Text

data WorkspaceEditClientCapabilities
WorkspaceEditClientCapabilities :: Maybe Bool -> Maybe [ResourceOperationKind] -> Maybe FailureHandlingKind -> Maybe Bool -> Maybe (Rec (("groupsOnLabel" .== Maybe Bool) .+ Empty)) -> WorkspaceEditClientCapabilities

-- | The client supports versioned document changes in
--   <tt>WorkspaceEdit</tt>s
[$sel:_documentChanges:WorkspaceEditClientCapabilities] :: WorkspaceEditClientCapabilities -> Maybe Bool

-- | The resource operations the client supports. Clients should at least
--   support <tt>create</tt>, <tt>rename</tt> and <tt>delete</tt> files and
--   folders.
[$sel:_resourceOperations:WorkspaceEditClientCapabilities] :: WorkspaceEditClientCapabilities -> Maybe [ResourceOperationKind]

-- | The failure handling strategy of a client if applying the workspace
--   edit fails.
[$sel:_failureHandling:WorkspaceEditClientCapabilities] :: WorkspaceEditClientCapabilities -> Maybe FailureHandlingKind

-- | Whether the client normalizes line endings to the client specific
--   setting. If set to <tt>true</tt> the client will normalize line ending
--   characters in a workspace edit to the client-specified new line
--   character.
[$sel:_normalizesLineEndings:WorkspaceEditClientCapabilities] :: WorkspaceEditClientCapabilities -> Maybe Bool

-- | Whether the client in general supports change annotations on text
--   edits, create file, rename file and delete file changes.
[$sel:_changeAnnotationSupport:WorkspaceEditClientCapabilities] :: WorkspaceEditClientCapabilities -> Maybe (Rec (("groupsOnLabel" .== Maybe Bool) .+ Empty))

-- | A workspace edit represents changes to many resources managed in the
--   workspace. The edit should either provide <tt>changes</tt> or
--   <tt>documentChanges</tt>. If documentChanges are present they are
--   preferred over <tt>changes</tt> if the client can handle versioned
--   document edits.
--   
--   Since version 3.13.0 a workspace edit can contain resource operations
--   as well. If resource operations are present clients need to execute
--   the operations in the order in which they are provided. So a workspace
--   edit for example can consist of the following two changes: (1) a
--   create file a.txt and (2) a text document edit which insert text into
--   file a.txt.
--   
--   An invalid sequence (e.g. (1) delete file a.txt and (2) insert text
--   into file a.txt) will cause failure of the operation. How the client
--   recovers from the failure is described by the client capability:
--   `workspace.workspaceEdit.failureHandling`
data WorkspaceEdit
WorkspaceEdit :: Maybe (Map Uri [TextEdit]) -> Maybe [TextDocumentEdit |? (CreateFile |? (RenameFile |? DeleteFile))] -> Maybe (Map ChangeAnnotationIdentifier ChangeAnnotation) -> WorkspaceEdit

-- | Holds changes to existing resources.
[$sel:_changes:WorkspaceEdit] :: WorkspaceEdit -> Maybe (Map Uri [TextEdit])

-- | Depending on the client capability
--   `workspace.workspaceEdit.resourceOperations` document changes are
--   either an array of <tt>TextDocumentEdit</tt>s to express changes to n
--   different text documents where each text document edit addresses a
--   specific version of a text document. Or it can contain above
--   <tt>TextDocumentEdit</tt>s mixed with create, rename and delete file /
--   folder operations.
--   
--   Whether a client supports versioned document edits is expressed via
--   `workspace.workspaceEdit.documentChanges` client capability.
--   
--   If a client neither supports <tt>documentChanges</tt> nor
--   `workspace.workspaceEdit.resourceOperations` then only plain
--   <tt>TextEdit</tt>s using the <tt>changes</tt> property are supported.
[$sel:_documentChanges:WorkspaceEdit] :: WorkspaceEdit -> Maybe [TextDocumentEdit |? (CreateFile |? (RenameFile |? DeleteFile))]

-- | A map of change annotations that can be referenced in
--   <tt>AnnotatedTextEdit</tt>s or create, rename and delete file / folder
--   operations.
--   
--   Whether clients honor this property depends on the client capability
--   `workspace.changeAnnotationSupport`.
[$sel:_changeAnnotations:WorkspaceEdit] :: WorkspaceEdit -> Maybe (Map ChangeAnnotationIdentifier ChangeAnnotation)

-- | A workspace diagnostic document report.
newtype WorkspaceDocumentDiagnosticReport
WorkspaceDocumentDiagnosticReport :: (WorkspaceFullDocumentDiagnosticReport |? WorkspaceUnchangedDocumentDiagnosticReport) -> WorkspaceDocumentDiagnosticReport

-- | A partial result for a workspace diagnostic report.
data WorkspaceDiagnosticReportPartialResult
WorkspaceDiagnosticReportPartialResult :: [WorkspaceDocumentDiagnosticReport] -> WorkspaceDiagnosticReportPartialResult

[$sel:_items:WorkspaceDiagnosticReportPartialResult] :: WorkspaceDiagnosticReportPartialResult -> [WorkspaceDocumentDiagnosticReport]

-- | A workspace diagnostic report.
data WorkspaceDiagnosticReport
WorkspaceDiagnosticReport :: [WorkspaceDocumentDiagnosticReport] -> WorkspaceDiagnosticReport

[$sel:_items:WorkspaceDiagnosticReport] :: WorkspaceDiagnosticReport -> [WorkspaceDocumentDiagnosticReport]

-- | Parameters of the workspace diagnostic request.
data WorkspaceDiagnosticParams
WorkspaceDiagnosticParams :: Maybe ProgressToken -> Maybe ProgressToken -> Maybe Text -> [PreviousResultId] -> WorkspaceDiagnosticParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:WorkspaceDiagnosticParams] :: WorkspaceDiagnosticParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:WorkspaceDiagnosticParams] :: WorkspaceDiagnosticParams -> Maybe ProgressToken

-- | The additional identifier provided during registration.
[$sel:_identifier:WorkspaceDiagnosticParams] :: WorkspaceDiagnosticParams -> Maybe Text

-- | The currently known diagnostic reports with their previous result ids.
[$sel:_previousResultIds:WorkspaceDiagnosticParams] :: WorkspaceDiagnosticParams -> [PreviousResultId]

-- | Workspace specific client capabilities.
data WorkspaceClientCapabilities
WorkspaceClientCapabilities :: Maybe Bool -> Maybe WorkspaceEditClientCapabilities -> Maybe DidChangeConfigurationClientCapabilities -> Maybe DidChangeWatchedFilesClientCapabilities -> Maybe WorkspaceSymbolClientCapabilities -> Maybe ExecuteCommandClientCapabilities -> Maybe Bool -> Maybe Bool -> Maybe SemanticTokensWorkspaceClientCapabilities -> Maybe CodeLensWorkspaceClientCapabilities -> Maybe FileOperationClientCapabilities -> Maybe InlineValueWorkspaceClientCapabilities -> Maybe InlayHintWorkspaceClientCapabilities -> Maybe DiagnosticWorkspaceClientCapabilities -> WorkspaceClientCapabilities

-- | The client supports applying batch edits to the workspace by
--   supporting the request 'workspace/applyEdit'
[$sel:_applyEdit:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe Bool

-- | Capabilities specific to <tt>WorkspaceEdit</tt>s.
[$sel:_workspaceEdit:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe WorkspaceEditClientCapabilities

-- | Capabilities specific to the `workspace/didChangeConfiguration`
--   notification.
[$sel:_didChangeConfiguration:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe DidChangeConfigurationClientCapabilities

-- | Capabilities specific to the `workspace/didChangeWatchedFiles`
--   notification.
[$sel:_didChangeWatchedFiles:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe DidChangeWatchedFilesClientCapabilities

-- | Capabilities specific to the `workspace/symbol` request.
[$sel:_symbol:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe WorkspaceSymbolClientCapabilities

-- | Capabilities specific to the `workspace/executeCommand` request.
[$sel:_executeCommand:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe ExecuteCommandClientCapabilities

-- | The client has support for workspace folders.
[$sel:_workspaceFolders:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe Bool

-- | The client supports `workspace/configuration` requests.
[$sel:_configuration:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe Bool

-- | Capabilities specific to the semantic token requests scoped to the
--   workspace.
--   
--   @since 3.16.0.
[$sel:_semanticTokens:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe SemanticTokensWorkspaceClientCapabilities

-- | Capabilities specific to the code lens requests scoped to the
--   workspace.
--   
--   @since 3.16.0.
[$sel:_codeLens:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe CodeLensWorkspaceClientCapabilities

-- | The client has support for file notifications/requests for user
--   operations on files.
--   
--   Since 3.16.0
[$sel:_fileOperations:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe FileOperationClientCapabilities

-- | Capabilities specific to the inline values requests scoped to the
--   workspace.
--   
--   @since 3.17.0.
[$sel:_inlineValue:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe InlineValueWorkspaceClientCapabilities

-- | Capabilities specific to the inlay hint requests scoped to the
--   workspace.
--   
--   @since 3.17.0.
[$sel:_inlayHint:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe InlayHintWorkspaceClientCapabilities

-- | Capabilities specific to the diagnostic requests scoped to the
--   workspace.
--   
--   @since 3.17.0.
[$sel:_diagnostics:WorkspaceClientCapabilities] :: WorkspaceClientCapabilities -> Maybe DiagnosticWorkspaceClientCapabilities

data WorkDoneProgressReport
WorkDoneProgressReport :: AString "report" -> Maybe Bool -> Maybe Text -> Maybe UInt -> WorkDoneProgressReport

[$sel:_kind:WorkDoneProgressReport] :: WorkDoneProgressReport -> AString "report"

-- | Controls enablement state of a cancel button.
--   
--   Clients that don't support cancellation or don't support controlling
--   the button's enablement state are allowed to ignore the property.
[$sel:_cancellable:WorkDoneProgressReport] :: WorkDoneProgressReport -> Maybe Bool

-- | Optional, more detailed associated progress message. Contains
--   complementary information to the <tt>title</tt>.
--   
--   Examples: "3<i>25 files", "project</i>src<i>module2",
--   "node_modules</i>some_dep". If unset, the previous progress message
--   (if any) is still valid.
[$sel:_message:WorkDoneProgressReport] :: WorkDoneProgressReport -> Maybe Text

-- | Optional progress percentage to display (value 100 is considered
--   100%). If not provided infinite progress is assumed and clients are
--   allowed to ignore the <tt>percentage</tt> value in subsequent in
--   report notifications.
--   
--   The value should be steadily rising. Clients are free to ignore values
--   that are not following this rule. The value range is [0, 100]
[$sel:_percentage:WorkDoneProgressReport] :: WorkDoneProgressReport -> Maybe UInt

data WorkDoneProgressParams
WorkDoneProgressParams :: Maybe ProgressToken -> WorkDoneProgressParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:WorkDoneProgressParams] :: WorkDoneProgressParams -> Maybe ProgressToken

data WorkDoneProgressOptions
WorkDoneProgressOptions :: Maybe Bool -> WorkDoneProgressOptions

[$sel:_workDoneProgress:WorkDoneProgressOptions] :: WorkDoneProgressOptions -> Maybe Bool

data WorkDoneProgressEnd
WorkDoneProgressEnd :: AString "end" -> Maybe Text -> WorkDoneProgressEnd

[$sel:_kind:WorkDoneProgressEnd] :: WorkDoneProgressEnd -> AString "end"

-- | Optional, a final message indicating to for example indicate the
--   outcome of the operation.
[$sel:_message:WorkDoneProgressEnd] :: WorkDoneProgressEnd -> Maybe Text

data WorkDoneProgressCreateParams
WorkDoneProgressCreateParams :: ProgressToken -> WorkDoneProgressCreateParams

-- | The token to be used to report progress.
[$sel:_token:WorkDoneProgressCreateParams] :: WorkDoneProgressCreateParams -> ProgressToken

data WorkDoneProgressCancelParams
WorkDoneProgressCancelParams :: ProgressToken -> WorkDoneProgressCancelParams

-- | The token to be used to report progress.
[$sel:_token:WorkDoneProgressCancelParams] :: WorkDoneProgressCancelParams -> ProgressToken

data WorkDoneProgressBegin
WorkDoneProgressBegin :: AString "begin" -> Text -> Maybe Bool -> Maybe Text -> Maybe UInt -> WorkDoneProgressBegin

[$sel:_kind:WorkDoneProgressBegin] :: WorkDoneProgressBegin -> AString "begin"

-- | Mandatory title of the progress operation. Used to briefly inform
--   about the kind of operation being performed.
--   
--   Examples: <a>Indexing</a> or "Linking dependencies".
[$sel:_title:WorkDoneProgressBegin] :: WorkDoneProgressBegin -> Text

-- | Controls if a cancel button should show to allow the user to cancel
--   the long running operation. Clients that don't support cancellation
--   are allowed to ignore the setting.
[$sel:_cancellable:WorkDoneProgressBegin] :: WorkDoneProgressBegin -> Maybe Bool

-- | Optional, more detailed associated progress message. Contains
--   complementary information to the <tt>title</tt>.
--   
--   Examples: "3<i>25 files", "project</i>src<i>module2",
--   "node_modules</i>some_dep". If unset, the previous progress message
--   (if any) is still valid.
[$sel:_message:WorkDoneProgressBegin] :: WorkDoneProgressBegin -> Maybe Text

-- | Optional progress percentage to display (value 100 is considered
--   100%). If not provided infinite progress is assumed and clients are
--   allowed to ignore the <tt>percentage</tt> value in subsequent in
--   report notifications.
--   
--   The value should be steadily rising. Clients are free to ignore values
--   that are not following this rule. The value range is [0, 100].
[$sel:_percentage:WorkDoneProgressBegin] :: WorkDoneProgressBegin -> Maybe UInt

data WindowClientCapabilities
WindowClientCapabilities :: Maybe Bool -> Maybe ShowMessageRequestClientCapabilities -> Maybe ShowDocumentClientCapabilities -> WindowClientCapabilities

-- | It indicates whether the client supports server initiated progress
--   using the `window<i>workDoneProgress</i>create` request.
--   
--   The capability also controls Whether client supports handling of
--   progress notifications. If set servers are allowed to report a
--   <tt>workDoneProgress</tt> property in the request specific server
--   capabilities.
[$sel:_workDoneProgress:WindowClientCapabilities] :: WindowClientCapabilities -> Maybe Bool

-- | Capabilities specific to the showMessage request.
[$sel:_showMessage:WindowClientCapabilities] :: WindowClientCapabilities -> Maybe ShowMessageRequestClientCapabilities

-- | Capabilities specific to the showDocument request.
[$sel:_showDocument:WindowClientCapabilities] :: WindowClientCapabilities -> Maybe ShowDocumentClientCapabilities

-- | The parameters sent in a will save text document notification.
data WillSaveTextDocumentParams
WillSaveTextDocumentParams :: TextDocumentIdentifier -> TextDocumentSaveReason -> WillSaveTextDocumentParams

-- | The document that will be saved.
[$sel:_textDocument:WillSaveTextDocumentParams] :: WillSaveTextDocumentParams -> TextDocumentIdentifier

-- | The <tt>TextDocumentSaveReason</tt>.
[$sel:_reason:WillSaveTextDocumentParams] :: WillSaveTextDocumentParams -> TextDocumentSaveReason

data WatchKind

-- | Interested in create events.
WatchKind_Create :: WatchKind

-- | Interested in change events
WatchKind_Change :: WatchKind

-- | Interested in delete events
WatchKind_Delete :: WatchKind
WatchKind_Custom :: UInt -> WatchKind

-- | A text document identifier to denote a specific version of a text
--   document.
data VersionedTextDocumentIdentifier
VersionedTextDocumentIdentifier :: Uri -> Int32 -> VersionedTextDocumentIdentifier

-- | The text document's uri.
[$sel:_uri:VersionedTextDocumentIdentifier] :: VersionedTextDocumentIdentifier -> Uri

-- | The version number of this document.
[$sel:_version:VersionedTextDocumentIdentifier] :: VersionedTextDocumentIdentifier -> Int32

-- | A versioned notebook document identifier.
data VersionedNotebookDocumentIdentifier
VersionedNotebookDocumentIdentifier :: Int32 -> Uri -> VersionedNotebookDocumentIdentifier

-- | The version number of this notebook document.
[$sel:_version:VersionedNotebookDocumentIdentifier] :: VersionedNotebookDocumentIdentifier -> Int32

-- | The notebook document's uri.
[$sel:_uri:VersionedNotebookDocumentIdentifier] :: VersionedNotebookDocumentIdentifier -> Uri

data UnregistrationParams
UnregistrationParams :: [Unregistration] -> UnregistrationParams

[$sel:_unregisterations:UnregistrationParams] :: UnregistrationParams -> [Unregistration]

-- | General parameters to unregister a request or notification.
data Unregistration
Unregistration :: Text -> Text -> Unregistration

-- | The id used to unregister the request or notification. Usually an id
--   provided during the register request.
[$sel:_id:Unregistration] :: Unregistration -> Text

-- | The method to unregister for.
[$sel:_method:Unregistration] :: Unregistration -> Text

-- | Moniker uniqueness level to define scope of the moniker.
data UniquenessLevel

-- | The moniker is only unique inside a document
UniquenessLevel_Document :: UniquenessLevel

-- | The moniker is unique inside a project for which a dump got created
UniquenessLevel_Project :: UniquenessLevel

-- | The moniker is unique inside the group to which a project belongs
UniquenessLevel_Group :: UniquenessLevel

-- | The moniker is unique inside the moniker scheme.
UniquenessLevel_Scheme :: UniquenessLevel

-- | The moniker is globally unique
UniquenessLevel_Global :: UniquenessLevel

-- | A diagnostic report indicating that the last returned report is still
--   accurate.
data UnchangedDocumentDiagnosticReport
UnchangedDocumentDiagnosticReport :: AString "unchanged" -> Text -> UnchangedDocumentDiagnosticReport

-- | A document diagnostic report indicating no changes to the last result.
--   A server can only return <tt>unchanged</tt> if result ids are
--   provided.
[$sel:_kind:UnchangedDocumentDiagnosticReport] :: UnchangedDocumentDiagnosticReport -> AString "unchanged"

-- | A result id which will be sent on the next diagnostic request for the
--   same document.
[$sel:_resultId:UnchangedDocumentDiagnosticReport] :: UnchangedDocumentDiagnosticReport -> Text

-- | The initialize parameters
data UInitializeParams
UInitializeParams :: Maybe ProgressToken -> (Int32 |? Null) -> Maybe (Rec (("name" .== Text) .+ (("version" .== Maybe Text) .+ Empty))) -> Maybe Text -> Maybe (Text |? Null) -> (Uri |? Null) -> ClientCapabilities -> Maybe Value -> Maybe TraceValues -> UInitializeParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:UInitializeParams] :: UInitializeParams -> Maybe ProgressToken

-- | The process Id of the parent process that started the server.
--   
--   Is <a>null</a> if the process has not been started by another process.
--   If the parent process is not alive then the server should exit.
[$sel:_processId:UInitializeParams] :: UInitializeParams -> Int32 |? Null

-- | Information about the client
[$sel:_clientInfo:UInitializeParams] :: UInitializeParams -> Maybe (Rec (("name" .== Text) .+ (("version" .== Maybe Text) .+ Empty)))

-- | The locale the client is currently showing the user interface in. This
--   must not necessarily be the locale of the operating system.
--   
--   Uses IETF language tags as the value's syntax (See
--   <a>https://en.wikipedia.org/wiki/IETF_language_tag)</a>
[$sel:_locale:UInitializeParams] :: UInitializeParams -> Maybe Text

-- | The rootPath of the workspace. Is null if no folder is open.
--   
--   @deprecated in favour of rootUri.
[$sel:_rootPath:UInitializeParams] :: UInitializeParams -> Maybe (Text |? Null)

-- | The rootUri of the workspace. Is null if no folder is open. If both
--   <tt>rootPath</tt> and <tt>rootUri</tt> are set <tt>rootUri</tt> wins.
--   
--   @deprecated in favour of workspaceFolders.
[$sel:_rootUri:UInitializeParams] :: UInitializeParams -> Uri |? Null

-- | The capabilities provided by the client (editor or tool)
[$sel:_capabilities:UInitializeParams] :: UInitializeParams -> ClientCapabilities

-- | User provided initialization options.
[$sel:_initializationOptions:UInitializeParams] :: UInitializeParams -> Maybe Value

-- | The initial trace setting. If omitted trace is disabled
--   (<tt>off</tt>).
[$sel:_trace:UInitializeParams] :: UInitializeParams -> Maybe TraceValues

-- | The parameter of a `typeHierarchy/supertypes` request.
data TypeHierarchySupertypesParams
TypeHierarchySupertypesParams :: Maybe ProgressToken -> Maybe ProgressToken -> TypeHierarchyItem -> TypeHierarchySupertypesParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:TypeHierarchySupertypesParams] :: TypeHierarchySupertypesParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:TypeHierarchySupertypesParams] :: TypeHierarchySupertypesParams -> Maybe ProgressToken

[$sel:_item:TypeHierarchySupertypesParams] :: TypeHierarchySupertypesParams -> TypeHierarchyItem

-- | The parameter of a `typeHierarchy/subtypes` request.
data TypeHierarchySubtypesParams
TypeHierarchySubtypesParams :: Maybe ProgressToken -> Maybe ProgressToken -> TypeHierarchyItem -> TypeHierarchySubtypesParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:TypeHierarchySubtypesParams] :: TypeHierarchySubtypesParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:TypeHierarchySubtypesParams] :: TypeHierarchySubtypesParams -> Maybe ProgressToken

[$sel:_item:TypeHierarchySubtypesParams] :: TypeHierarchySubtypesParams -> TypeHierarchyItem

-- | Type hierarchy options used during static or dynamic registration.
data TypeHierarchyRegistrationOptions
TypeHierarchyRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> TypeHierarchyRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:TypeHierarchyRegistrationOptions] :: TypeHierarchyRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:TypeHierarchyRegistrationOptions] :: TypeHierarchyRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:TypeHierarchyRegistrationOptions] :: TypeHierarchyRegistrationOptions -> Maybe Text

-- | The parameter of a `textDocument/prepareTypeHierarchy` request.
data TypeHierarchyPrepareParams
TypeHierarchyPrepareParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> TypeHierarchyPrepareParams

-- | The text document.
[$sel:_textDocument:TypeHierarchyPrepareParams] :: TypeHierarchyPrepareParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:TypeHierarchyPrepareParams] :: TypeHierarchyPrepareParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:TypeHierarchyPrepareParams] :: TypeHierarchyPrepareParams -> Maybe ProgressToken

-- | Type hierarchy options used during static registration.
data TypeHierarchyOptions
TypeHierarchyOptions :: Maybe Bool -> TypeHierarchyOptions

[$sel:_workDoneProgress:TypeHierarchyOptions] :: TypeHierarchyOptions -> Maybe Bool

data TypeHierarchyItem
TypeHierarchyItem :: Text -> SymbolKind -> Maybe [SymbolTag] -> Maybe Text -> Uri -> Range -> Range -> Maybe Value -> TypeHierarchyItem

-- | The name of this item.
[$sel:_name:TypeHierarchyItem] :: TypeHierarchyItem -> Text

-- | The kind of this item.
[$sel:_kind:TypeHierarchyItem] :: TypeHierarchyItem -> SymbolKind

-- | Tags for this item.
[$sel:_tags:TypeHierarchyItem] :: TypeHierarchyItem -> Maybe [SymbolTag]

-- | More detail for this item, e.g. the signature of a function.
[$sel:_detail:TypeHierarchyItem] :: TypeHierarchyItem -> Maybe Text

-- | The resource identifier of this item.
[$sel:_uri:TypeHierarchyItem] :: TypeHierarchyItem -> Uri

-- | The range enclosing this symbol not including leading/trailing
--   whitespace but everything else, e.g. comments and code.
[$sel:_range:TypeHierarchyItem] :: TypeHierarchyItem -> Range

-- | The range that should be selected and revealed when this symbol is
--   being picked, e.g. the name of a function. Must be contained by the
--   <a>range</a>.
[$sel:_selectionRange:TypeHierarchyItem] :: TypeHierarchyItem -> Range

-- | A data entry field that is preserved between a type hierarchy prepare
--   and supertypes or subtypes requests. It could also be used to identify
--   the type hierarchy in the server, helping improve the performance on
--   resolving supertypes and subtypes.
[$sel:_data_:TypeHierarchyItem] :: TypeHierarchyItem -> Maybe Value

data TypeHierarchyClientCapabilities
TypeHierarchyClientCapabilities :: Maybe Bool -> TypeHierarchyClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   `(TextDocumentRegistrationOptions &amp; StaticRegistrationOptions)`
--   return value for the corresponding server capability as well.
[$sel:_dynamicRegistration:TypeHierarchyClientCapabilities] :: TypeHierarchyClientCapabilities -> Maybe Bool

data TypeDefinitionRegistrationOptions
TypeDefinitionRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> TypeDefinitionRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:TypeDefinitionRegistrationOptions] :: TypeDefinitionRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:TypeDefinitionRegistrationOptions] :: TypeDefinitionRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:TypeDefinitionRegistrationOptions] :: TypeDefinitionRegistrationOptions -> Maybe Text

data TypeDefinitionParams
TypeDefinitionParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> TypeDefinitionParams

-- | The text document.
[$sel:_textDocument:TypeDefinitionParams] :: TypeDefinitionParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:TypeDefinitionParams] :: TypeDefinitionParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:TypeDefinitionParams] :: TypeDefinitionParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:TypeDefinitionParams] :: TypeDefinitionParams -> Maybe ProgressToken

data TypeDefinitionOptions
TypeDefinitionOptions :: Maybe Bool -> TypeDefinitionOptions

[$sel:_workDoneProgress:TypeDefinitionOptions] :: TypeDefinitionOptions -> Maybe Bool

-- | Since 3.6.0
data TypeDefinitionClientCapabilities
TypeDefinitionClientCapabilities :: Maybe Bool -> Maybe Bool -> TypeDefinitionClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   <tt>TypeDefinitionRegistrationOptions</tt> return value for the
--   corresponding server capability as well.
[$sel:_dynamicRegistration:TypeDefinitionClientCapabilities] :: TypeDefinitionClientCapabilities -> Maybe Bool

-- | The client supports additional metadata in the form of definition
--   links.
--   
--   Since 3.14.0
[$sel:_linkSupport:TypeDefinitionClientCapabilities] :: TypeDefinitionClientCapabilities -> Maybe Bool

data TraceValues

-- | Turn tracing off.
TraceValues_Off :: TraceValues

-- | Trace messages only.
TraceValues_Messages :: TraceValues

-- | Verbose message tracing.
TraceValues_Verbose :: TraceValues

data TokenFormat

TokenFormat_Relative :: TokenFormat

-- | A text edit applicable to a text document.
data TextEdit
TextEdit :: Range -> Text -> TextEdit

-- | The range of the text document to be manipulated. To insert text into
--   a document create a range where start === end.
[$sel:_range:TextEdit] :: TextEdit -> Range

-- | The string to be inserted. For delete operations use an empty string.
[$sel:_newText:TextEdit] :: TextEdit -> Text

data TextDocumentSyncOptions
TextDocumentSyncOptions :: Maybe Bool -> Maybe TextDocumentSyncKind -> Maybe Bool -> Maybe Bool -> Maybe (Bool |? SaveOptions) -> TextDocumentSyncOptions

-- | Open and close notifications are sent to the server. If omitted open
--   close notification should not be sent.
[$sel:_openClose:TextDocumentSyncOptions] :: TextDocumentSyncOptions -> Maybe Bool

-- | Change notifications are sent to the server. See
--   TextDocumentSyncKind.None, TextDocumentSyncKind.Full and
--   TextDocumentSyncKind.Incremental. If omitted it defaults to
--   TextDocumentSyncKind.None.
[$sel:_change:TextDocumentSyncOptions] :: TextDocumentSyncOptions -> Maybe TextDocumentSyncKind

-- | If present will save notifications are sent to the server. If omitted
--   the notification should not be sent.
[$sel:_willSave:TextDocumentSyncOptions] :: TextDocumentSyncOptions -> Maybe Bool

-- | If present will save wait until requests are sent to the server. If
--   omitted the request should not be sent.
[$sel:_willSaveWaitUntil:TextDocumentSyncOptions] :: TextDocumentSyncOptions -> Maybe Bool

-- | If present save notifications are sent to the server. If omitted the
--   notification should not be sent.
[$sel:_save:TextDocumentSyncOptions] :: TextDocumentSyncOptions -> Maybe (Bool |? SaveOptions)

-- | Defines how the host (editor) should sync document changes to the
--   language server.
data TextDocumentSyncKind

-- | Documents should not be synced at all.
TextDocumentSyncKind_None :: TextDocumentSyncKind

-- | Documents are synced by always sending the full content of the
--   document.
TextDocumentSyncKind_Full :: TextDocumentSyncKind

-- | Documents are synced by sending the full content on open. After that
--   only incremental updates to the document are send.
TextDocumentSyncKind_Incremental :: TextDocumentSyncKind

data TextDocumentSyncClientCapabilities
TextDocumentSyncClientCapabilities :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> TextDocumentSyncClientCapabilities

-- | Whether text document synchronization supports dynamic registration.
[$sel:_dynamicRegistration:TextDocumentSyncClientCapabilities] :: TextDocumentSyncClientCapabilities -> Maybe Bool

-- | The client supports sending will save notifications.
[$sel:_willSave:TextDocumentSyncClientCapabilities] :: TextDocumentSyncClientCapabilities -> Maybe Bool

-- | The client supports sending a will save request and waits for a
--   response providing text edits which will be applied to the document
--   before it is saved.
[$sel:_willSaveWaitUntil:TextDocumentSyncClientCapabilities] :: TextDocumentSyncClientCapabilities -> Maybe Bool

-- | The client supports did save notifications.
[$sel:_didSave:TextDocumentSyncClientCapabilities] :: TextDocumentSyncClientCapabilities -> Maybe Bool

-- | Save registration options.
data TextDocumentSaveRegistrationOptions
TextDocumentSaveRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> TextDocumentSaveRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:TextDocumentSaveRegistrationOptions] :: TextDocumentSaveRegistrationOptions -> DocumentSelector |? Null

-- | The client is supposed to include the content on save.
[$sel:_includeText:TextDocumentSaveRegistrationOptions] :: TextDocumentSaveRegistrationOptions -> Maybe Bool

-- | Represents reasons why a text document is saved.
data TextDocumentSaveReason

-- | Manually triggered, e.g. by the user pressing save, by starting
--   debugging, or by an API call.
TextDocumentSaveReason_Manual :: TextDocumentSaveReason

-- | Automatic after a delay.
TextDocumentSaveReason_AfterDelay :: TextDocumentSaveReason

-- | When the editor lost focus.
TextDocumentSaveReason_FocusOut :: TextDocumentSaveReason

-- | General text document registration options.
data TextDocumentRegistrationOptions
TextDocumentRegistrationOptions :: (DocumentSelector |? Null) -> TextDocumentRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:TextDocumentRegistrationOptions] :: TextDocumentRegistrationOptions -> DocumentSelector |? Null

-- | A parameter literal used in requests to pass a text document and a
--   position inside that document.
data TextDocumentPositionParams
TextDocumentPositionParams :: TextDocumentIdentifier -> Position -> TextDocumentPositionParams

-- | The text document.
[$sel:_textDocument:TextDocumentPositionParams] :: TextDocumentPositionParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:TextDocumentPositionParams] :: TextDocumentPositionParams -> Position

-- | An item to transfer a text document from the client to the server.
data TextDocumentItem
TextDocumentItem :: Uri -> Text -> Int32 -> Text -> TextDocumentItem

-- | The text document's uri.
[$sel:_uri:TextDocumentItem] :: TextDocumentItem -> Uri

-- | The text document's language identifier.
[$sel:_languageId:TextDocumentItem] :: TextDocumentItem -> Text

-- | The version number of this document (it will increase after each
--   change, including undo/redo).
[$sel:_version:TextDocumentItem] :: TextDocumentItem -> Int32

-- | The content of the opened text document.
[$sel:_text:TextDocumentItem] :: TextDocumentItem -> Text

-- | A literal to identify a text document in the client.
data TextDocumentIdentifier
TextDocumentIdentifier :: Uri -> TextDocumentIdentifier

-- | The text document's uri.
[$sel:_uri:TextDocumentIdentifier] :: TextDocumentIdentifier -> Uri

-- | A document filter denotes a document by different properties like the
--   <a>languageId</a> of its resource, or a glob-pattern that is applied
--   to the <a>fileName</a>.
--   
--   Glob patterns can have the following syntax: - <a>*</a> to match one
--   or more characters in a path segment - <tt>?</tt> to match on one
--   character in a path segment - <a>**</a> to match any number of path
--   segments, including none - `{}` to group sub patterns into an OR
--   expression. (e.g. `**​/*.{ts,js}` matches all TypeScript and
--   JavaScript files) - `[]` to declare a range of characters to match in
--   a path segment (e.g., `example.[0-9]` to match on `example.0`,
--   `example.1`, …) - `[!...]` to negate a range of characters to match in
--   a path segment (e.g., `example.[!0-9]` to match on `example.a`,
--   `example.b`, but not `example.0`)
--   
--   <tt>sample A language filter that applies to typescript files on disk:
--   `{ language: <tt>typescript</tt>, scheme: <tt>file</tt> }` </tt>sample
--   A language filter that applies to all package.json paths: `{ language:
--   <tt>json</tt>, pattern: '**package.json' }`
newtype TextDocumentFilter
TextDocumentFilter :: (Rec (("language" .== Text) .+ (("scheme" .== Maybe Text) .+ (("pattern" .== Maybe Text) .+ Empty))) |? (Rec (("language" .== Maybe Text) .+ (("scheme" .== Text) .+ (("pattern" .== Maybe Text) .+ Empty))) |? Rec (("language" .== Maybe Text) .+ (("scheme" .== Maybe Text) .+ (("pattern" .== Text) .+ Empty))))) -> TextDocumentFilter

-- | Describes textual changes on a text document. A TextDocumentEdit
--   describes all changes on a document version Si and after they are
--   applied move the document to version Si+1. So the creator of a
--   TextDocumentEdit doesn't need to sort the array of edits or do any
--   kind of ordering. However the edits must be non overlapping.
data TextDocumentEdit
TextDocumentEdit :: OptionalVersionedTextDocumentIdentifier -> [TextEdit |? AnnotatedTextEdit] -> TextDocumentEdit

-- | The text document to change.
[$sel:_textDocument:TextDocumentEdit] :: TextDocumentEdit -> OptionalVersionedTextDocumentIdentifier

-- | The edits to be applied.
--   
--   @since 3.16.0 - support for AnnotatedTextEdit. This is guarded using a
--   client capability.
[$sel:_edits:TextDocumentEdit] :: TextDocumentEdit -> [TextEdit |? AnnotatedTextEdit]

-- | An event describing a change to a text document. If only a text is
--   provided it is considered to be the full content of the document.
newtype TextDocumentContentChangeEvent
TextDocumentContentChangeEvent :: (Rec (("range" .== Range) .+ (("rangeLength" .== Maybe UInt) .+ (("text" .== Text) .+ Empty))) |? Rec (("text" .== Text) .+ Empty)) -> TextDocumentContentChangeEvent

-- | Text document specific client capabilities.
data TextDocumentClientCapabilities
TextDocumentClientCapabilities :: Maybe TextDocumentSyncClientCapabilities -> Maybe CompletionClientCapabilities -> Maybe HoverClientCapabilities -> Maybe SignatureHelpClientCapabilities -> Maybe DeclarationClientCapabilities -> Maybe DefinitionClientCapabilities -> Maybe TypeDefinitionClientCapabilities -> Maybe ImplementationClientCapabilities -> Maybe ReferenceClientCapabilities -> Maybe DocumentHighlightClientCapabilities -> Maybe DocumentSymbolClientCapabilities -> Maybe CodeActionClientCapabilities -> Maybe CodeLensClientCapabilities -> Maybe DocumentLinkClientCapabilities -> Maybe DocumentColorClientCapabilities -> Maybe DocumentFormattingClientCapabilities -> Maybe DocumentRangeFormattingClientCapabilities -> Maybe DocumentOnTypeFormattingClientCapabilities -> Maybe RenameClientCapabilities -> Maybe FoldingRangeClientCapabilities -> Maybe SelectionRangeClientCapabilities -> Maybe PublishDiagnosticsClientCapabilities -> Maybe CallHierarchyClientCapabilities -> Maybe SemanticTokensClientCapabilities -> Maybe LinkedEditingRangeClientCapabilities -> Maybe MonikerClientCapabilities -> Maybe TypeHierarchyClientCapabilities -> Maybe InlineValueClientCapabilities -> Maybe InlayHintClientCapabilities -> Maybe DiagnosticClientCapabilities -> TextDocumentClientCapabilities

-- | Defines which synchronization capabilities the client supports.
[$sel:_synchronization:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe TextDocumentSyncClientCapabilities

-- | Capabilities specific to the `textDocument/completion` request.
[$sel:_completion:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe CompletionClientCapabilities

-- | Capabilities specific to the `textDocument/hover` request.
[$sel:_hover:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe HoverClientCapabilities

-- | Capabilities specific to the `textDocument/signatureHelp` request.
[$sel:_signatureHelp:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe SignatureHelpClientCapabilities

-- | Capabilities specific to the `textDocument/declaration` request.
[$sel:_declaration:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DeclarationClientCapabilities

-- | Capabilities specific to the `textDocument/definition` request.
[$sel:_definition:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DefinitionClientCapabilities

-- | Capabilities specific to the `textDocument/typeDefinition` request.
[$sel:_typeDefinition:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe TypeDefinitionClientCapabilities

-- | Capabilities specific to the `textDocument/implementation` request.
[$sel:_implementation:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe ImplementationClientCapabilities

-- | Capabilities specific to the `textDocument/references` request.
[$sel:_references:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe ReferenceClientCapabilities

-- | Capabilities specific to the `textDocument/documentHighlight` request.
[$sel:_documentHighlight:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentHighlightClientCapabilities

-- | Capabilities specific to the `textDocument/documentSymbol` request.
[$sel:_documentSymbol:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentSymbolClientCapabilities

-- | Capabilities specific to the `textDocument/codeAction` request.
[$sel:_codeAction:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe CodeActionClientCapabilities

-- | Capabilities specific to the `textDocument/codeLens` request.
[$sel:_codeLens:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe CodeLensClientCapabilities

-- | Capabilities specific to the `textDocument/documentLink` request.
[$sel:_documentLink:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentLinkClientCapabilities

-- | Capabilities specific to the `textDocument/documentColor` and the
--   `textDocument/colorPresentation` request.
[$sel:_colorProvider:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentColorClientCapabilities

-- | Capabilities specific to the `textDocument/formatting` request.
[$sel:_formatting:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentFormattingClientCapabilities

-- | Capabilities specific to the `textDocument/rangeFormatting` request.
[$sel:_rangeFormatting:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentRangeFormattingClientCapabilities

-- | Capabilities specific to the `textDocument/onTypeFormatting` request.
[$sel:_onTypeFormatting:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DocumentOnTypeFormattingClientCapabilities

-- | Capabilities specific to the `textDocument/rename` request.
[$sel:_rename:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe RenameClientCapabilities

-- | Capabilities specific to the `textDocument/foldingRange` request.
[$sel:_foldingRange:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe FoldingRangeClientCapabilities

-- | Capabilities specific to the `textDocument/selectionRange` request.
[$sel:_selectionRange:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe SelectionRangeClientCapabilities

-- | Capabilities specific to the `textDocument/publishDiagnostics`
--   notification.
[$sel:_publishDiagnostics:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe PublishDiagnosticsClientCapabilities

-- | Capabilities specific to the various call hierarchy requests.
[$sel:_callHierarchy:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe CallHierarchyClientCapabilities

-- | Capabilities specific to the various semantic token request.
[$sel:_semanticTokens:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe SemanticTokensClientCapabilities

-- | Capabilities specific to the `textDocument/linkedEditingRange`
--   request.
[$sel:_linkedEditingRange:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe LinkedEditingRangeClientCapabilities

-- | Client capabilities specific to the `textDocument/moniker` request.
[$sel:_moniker:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe MonikerClientCapabilities

-- | Capabilities specific to the various type hierarchy requests.
[$sel:_typeHierarchy:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe TypeHierarchyClientCapabilities

-- | Capabilities specific to the `textDocument/inlineValue` request.
[$sel:_inlineValue:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe InlineValueClientCapabilities

-- | Capabilities specific to the `textDocument/inlayHint` request.
[$sel:_inlayHint:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe InlayHintClientCapabilities

-- | Capabilities specific to the diagnostic pull model.
[$sel:_diagnostic:TextDocumentClientCapabilities] :: TextDocumentClientCapabilities -> Maybe DiagnosticClientCapabilities

-- | Describe options to be used when registered for text document change
--   events.
data TextDocumentChangeRegistrationOptions
TextDocumentChangeRegistrationOptions :: (DocumentSelector |? Null) -> TextDocumentSyncKind -> TextDocumentChangeRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:TextDocumentChangeRegistrationOptions] :: TextDocumentChangeRegistrationOptions -> DocumentSelector |? Null

-- | How documents are synced to the server.
[$sel:_syncKind:TextDocumentChangeRegistrationOptions] :: TextDocumentChangeRegistrationOptions -> TextDocumentSyncKind

-- | Symbol tags are extra annotations that tweak the rendering of a
--   symbol.
data SymbolTag

-- | Render a symbol as obsolete, usually using a strike-out.
SymbolTag_Deprecated :: SymbolTag

-- | A symbol kind.
data SymbolKind

SymbolKind_File :: SymbolKind

SymbolKind_Module :: SymbolKind

SymbolKind_Namespace :: SymbolKind

SymbolKind_Package :: SymbolKind

SymbolKind_Class :: SymbolKind

SymbolKind_Method :: SymbolKind

SymbolKind_Property :: SymbolKind

SymbolKind_Field :: SymbolKind

SymbolKind_Constructor :: SymbolKind

SymbolKind_Enum :: SymbolKind

SymbolKind_Interface :: SymbolKind

SymbolKind_Function :: SymbolKind

SymbolKind_Variable :: SymbolKind

SymbolKind_Constant :: SymbolKind

SymbolKind_String :: SymbolKind

SymbolKind_Number :: SymbolKind

SymbolKind_Boolean :: SymbolKind

SymbolKind_Array :: SymbolKind

SymbolKind_Object :: SymbolKind

SymbolKind_Key :: SymbolKind

SymbolKind_Null :: SymbolKind

SymbolKind_EnumMember :: SymbolKind

SymbolKind_Struct :: SymbolKind

SymbolKind_Event :: SymbolKind

SymbolKind_Operator :: SymbolKind

SymbolKind_TypeParameter :: SymbolKind

-- | Represents information about programming constructs like variables,
--   classes, interfaces etc.
data SymbolInformation
SymbolInformation :: Text -> SymbolKind -> Maybe [SymbolTag] -> Maybe Text -> Maybe Bool -> Location -> SymbolInformation

-- | The name of this symbol.
[$sel:_name:SymbolInformation] :: SymbolInformation -> Text

-- | The kind of this symbol.
[$sel:_kind:SymbolInformation] :: SymbolInformation -> SymbolKind

-- | Tags for this symbol.
[$sel:_tags:SymbolInformation] :: SymbolInformation -> Maybe [SymbolTag]

-- | The name of the symbol containing this symbol. This information is for
--   user interface purposes (e.g. to render a qualifier in the user
--   interface if necessary). It can't be used to re-infer a hierarchy for
--   the document symbols.
[$sel:_containerName:SymbolInformation] :: SymbolInformation -> Maybe Text

-- | Indicates if this symbol is deprecated.
--   
--   @deprecated Use tags instead
[$sel:_deprecated:SymbolInformation] :: SymbolInformation -> Maybe Bool

-- | The location of this symbol. The location's range is used by a tool to
--   reveal the location in the editor. If the symbol is selected in the
--   tool the range's start information is used to position the cursor. So
--   the range usually spans more than the actual symbol's name and does
--   normally include things like visibility modifiers.
--   
--   The range doesn't have to denote a node range in the sense of an
--   abstract syntax tree. It can therefore not be used to re-construct a
--   hierarchy of the symbols.
[$sel:_location:SymbolInformation] :: SymbolInformation -> Location

-- | Static registration options to be returned in the initialize request.
data StaticRegistrationOptions
StaticRegistrationOptions :: Maybe Text -> StaticRegistrationOptions

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:StaticRegistrationOptions] :: StaticRegistrationOptions -> Maybe Text

-- | Represents the signature of something callable. A signature can have a
--   label, like a function-name, a doc-comment, and a set of parameters.
data SignatureInformation
SignatureInformation :: Text -> Maybe (Text |? MarkupContent) -> Maybe [ParameterInformation] -> Maybe UInt -> SignatureInformation

-- | The label of this signature. Will be shown in the UI.
[$sel:_label:SignatureInformation] :: SignatureInformation -> Text

-- | The human-readable doc-comment of this signature. Will be shown in the
--   UI but can be omitted.
[$sel:_documentation:SignatureInformation] :: SignatureInformation -> Maybe (Text |? MarkupContent)

-- | The parameters of this signature.
[$sel:_parameters:SignatureInformation] :: SignatureInformation -> Maybe [ParameterInformation]

-- | The index of the active parameter.
--   
--   If provided, this is used in place of <a>activeParameter</a>.
[$sel:_activeParameter:SignatureInformation] :: SignatureInformation -> Maybe UInt

-- | How a signature help was triggered.
data SignatureHelpTriggerKind

-- | Signature help was invoked manually by the user or by a command.
SignatureHelpTriggerKind_Invoked :: SignatureHelpTriggerKind

-- | Signature help was triggered by a trigger character.
SignatureHelpTriggerKind_TriggerCharacter :: SignatureHelpTriggerKind

-- | Signature help was triggered by the cursor moving or by the document
--   content changing.
SignatureHelpTriggerKind_ContentChange :: SignatureHelpTriggerKind

-- | Registration options for a <tt>SignatureHelpRequest</tt>.
data SignatureHelpRegistrationOptions
SignatureHelpRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> SignatureHelpRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:SignatureHelpRegistrationOptions] :: SignatureHelpRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:SignatureHelpRegistrationOptions] :: SignatureHelpRegistrationOptions -> Maybe Bool

-- | List of characters that trigger signature help automatically.
[$sel:_triggerCharacters:SignatureHelpRegistrationOptions] :: SignatureHelpRegistrationOptions -> Maybe [Text]

-- | List of characters that re-trigger signature help.
--   
--   These trigger characters are only active when signature help is
--   already showing. All trigger characters are also counted as re-trigger
--   characters.
[$sel:_retriggerCharacters:SignatureHelpRegistrationOptions] :: SignatureHelpRegistrationOptions -> Maybe [Text]

-- | Parameters for a <tt>SignatureHelpRequest</tt>.
data SignatureHelpParams
SignatureHelpParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe SignatureHelpContext -> SignatureHelpParams

-- | The text document.
[$sel:_textDocument:SignatureHelpParams] :: SignatureHelpParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:SignatureHelpParams] :: SignatureHelpParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:SignatureHelpParams] :: SignatureHelpParams -> Maybe ProgressToken

-- | The signature help context. This is only available if the client
--   specifies to send this using the client capability
--   `textDocument.signatureHelp.contextSupport === true`
[$sel:_context:SignatureHelpParams] :: SignatureHelpParams -> Maybe SignatureHelpContext

-- | Server Capabilities for a <tt>SignatureHelpRequest</tt>.
data SignatureHelpOptions
SignatureHelpOptions :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> SignatureHelpOptions

[$sel:_workDoneProgress:SignatureHelpOptions] :: SignatureHelpOptions -> Maybe Bool

-- | List of characters that trigger signature help automatically.
[$sel:_triggerCharacters:SignatureHelpOptions] :: SignatureHelpOptions -> Maybe [Text]

-- | List of characters that re-trigger signature help.
--   
--   These trigger characters are only active when signature help is
--   already showing. All trigger characters are also counted as re-trigger
--   characters.
[$sel:_retriggerCharacters:SignatureHelpOptions] :: SignatureHelpOptions -> Maybe [Text]

-- | Additional information about the context in which a signature help
--   request was triggered.
data SignatureHelpContext
SignatureHelpContext :: SignatureHelpTriggerKind -> Maybe Text -> Bool -> Maybe SignatureHelp -> SignatureHelpContext

-- | Action that caused signature help to be triggered.
[$sel:_triggerKind:SignatureHelpContext] :: SignatureHelpContext -> SignatureHelpTriggerKind

-- | Character that caused signature help to be triggered.
--   
--   This is undefined when `triggerKind !==
--   SignatureHelpTriggerKind.TriggerCharacter`
[$sel:_triggerCharacter:SignatureHelpContext] :: SignatureHelpContext -> Maybe Text

-- | <tt>true</tt> if signature help was already showing when it was
--   triggered.
--   
--   Retriggers occurs when the signature help is already active and can be
--   caused by actions such as typing a trigger character, a cursor move,
--   or document content changes.
[$sel:_isRetrigger:SignatureHelpContext] :: SignatureHelpContext -> Bool

-- | The currently active <tt>SignatureHelp</tt>.
--   
--   The <tt>activeSignatureHelp</tt> has its <a>activeSignature</a> field
--   updated based on the user navigating through available signatures.
[$sel:_activeSignatureHelp:SignatureHelpContext] :: SignatureHelpContext -> Maybe SignatureHelp

-- | Client Capabilities for a <tt>SignatureHelpRequest</tt>.
data SignatureHelpClientCapabilities
SignatureHelpClientCapabilities :: Maybe Bool -> Maybe (Rec (("documentationFormat" .== Maybe [MarkupKind]) .+ (("parameterInformation" .== Maybe (Rec (("labelOffsetSupport" .== Maybe Bool) .+ Empty))) .+ (("activeParameterSupport" .== Maybe Bool) .+ Empty)))) -> Maybe Bool -> SignatureHelpClientCapabilities

-- | Whether signature help supports dynamic registration.
[$sel:_dynamicRegistration:SignatureHelpClientCapabilities] :: SignatureHelpClientCapabilities -> Maybe Bool

-- | The client supports the following <tt>SignatureInformation</tt>
--   specific properties.
[$sel:_signatureInformation:SignatureHelpClientCapabilities] :: SignatureHelpClientCapabilities -> Maybe (Rec (("documentationFormat" .== Maybe [MarkupKind]) .+ (("parameterInformation" .== Maybe (Rec (("labelOffsetSupport" .== Maybe Bool) .+ Empty))) .+ (("activeParameterSupport" .== Maybe Bool) .+ Empty))))

-- | The client supports to send additional context information for a
--   `textDocument/signatureHelp` request. A client that opts into
--   contextSupport will also support the <tt>retriggerCharacters</tt> on
--   <tt>SignatureHelpOptions</tt>.
[$sel:_contextSupport:SignatureHelpClientCapabilities] :: SignatureHelpClientCapabilities -> Maybe Bool

-- | Signature help represents the signature of something callable. There
--   can be multiple signature but only one active and only one active
--   parameter.
data SignatureHelp
SignatureHelp :: [SignatureInformation] -> Maybe UInt -> Maybe UInt -> SignatureHelp

-- | One or more signatures.
[$sel:_signatures:SignatureHelp] :: SignatureHelp -> [SignatureInformation]

-- | The active signature. If omitted or the value lies outside the range
--   of <tt>signatures</tt> the value defaults to zero or is ignored if the
--   <a>SignatureHelp</a> has no signatures.
--   
--   Whenever possible implementors should make an active decision about
--   the active signature and shouldn't rely on a default value.
--   
--   In future version of the protocol this property might become mandatory
--   to better express this.
[$sel:_activeSignature:SignatureHelp] :: SignatureHelp -> Maybe UInt

-- | The active parameter of the active signature. If omitted or the value
--   lies outside the range of `signatures[activeSignature].parameters`
--   defaults to 0 if the active signature has parameters. If the active
--   signature has no parameters it is ignored. In future version of the
--   protocol this property might become mandatory to better express the
--   active parameter if the active signature does have any.
[$sel:_activeParameter:SignatureHelp] :: SignatureHelp -> Maybe UInt

data ShowMessageRequestParams
ShowMessageRequestParams :: MessageType -> Text -> Maybe [MessageActionItem] -> ShowMessageRequestParams

-- | The message type. See <tt>MessageType</tt>
[$sel:_type_:ShowMessageRequestParams] :: ShowMessageRequestParams -> MessageType

-- | The actual message.
[$sel:_message:ShowMessageRequestParams] :: ShowMessageRequestParams -> Text

-- | The message action items to present.
[$sel:_actions:ShowMessageRequestParams] :: ShowMessageRequestParams -> Maybe [MessageActionItem]

-- | Show message request client capabilities
data ShowMessageRequestClientCapabilities
ShowMessageRequestClientCapabilities :: Maybe (Rec (("additionalPropertiesSupport" .== Maybe Bool) .+ Empty)) -> ShowMessageRequestClientCapabilities

-- | Capabilities specific to the <tt>MessageActionItem</tt> type.
[$sel:_messageActionItem:ShowMessageRequestClientCapabilities] :: ShowMessageRequestClientCapabilities -> Maybe (Rec (("additionalPropertiesSupport" .== Maybe Bool) .+ Empty))

-- | The parameters of a notification message.
data ShowMessageParams
ShowMessageParams :: MessageType -> Text -> ShowMessageParams

-- | The message type. See <tt>MessageType</tt>
[$sel:_type_:ShowMessageParams] :: ShowMessageParams -> MessageType

-- | The actual message.
[$sel:_message:ShowMessageParams] :: ShowMessageParams -> Text

-- | The result of a showDocument request.
data ShowDocumentResult
ShowDocumentResult :: Bool -> ShowDocumentResult

-- | A boolean indicating if the show was successful.
[$sel:_success:ShowDocumentResult] :: ShowDocumentResult -> Bool

-- | Params to show a document.
data ShowDocumentParams
ShowDocumentParams :: Uri -> Maybe Bool -> Maybe Bool -> Maybe Range -> ShowDocumentParams

-- | The document uri to show.
[$sel:_uri:ShowDocumentParams] :: ShowDocumentParams -> Uri

-- | Indicates to show the resource in an external program. To show for
--   example `<a>https://code.visualstudio.com/`</a> in the default WEB
--   browser set <tt>external</tt> to <tt>true</tt>.
[$sel:_external:ShowDocumentParams] :: ShowDocumentParams -> Maybe Bool

-- | An optional property to indicate whether the editor showing the
--   document should take focus or not. Clients might ignore this property
--   if an external program is started.
[$sel:_takeFocus:ShowDocumentParams] :: ShowDocumentParams -> Maybe Bool

-- | An optional selection range if the document is a text document.
--   Clients might ignore the property if an external program is started or
--   the file is not a text file.
[$sel:_selection:ShowDocumentParams] :: ShowDocumentParams -> Maybe Range

-- | Client capabilities for the showDocument request.
data ShowDocumentClientCapabilities
ShowDocumentClientCapabilities :: Bool -> ShowDocumentClientCapabilities

-- | The client has support for the showDocument request.
[$sel:_support:ShowDocumentClientCapabilities] :: ShowDocumentClientCapabilities -> Bool

data SetTraceParams
SetTraceParams :: TraceValues -> SetTraceParams

[$sel:_value:SetTraceParams] :: SetTraceParams -> TraceValues

-- | Defines the capabilities provided by a language server.
data ServerCapabilities
ServerCapabilities :: Maybe PositionEncodingKind -> Maybe (TextDocumentSyncOptions |? TextDocumentSyncKind) -> Maybe (NotebookDocumentSyncOptions |? NotebookDocumentSyncRegistrationOptions) -> Maybe CompletionOptions -> Maybe (Bool |? HoverOptions) -> Maybe SignatureHelpOptions -> Maybe (Bool |? (DeclarationOptions |? DeclarationRegistrationOptions)) -> Maybe (Bool |? DefinitionOptions) -> Maybe (Bool |? (TypeDefinitionOptions |? TypeDefinitionRegistrationOptions)) -> Maybe (Bool |? (ImplementationOptions |? ImplementationRegistrationOptions)) -> Maybe (Bool |? ReferenceOptions) -> Maybe (Bool |? DocumentHighlightOptions) -> Maybe (Bool |? DocumentSymbolOptions) -> Maybe (Bool |? CodeActionOptions) -> Maybe CodeLensOptions -> Maybe DocumentLinkOptions -> Maybe (Bool |? (DocumentColorOptions |? DocumentColorRegistrationOptions)) -> Maybe (Bool |? WorkspaceSymbolOptions) -> Maybe (Bool |? DocumentFormattingOptions) -> Maybe (Bool |? DocumentRangeFormattingOptions) -> Maybe DocumentOnTypeFormattingOptions -> Maybe (Bool |? RenameOptions) -> Maybe (Bool |? (FoldingRangeOptions |? FoldingRangeRegistrationOptions)) -> Maybe (Bool |? (SelectionRangeOptions |? SelectionRangeRegistrationOptions)) -> Maybe ExecuteCommandOptions -> Maybe (Bool |? (CallHierarchyOptions |? CallHierarchyRegistrationOptions)) -> Maybe (Bool |? (LinkedEditingRangeOptions |? LinkedEditingRangeRegistrationOptions)) -> Maybe (SemanticTokensOptions |? SemanticTokensRegistrationOptions) -> Maybe (Bool |? (MonikerOptions |? MonikerRegistrationOptions)) -> Maybe (Bool |? (TypeHierarchyOptions |? TypeHierarchyRegistrationOptions)) -> Maybe (Bool |? (InlineValueOptions |? InlineValueRegistrationOptions)) -> Maybe (Bool |? (InlayHintOptions |? InlayHintRegistrationOptions)) -> Maybe (DiagnosticOptions |? DiagnosticRegistrationOptions) -> Maybe (Rec (("workspaceFolders" .== Maybe WorkspaceFoldersServerCapabilities) .+ (("fileOperations" .== Maybe FileOperationOptions) .+ Empty))) -> Maybe Value -> ServerCapabilities

-- | The position encoding the server picked from the encodings offered by
--   the client via the client capability `general.positionEncodings`.
--   
--   If the client didn't provide any position encodings the only valid
--   value that a server can return is 'utf-16'.
--   
--   If omitted it defaults to 'utf-16'.
[$sel:_positionEncoding:ServerCapabilities] :: ServerCapabilities -> Maybe PositionEncodingKind

-- | Defines how text documents are synced. Is either a detailed structure
--   defining each notification or for backwards compatibility the
--   TextDocumentSyncKind number.
[$sel:_textDocumentSync:ServerCapabilities] :: ServerCapabilities -> Maybe (TextDocumentSyncOptions |? TextDocumentSyncKind)

-- | Defines how notebook documents are synced.
[$sel:_notebookDocumentSync:ServerCapabilities] :: ServerCapabilities -> Maybe (NotebookDocumentSyncOptions |? NotebookDocumentSyncRegistrationOptions)

-- | The server provides completion support.
[$sel:_completionProvider:ServerCapabilities] :: ServerCapabilities -> Maybe CompletionOptions

-- | The server provides hover support.
[$sel:_hoverProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? HoverOptions)

-- | The server provides signature help support.
[$sel:_signatureHelpProvider:ServerCapabilities] :: ServerCapabilities -> Maybe SignatureHelpOptions

-- | The server provides Goto Declaration support.
[$sel:_declarationProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (DeclarationOptions |? DeclarationRegistrationOptions))

-- | The server provides goto definition support.
[$sel:_definitionProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? DefinitionOptions)

-- | The server provides Goto Type Definition support.
[$sel:_typeDefinitionProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (TypeDefinitionOptions |? TypeDefinitionRegistrationOptions))

-- | The server provides Goto Implementation support.
[$sel:_implementationProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (ImplementationOptions |? ImplementationRegistrationOptions))

-- | The server provides find references support.
[$sel:_referencesProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? ReferenceOptions)

-- | The server provides document highlight support.
[$sel:_documentHighlightProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? DocumentHighlightOptions)

-- | The server provides document symbol support.
[$sel:_documentSymbolProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? DocumentSymbolOptions)

-- | The server provides code actions. CodeActionOptions may only be
--   specified if the client states that it supports
--   <tt>codeActionLiteralSupport</tt> in its initial <tt>initialize</tt>
--   request.
[$sel:_codeActionProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? CodeActionOptions)

-- | The server provides code lens.
[$sel:_codeLensProvider:ServerCapabilities] :: ServerCapabilities -> Maybe CodeLensOptions

-- | The server provides document link support.
[$sel:_documentLinkProvider:ServerCapabilities] :: ServerCapabilities -> Maybe DocumentLinkOptions

-- | The server provides color provider support.
[$sel:_colorProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (DocumentColorOptions |? DocumentColorRegistrationOptions))

-- | The server provides workspace symbol support.
[$sel:_workspaceSymbolProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? WorkspaceSymbolOptions)

-- | The server provides document formatting.
[$sel:_documentFormattingProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? DocumentFormattingOptions)

-- | The server provides document range formatting.
[$sel:_documentRangeFormattingProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? DocumentRangeFormattingOptions)

-- | The server provides document formatting on typing.
[$sel:_documentOnTypeFormattingProvider:ServerCapabilities] :: ServerCapabilities -> Maybe DocumentOnTypeFormattingOptions

-- | The server provides rename support. RenameOptions may only be
--   specified if the client states that it supports
--   <tt>prepareSupport</tt> in its initial <tt>initialize</tt> request.
[$sel:_renameProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? RenameOptions)

-- | The server provides folding provider support.
[$sel:_foldingRangeProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (FoldingRangeOptions |? FoldingRangeRegistrationOptions))

-- | The server provides selection range support.
[$sel:_selectionRangeProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (SelectionRangeOptions |? SelectionRangeRegistrationOptions))

-- | The server provides execute command support.
[$sel:_executeCommandProvider:ServerCapabilities] :: ServerCapabilities -> Maybe ExecuteCommandOptions

-- | The server provides call hierarchy support.
[$sel:_callHierarchyProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (CallHierarchyOptions |? CallHierarchyRegistrationOptions))

-- | The server provides linked editing range support.
[$sel:_linkedEditingRangeProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (LinkedEditingRangeOptions |? LinkedEditingRangeRegistrationOptions))

-- | The server provides semantic tokens support.
[$sel:_semanticTokensProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (SemanticTokensOptions |? SemanticTokensRegistrationOptions)

-- | The server provides moniker support.
[$sel:_monikerProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (MonikerOptions |? MonikerRegistrationOptions))

-- | The server provides type hierarchy support.
[$sel:_typeHierarchyProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (TypeHierarchyOptions |? TypeHierarchyRegistrationOptions))

-- | The server provides inline values.
[$sel:_inlineValueProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (InlineValueOptions |? InlineValueRegistrationOptions))

-- | The server provides inlay hints.
[$sel:_inlayHintProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (Bool |? (InlayHintOptions |? InlayHintRegistrationOptions))

-- | The server has support for pull model diagnostics.
[$sel:_diagnosticProvider:ServerCapabilities] :: ServerCapabilities -> Maybe (DiagnosticOptions |? DiagnosticRegistrationOptions)

-- | Workspace specific server capabilities.
[$sel:_workspace:ServerCapabilities] :: ServerCapabilities -> Maybe (Rec (("workspaceFolders" .== Maybe WorkspaceFoldersServerCapabilities) .+ (("fileOperations" .== Maybe FileOperationOptions) .+ Empty)))

-- | Experimental server capabilities.
[$sel:_experimental:ServerCapabilities] :: ServerCapabilities -> Maybe Value

data SemanticTokensWorkspaceClientCapabilities
SemanticTokensWorkspaceClientCapabilities :: Maybe Bool -> SemanticTokensWorkspaceClientCapabilities

-- | Whether the client implementation supports a refresh request sent from
--   the server to the client.
--   
--   Note that this event is global and will force the client to refresh
--   all semantic tokens currently shown. It should be used with absolute
--   care and is useful for situation where a server for example detects a
--   project wide change that requires such a calculation.
[$sel:_refreshSupport:SemanticTokensWorkspaceClientCapabilities] :: SemanticTokensWorkspaceClientCapabilities -> Maybe Bool

data SemanticTokensRegistrationOptions
SemanticTokensRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> SemanticTokensLegend -> Maybe (Bool |? Rec Empty) -> Maybe (Bool |? Rec (("delta" .== Maybe Bool) .+ Empty)) -> Maybe Text -> SemanticTokensRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:SemanticTokensRegistrationOptions] :: SemanticTokensRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:SemanticTokensRegistrationOptions] :: SemanticTokensRegistrationOptions -> Maybe Bool

-- | The legend used by the server
[$sel:_legend:SemanticTokensRegistrationOptions] :: SemanticTokensRegistrationOptions -> SemanticTokensLegend

-- | Server supports providing semantic tokens for a specific range of a
--   document.
[$sel:_range:SemanticTokensRegistrationOptions] :: SemanticTokensRegistrationOptions -> Maybe (Bool |? Rec Empty)

-- | Server supports providing semantic tokens for a full document.
[$sel:_full:SemanticTokensRegistrationOptions] :: SemanticTokensRegistrationOptions -> Maybe (Bool |? Rec (("delta" .== Maybe Bool) .+ Empty))

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:SemanticTokensRegistrationOptions] :: SemanticTokensRegistrationOptions -> Maybe Text

data SemanticTokensRangeParams
SemanticTokensRangeParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> Range -> SemanticTokensRangeParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:SemanticTokensRangeParams] :: SemanticTokensRangeParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:SemanticTokensRangeParams] :: SemanticTokensRangeParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:SemanticTokensRangeParams] :: SemanticTokensRangeParams -> TextDocumentIdentifier

-- | The range the semantic tokens are requested for.
[$sel:_range:SemanticTokensRangeParams] :: SemanticTokensRangeParams -> Range

data SemanticTokensPartialResult
SemanticTokensPartialResult :: [UInt] -> SemanticTokensPartialResult

[$sel:_data_:SemanticTokensPartialResult] :: SemanticTokensPartialResult -> [UInt]

data SemanticTokensParams
SemanticTokensParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> SemanticTokensParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:SemanticTokensParams] :: SemanticTokensParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:SemanticTokensParams] :: SemanticTokensParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:SemanticTokensParams] :: SemanticTokensParams -> TextDocumentIdentifier

data SemanticTokensOptions
SemanticTokensOptions :: Maybe Bool -> SemanticTokensLegend -> Maybe (Bool |? Rec Empty) -> Maybe (Bool |? Rec (("delta" .== Maybe Bool) .+ Empty)) -> SemanticTokensOptions

[$sel:_workDoneProgress:SemanticTokensOptions] :: SemanticTokensOptions -> Maybe Bool

-- | The legend used by the server
[$sel:_legend:SemanticTokensOptions] :: SemanticTokensOptions -> SemanticTokensLegend

-- | Server supports providing semantic tokens for a specific range of a
--   document.
[$sel:_range:SemanticTokensOptions] :: SemanticTokensOptions -> Maybe (Bool |? Rec Empty)

-- | Server supports providing semantic tokens for a full document.
[$sel:_full:SemanticTokensOptions] :: SemanticTokensOptions -> Maybe (Bool |? Rec (("delta" .== Maybe Bool) .+ Empty))

data SemanticTokensLegend
SemanticTokensLegend :: [Text] -> [Text] -> SemanticTokensLegend

-- | The token types a server uses.
[$sel:_tokenTypes:SemanticTokensLegend] :: SemanticTokensLegend -> [Text]

-- | The token modifiers a server uses.
[$sel:_tokenModifiers:SemanticTokensLegend] :: SemanticTokensLegend -> [Text]

data SemanticTokensEdit
SemanticTokensEdit :: UInt -> UInt -> Maybe [UInt] -> SemanticTokensEdit

-- | The start offset of the edit.
[$sel:_start:SemanticTokensEdit] :: SemanticTokensEdit -> UInt

-- | The count of elements to remove.
[$sel:_deleteCount:SemanticTokensEdit] :: SemanticTokensEdit -> UInt

-- | The elements to insert.
[$sel:_data_:SemanticTokensEdit] :: SemanticTokensEdit -> Maybe [UInt]

data SemanticTokensDeltaPartialResult
SemanticTokensDeltaPartialResult :: [SemanticTokensEdit] -> SemanticTokensDeltaPartialResult

[$sel:_edits:SemanticTokensDeltaPartialResult] :: SemanticTokensDeltaPartialResult -> [SemanticTokensEdit]

data SemanticTokensDeltaParams
SemanticTokensDeltaParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> Text -> SemanticTokensDeltaParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:SemanticTokensDeltaParams] :: SemanticTokensDeltaParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:SemanticTokensDeltaParams] :: SemanticTokensDeltaParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:SemanticTokensDeltaParams] :: SemanticTokensDeltaParams -> TextDocumentIdentifier

-- | The result id of a previous response. The result Id can either point
--   to a full response or a delta response depending on what was received
--   last.
[$sel:_previousResultId:SemanticTokensDeltaParams] :: SemanticTokensDeltaParams -> Text

data SemanticTokensDelta
SemanticTokensDelta :: Maybe Text -> [SemanticTokensEdit] -> SemanticTokensDelta

[$sel:_resultId:SemanticTokensDelta] :: SemanticTokensDelta -> Maybe Text

-- | The semantic token edits to transform a previous result into a new
--   result.
[$sel:_edits:SemanticTokensDelta] :: SemanticTokensDelta -> [SemanticTokensEdit]

data SemanticTokensClientCapabilities
SemanticTokensClientCapabilities :: Maybe Bool -> Rec (("range" .== Maybe (Bool |? Rec Empty)) .+ (("full" .== Maybe (Bool |? Rec (("delta" .== Maybe Bool) .+ Empty))) .+ Empty)) -> [Text] -> [Text] -> [TokenFormat] -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> SemanticTokensClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   `(TextDocumentRegistrationOptions &amp; StaticRegistrationOptions)`
--   return value for the corresponding server capability as well.
[$sel:_dynamicRegistration:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> Maybe Bool

-- | Which requests the client supports and might send to the server
--   depending on the server's capability. Please note that clients might
--   not show semantic tokens or degrade some of the user experience if a
--   range or full request is advertised by the client but not provided by
--   the server. If for example the client capability `requests.full` and
--   `request.range` are both set to true but the server only provides a
--   range provider the client might not render a minimap correctly or
--   might even decide to not show any semantic tokens at all.
[$sel:_requests:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> Rec (("range" .== Maybe (Bool |? Rec Empty)) .+ (("full" .== Maybe (Bool |? Rec (("delta" .== Maybe Bool) .+ Empty))) .+ Empty))

-- | The token types that the client supports.
[$sel:_tokenTypes:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> [Text]

-- | The token modifiers that the client supports.
[$sel:_tokenModifiers:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> [Text]

-- | The token formats the clients supports.
[$sel:_formats:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> [TokenFormat]

-- | Whether the client supports tokens that can overlap each other.
[$sel:_overlappingTokenSupport:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> Maybe Bool

-- | Whether the client supports tokens that can span multiple lines.
[$sel:_multilineTokenSupport:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> Maybe Bool

-- | Whether the client allows the server to actively cancel a semantic
--   token request, e.g. supports returning LSPErrorCodes.ServerCancelled.
--   If a server does the client needs to retrigger the request.
[$sel:_serverCancelSupport:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> Maybe Bool

-- | Whether the client uses semantic tokens to augment existing syntax
--   tokens. If set to <tt>true</tt> client side created syntax tokens and
--   semantic tokens are both used for colorization. If set to
--   <tt>false</tt> the client only uses the returned semantic tokens for
--   colorization.
--   
--   If the value is <a>undefined</a> then the client behavior is not
--   specified.
[$sel:_augmentsSyntaxTokens:SemanticTokensClientCapabilities] :: SemanticTokensClientCapabilities -> Maybe Bool

data SemanticTokens
SemanticTokens :: Maybe Text -> [UInt] -> SemanticTokens

-- | An optional result id. If provided and clients support delta updating
--   the client will include the result id in the next semantic token
--   request. A server can then instead of computing all semantic tokens
--   again simply send a delta.
[$sel:_resultId:SemanticTokens] :: SemanticTokens -> Maybe Text

-- | The actual tokens.
[$sel:_data_:SemanticTokens] :: SemanticTokens -> [UInt]

-- | A set of predefined token types. This set is not fixed an clients can
--   specify additional token types via the corresponding client
--   capabilities.
data SemanticTokenTypes

SemanticTokenTypes_Namespace :: SemanticTokenTypes

-- | Represents a generic type. Acts as a fallback for types which can't be
--   mapped to a specific type like class or enum.
SemanticTokenTypes_Type :: SemanticTokenTypes

SemanticTokenTypes_Class :: SemanticTokenTypes

SemanticTokenTypes_Enum :: SemanticTokenTypes

SemanticTokenTypes_Interface :: SemanticTokenTypes

SemanticTokenTypes_Struct :: SemanticTokenTypes

SemanticTokenTypes_TypeParameter :: SemanticTokenTypes

SemanticTokenTypes_Parameter :: SemanticTokenTypes

SemanticTokenTypes_Variable :: SemanticTokenTypes

SemanticTokenTypes_Property :: SemanticTokenTypes

SemanticTokenTypes_EnumMember :: SemanticTokenTypes

SemanticTokenTypes_Event :: SemanticTokenTypes

SemanticTokenTypes_Function :: SemanticTokenTypes

SemanticTokenTypes_Method :: SemanticTokenTypes

SemanticTokenTypes_Macro :: SemanticTokenTypes

SemanticTokenTypes_Keyword :: SemanticTokenTypes

SemanticTokenTypes_Modifier :: SemanticTokenTypes

SemanticTokenTypes_Comment :: SemanticTokenTypes

SemanticTokenTypes_String :: SemanticTokenTypes

SemanticTokenTypes_Number :: SemanticTokenTypes

SemanticTokenTypes_Regexp :: SemanticTokenTypes

SemanticTokenTypes_Operator :: SemanticTokenTypes

SemanticTokenTypes_Decorator :: SemanticTokenTypes
SemanticTokenTypes_Custom :: Text -> SemanticTokenTypes

-- | A set of predefined token modifiers. This set is not fixed an clients
--   can specify additional token types via the corresponding client
--   capabilities.
data SemanticTokenModifiers

SemanticTokenModifiers_Declaration :: SemanticTokenModifiers

SemanticTokenModifiers_Definition :: SemanticTokenModifiers

SemanticTokenModifiers_Readonly :: SemanticTokenModifiers

SemanticTokenModifiers_Static :: SemanticTokenModifiers

SemanticTokenModifiers_Deprecated :: SemanticTokenModifiers

SemanticTokenModifiers_Abstract :: SemanticTokenModifiers

SemanticTokenModifiers_Async :: SemanticTokenModifiers

SemanticTokenModifiers_Modification :: SemanticTokenModifiers

SemanticTokenModifiers_Documentation :: SemanticTokenModifiers

SemanticTokenModifiers_DefaultLibrary :: SemanticTokenModifiers
SemanticTokenModifiers_Custom :: Text -> SemanticTokenModifiers

data SelectionRangeRegistrationOptions
SelectionRangeRegistrationOptions :: Maybe Bool -> (DocumentSelector |? Null) -> Maybe Text -> SelectionRangeRegistrationOptions

[$sel:_workDoneProgress:SelectionRangeRegistrationOptions] :: SelectionRangeRegistrationOptions -> Maybe Bool

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:SelectionRangeRegistrationOptions] :: SelectionRangeRegistrationOptions -> DocumentSelector |? Null

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:SelectionRangeRegistrationOptions] :: SelectionRangeRegistrationOptions -> Maybe Text

-- | A parameter literal used in selection range requests.
data SelectionRangeParams
SelectionRangeParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> [Position] -> SelectionRangeParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:SelectionRangeParams] :: SelectionRangeParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:SelectionRangeParams] :: SelectionRangeParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:SelectionRangeParams] :: SelectionRangeParams -> TextDocumentIdentifier

-- | The positions inside the text document.
[$sel:_positions:SelectionRangeParams] :: SelectionRangeParams -> [Position]

data SelectionRangeOptions
SelectionRangeOptions :: Maybe Bool -> SelectionRangeOptions

[$sel:_workDoneProgress:SelectionRangeOptions] :: SelectionRangeOptions -> Maybe Bool

data SelectionRangeClientCapabilities
SelectionRangeClientCapabilities :: Maybe Bool -> SelectionRangeClientCapabilities

-- | Whether implementation supports dynamic registration for selection
--   range providers. If this is set to <tt>true</tt> the client supports
--   the new <tt>SelectionRangeRegistrationOptions</tt> return value for
--   the corresponding server capability as well.
[$sel:_dynamicRegistration:SelectionRangeClientCapabilities] :: SelectionRangeClientCapabilities -> Maybe Bool

-- | A selection range represents a part of a selection hierarchy. A
--   selection range may have a parent selection range that contains it.
data SelectionRange
SelectionRange :: Range -> Maybe SelectionRange -> SelectionRange

-- | The <tt>Range</tt> of this selection range.
[$sel:_range:SelectionRange] :: SelectionRange -> Range

-- | The parent selection range containing this range. Therefore
--   `parent.range` must contain `this.range`.
[$sel:_parent:SelectionRange] :: SelectionRange -> Maybe SelectionRange

-- | Save options.
data SaveOptions
SaveOptions :: Maybe Bool -> SaveOptions

-- | The client is supposed to include the content on save.
[$sel:_includeText:SaveOptions] :: SaveOptions -> Maybe Bool

data ResourceOperationKind

-- | Supports creating new files and folders.
ResourceOperationKind_Create :: ResourceOperationKind

-- | Supports renaming existing files and folders.
ResourceOperationKind_Rename :: ResourceOperationKind

-- | Supports deleting existing files and folders.
ResourceOperationKind_Delete :: ResourceOperationKind

-- | A generic resource operation.
data ResourceOperation
ResourceOperation :: Text -> Maybe ChangeAnnotationIdentifier -> ResourceOperation

-- | The resource operation kind.
[$sel:_kind:ResourceOperation] :: ResourceOperation -> Text

-- | An optional annotation identifier describing the operation.
[$sel:_annotationId:ResourceOperation] :: ResourceOperation -> Maybe ChangeAnnotationIdentifier

-- | Registration options for a <tt>RenameRequest</tt>.
data RenameRegistrationOptions
RenameRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Bool -> RenameRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:RenameRegistrationOptions] :: RenameRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:RenameRegistrationOptions] :: RenameRegistrationOptions -> Maybe Bool

-- | Renames should be checked and tested before being executed.
--   
--   @since version 3.12.0
[$sel:_prepareProvider:RenameRegistrationOptions] :: RenameRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>RenameRequest</tt>.
data RenameParams
RenameParams :: Maybe ProgressToken -> TextDocumentIdentifier -> Position -> Text -> RenameParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:RenameParams] :: RenameParams -> Maybe ProgressToken

-- | The document to rename.
[$sel:_textDocument:RenameParams] :: RenameParams -> TextDocumentIdentifier

-- | The position at which this request was sent.
[$sel:_position:RenameParams] :: RenameParams -> Position

-- | The new name of the symbol. If the given name is not valid the request
--   must return a <tt>ResponseError</tt> with an appropriate message set.
[$sel:_newName:RenameParams] :: RenameParams -> Text

-- | Provider options for a <tt>RenameRequest</tt>.
data RenameOptions
RenameOptions :: Maybe Bool -> Maybe Bool -> RenameOptions

[$sel:_workDoneProgress:RenameOptions] :: RenameOptions -> Maybe Bool

-- | Renames should be checked and tested before being executed.
--   
--   @since version 3.12.0
[$sel:_prepareProvider:RenameOptions] :: RenameOptions -> Maybe Bool

-- | The parameters sent in notifications/requests for user-initiated
--   renames of files.
data RenameFilesParams
RenameFilesParams :: [FileRename] -> RenameFilesParams

-- | An array of all files/folders renamed in this operation. When a folder
--   is renamed, only the folder will be included, and not its children.
[$sel:_files:RenameFilesParams] :: RenameFilesParams -> [FileRename]

-- | Rename file options
data RenameFileOptions
RenameFileOptions :: Maybe Bool -> Maybe Bool -> RenameFileOptions

-- | Overwrite target if existing. Overwrite wins over
--   <tt>ignoreIfExists</tt>
[$sel:_overwrite:RenameFileOptions] :: RenameFileOptions -> Maybe Bool

-- | Ignores if target exists.
[$sel:_ignoreIfExists:RenameFileOptions] :: RenameFileOptions -> Maybe Bool

-- | Rename file operation
data RenameFile
RenameFile :: Maybe ChangeAnnotationIdentifier -> AString "rename" -> Uri -> Uri -> Maybe RenameFileOptions -> RenameFile

-- | An optional annotation identifier describing the operation.
[$sel:_annotationId:RenameFile] :: RenameFile -> Maybe ChangeAnnotationIdentifier

-- | A rename
[$sel:_kind:RenameFile] :: RenameFile -> AString "rename"

-- | The old (existing) location.
[$sel:_oldUri:RenameFile] :: RenameFile -> Uri

-- | The new location.
[$sel:_newUri:RenameFile] :: RenameFile -> Uri

-- | Rename options.
[$sel:_options:RenameFile] :: RenameFile -> Maybe RenameFileOptions

data RenameClientCapabilities
RenameClientCapabilities :: Maybe Bool -> Maybe Bool -> Maybe PrepareSupportDefaultBehavior -> Maybe Bool -> RenameClientCapabilities

-- | Whether rename supports dynamic registration.
[$sel:_dynamicRegistration:RenameClientCapabilities] :: RenameClientCapabilities -> Maybe Bool

-- | Client supports testing for validity of rename operations before
--   execution.
[$sel:_prepareSupport:RenameClientCapabilities] :: RenameClientCapabilities -> Maybe Bool

-- | Client supports the default behavior result.
--   
--   The value indicates the default behavior used by the client.
[$sel:_prepareSupportDefaultBehavior:RenameClientCapabilities] :: RenameClientCapabilities -> Maybe PrepareSupportDefaultBehavior

-- | Whether the client honors the change annotations in text edits and
--   resource operations returned via the rename request's workspace edit
--   by for example presenting the workspace edit in the user interface and
--   asking for confirmation.
[$sel:_honorsChangeAnnotations:RenameClientCapabilities] :: RenameClientCapabilities -> Maybe Bool

-- | A relative pattern is a helper to construct glob patterns that are
--   matched relatively to a base URI. The common value for a
--   <tt>baseUri</tt> is a workspace folder root, but it can be another
--   absolute URI as well.
data RelativePattern
RelativePattern :: (WorkspaceFolder |? Uri) -> Pattern -> RelativePattern

-- | A workspace folder or a base URI to which this pattern will be matched
--   against relatively.
[$sel:_baseUri:RelativePattern] :: RelativePattern -> WorkspaceFolder |? Uri

-- | The actual glob pattern;
[$sel:_pattern:RelativePattern] :: RelativePattern -> Pattern

-- | An unchanged diagnostic report with a set of related documents.
data RelatedUnchangedDocumentDiagnosticReport
RelatedUnchangedDocumentDiagnosticReport :: AString "unchanged" -> Text -> Maybe (Map Uri (FullDocumentDiagnosticReport |? UnchangedDocumentDiagnosticReport)) -> RelatedUnchangedDocumentDiagnosticReport

-- | A document diagnostic report indicating no changes to the last result.
--   A server can only return <tt>unchanged</tt> if result ids are
--   provided.
[$sel:_kind:RelatedUnchangedDocumentDiagnosticReport] :: RelatedUnchangedDocumentDiagnosticReport -> AString "unchanged"

-- | A result id which will be sent on the next diagnostic request for the
--   same document.
[$sel:_resultId:RelatedUnchangedDocumentDiagnosticReport] :: RelatedUnchangedDocumentDiagnosticReport -> Text

-- | Diagnostics of related documents. This information is useful in
--   programming languages where code in a file A can generate diagnostics
--   in a file B which A depends on. An example of such a language is C/C++
--   where marco definitions in a file a.cpp and result in errors in a
--   header file b.hpp.
[$sel:_relatedDocuments:RelatedUnchangedDocumentDiagnosticReport] :: RelatedUnchangedDocumentDiagnosticReport -> Maybe (Map Uri (FullDocumentDiagnosticReport |? UnchangedDocumentDiagnosticReport))

-- | A full diagnostic report with a set of related documents.
data RelatedFullDocumentDiagnosticReport
RelatedFullDocumentDiagnosticReport :: AString "full" -> Maybe Text -> [Diagnostic] -> Maybe (Map Uri (FullDocumentDiagnosticReport |? UnchangedDocumentDiagnosticReport)) -> RelatedFullDocumentDiagnosticReport

-- | A full document diagnostic report.
[$sel:_kind:RelatedFullDocumentDiagnosticReport] :: RelatedFullDocumentDiagnosticReport -> AString "full"

-- | An optional result id. If provided it will be sent on the next
--   diagnostic request for the same document.
[$sel:_resultId:RelatedFullDocumentDiagnosticReport] :: RelatedFullDocumentDiagnosticReport -> Maybe Text

-- | The actual items.
[$sel:_items:RelatedFullDocumentDiagnosticReport] :: RelatedFullDocumentDiagnosticReport -> [Diagnostic]

-- | Diagnostics of related documents. This information is useful in
--   programming languages where code in a file A can generate diagnostics
--   in a file B which A depends on. An example of such a language is C/C++
--   where marco definitions in a file a.cpp and result in errors in a
--   header file b.hpp.
[$sel:_relatedDocuments:RelatedFullDocumentDiagnosticReport] :: RelatedFullDocumentDiagnosticReport -> Maybe (Map Uri (FullDocumentDiagnosticReport |? UnchangedDocumentDiagnosticReport))

-- | Client capabilities specific to regular expressions.
data RegularExpressionsClientCapabilities
RegularExpressionsClientCapabilities :: Text -> Maybe Text -> RegularExpressionsClientCapabilities

-- | The engine's name.
[$sel:_engine:RegularExpressionsClientCapabilities] :: RegularExpressionsClientCapabilities -> Text

-- | The engine's version.
[$sel:_version:RegularExpressionsClientCapabilities] :: RegularExpressionsClientCapabilities -> Maybe Text

data RegistrationParams
RegistrationParams :: [Registration] -> RegistrationParams

[$sel:_registrations:RegistrationParams] :: RegistrationParams -> [Registration]

-- | General parameters to to register for an notification or to register a
--   provider.
data Registration
Registration :: Text -> Text -> Maybe Value -> Registration

-- | The id used to register the request. The id can be used to deregister
--   the request again.
[$sel:_id:Registration] :: Registration -> Text

-- | The method / capability to register for.
[$sel:_method:Registration] :: Registration -> Text

-- | Options necessary for the registration.
[$sel:_registerOptions:Registration] :: Registration -> Maybe Value

-- | Registration options for a <tt>ReferencesRequest</tt>.
data ReferenceRegistrationOptions
ReferenceRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> ReferenceRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:ReferenceRegistrationOptions] :: ReferenceRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:ReferenceRegistrationOptions] :: ReferenceRegistrationOptions -> Maybe Bool

-- | Parameters for a <tt>ReferencesRequest</tt>.
data ReferenceParams
ReferenceParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> ReferenceContext -> ReferenceParams

-- | The text document.
[$sel:_textDocument:ReferenceParams] :: ReferenceParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:ReferenceParams] :: ReferenceParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:ReferenceParams] :: ReferenceParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:ReferenceParams] :: ReferenceParams -> Maybe ProgressToken

[$sel:_context:ReferenceParams] :: ReferenceParams -> ReferenceContext

-- | Reference options.
data ReferenceOptions
ReferenceOptions :: Maybe Bool -> ReferenceOptions

[$sel:_workDoneProgress:ReferenceOptions] :: ReferenceOptions -> Maybe Bool

-- | Value-object that contains additional information when requesting
--   references.
data ReferenceContext
ReferenceContext :: Bool -> ReferenceContext

-- | Include the declaration of the current symbol.
[$sel:_includeDeclaration:ReferenceContext] :: ReferenceContext -> Bool

-- | Client Capabilities for a <tt>ReferencesRequest</tt>.
data ReferenceClientCapabilities
ReferenceClientCapabilities :: Maybe Bool -> ReferenceClientCapabilities

-- | Whether references supports dynamic registration.
[$sel:_dynamicRegistration:ReferenceClientCapabilities] :: ReferenceClientCapabilities -> Maybe Bool

-- | A range in a text document expressed as (zero-based) start and end
--   positions.
--   
--   If you want to specify a range that contains a line including the line
--   ending character(s) then use an end position denoting the start of the
--   next line. For example: ```ts { start: { line: 5, character: 23 } end
--   : { line 6, character : 0 } } ```
data Range
Range :: Position -> Position -> Range

-- | The range's start position.
[$sel:_start:Range] :: Range -> Position

-- | The range's end position.
[$sel:_end:Range] :: Range -> Position

-- | The publish diagnostic notification's parameters.
data PublishDiagnosticsParams
PublishDiagnosticsParams :: Uri -> Maybe Int32 -> [Diagnostic] -> PublishDiagnosticsParams

-- | The URI for which diagnostic information is reported.
[$sel:_uri:PublishDiagnosticsParams] :: PublishDiagnosticsParams -> Uri

-- | Optional the version number of the document the diagnostics are
--   published for.
[$sel:_version:PublishDiagnosticsParams] :: PublishDiagnosticsParams -> Maybe Int32

-- | An array of diagnostic information items.
[$sel:_diagnostics:PublishDiagnosticsParams] :: PublishDiagnosticsParams -> [Diagnostic]

-- | The publish diagnostic client capabilities.
data PublishDiagnosticsClientCapabilities
PublishDiagnosticsClientCapabilities :: Maybe Bool -> Maybe (Rec (("valueSet" .== [DiagnosticTag]) .+ Empty)) -> Maybe Bool -> Maybe Bool -> Maybe Bool -> PublishDiagnosticsClientCapabilities

-- | Whether the clients accepts diagnostics with related information.
[$sel:_relatedInformation:PublishDiagnosticsClientCapabilities] :: PublishDiagnosticsClientCapabilities -> Maybe Bool

-- | Client supports the tag property to provide meta data about a
--   diagnostic. Clients supporting tags have to handle unknown tags
--   gracefully.
[$sel:_tagSupport:PublishDiagnosticsClientCapabilities] :: PublishDiagnosticsClientCapabilities -> Maybe (Rec (("valueSet" .== [DiagnosticTag]) .+ Empty))

-- | Whether the client interprets the version property of the
--   `textDocument/publishDiagnostics` notification's parameter.
[$sel:_versionSupport:PublishDiagnosticsClientCapabilities] :: PublishDiagnosticsClientCapabilities -> Maybe Bool

-- | Client supports a codeDescription property
[$sel:_codeDescriptionSupport:PublishDiagnosticsClientCapabilities] :: PublishDiagnosticsClientCapabilities -> Maybe Bool

-- | Whether code action supports the `data` property which is preserved
--   between a `textDocument/publishDiagnostics` and
--   `textDocument/codeAction` request.
[$sel:_dataSupport:PublishDiagnosticsClientCapabilities] :: PublishDiagnosticsClientCapabilities -> Maybe Bool

newtype ProgressToken
ProgressToken :: (Int32 |? Text) -> ProgressToken

data ProgressParams
ProgressParams :: ProgressToken -> Value -> ProgressParams

-- | The progress token provided by the client or server.
[$sel:_token:ProgressParams] :: ProgressParams -> ProgressToken

-- | The progress data.
[$sel:_value:ProgressParams] :: ProgressParams -> Value

-- | A previous result id in a workspace pull request.
data PreviousResultId
PreviousResultId :: Uri -> Text -> PreviousResultId

-- | The URI for which the client knowns a result id.
[$sel:_uri:PreviousResultId] :: PreviousResultId -> Uri

-- | The value of the previous result id.
[$sel:_value:PreviousResultId] :: PreviousResultId -> Text

data PrepareSupportDefaultBehavior

-- | The client's default behavior is to select the identifier according
--   the to language's syntax rule.
PrepareSupportDefaultBehavior_Identifier :: PrepareSupportDefaultBehavior

newtype PrepareRenameResult
PrepareRenameResult :: (Range |? (Rec (("range" .== Range) .+ (("placeholder" .== Text) .+ Empty)) |? Rec (("defaultBehavior" .== Bool) .+ Empty))) -> PrepareRenameResult

data PrepareRenameParams
PrepareRenameParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> PrepareRenameParams

-- | The text document.
[$sel:_textDocument:PrepareRenameParams] :: PrepareRenameParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:PrepareRenameParams] :: PrepareRenameParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:PrepareRenameParams] :: PrepareRenameParams -> Maybe ProgressToken

-- | A set of predefined position encoding kinds.
data PositionEncodingKind

-- | Character offsets count UTF-8 code units.
PositionEncodingKind_UTF8 :: PositionEncodingKind

-- | Character offsets count UTF-16 code units.
--   
--   This is the default and must always be supported by servers
PositionEncodingKind_UTF16 :: PositionEncodingKind

-- | Character offsets count UTF-32 code units.
--   
--   Implementation note: these are the same as Unicode code points, so
--   this <a>PositionEncodingKind</a> may also be used for an
--   encoding-agnostic representation of character offsets.
PositionEncodingKind_UTF32 :: PositionEncodingKind
PositionEncodingKind_Custom :: Text -> PositionEncodingKind

-- | Position in a text document expressed as zero-based line and character
--   offset. Prior to 3.17 the offsets were always based on a UTF-16 string
--   representation. So a string of the form <tt>a𐐀b</tt> the character
--   offset of the character <tt>a</tt> is 0, the character offset of
--   <tt>𐐀</tt> is 1 and the character offset of b is 3 since <tt>𐐀</tt> is
--   represented using two code units in UTF-16. Since 3.17 clients and
--   servers can agree on a different string encoding representation (e.g.
--   UTF-8). The client announces it's supported encoding via the client
--   capability <a>`general.positionEncodings`</a>. The value is an array
--   of position encodings the client supports, with decreasing preference
--   (e.g. the encoding at index `0` is the most preferred one). To stay
--   backwards compatible the only mandatory encoding is UTF-16 represented
--   via the string `utf-16`. The server can pick one of the encodings
--   offered by the client and signals that encoding back to the client via
--   the initialize result's property
--   <a>`capabilities.positionEncoding`</a>. If the string value `utf-16`
--   is missing from the client's capability `general.positionEncodings`
--   servers can safely assume that the client supports UTF-16. If the
--   server omits the position encoding in its initialize result the
--   encoding defaults to the string value `utf-16`. Implementation
--   considerations: since the conversion from one encoding into another
--   requires the content of the file / line the conversion is best done
--   where the file is read which is usually on the server side.
--   
--   Positions are line end character agnostic. So you can not specify a
--   position that denotes `r|n` or `n|` where `|` represents the character
--   offset.
--   
--   @since 3.17.0 - support for negotiated position encoding.
data Position
Position :: UInt -> UInt -> Position

-- | Line position in a document (zero-based).
--   
--   If a line number is greater than the number of lines in a document, it
--   defaults back to the number of lines in the document. If a line number
--   is negative, it defaults to 0.
[$sel:_line:Position] :: Position -> UInt

-- | Character offset on a line in a document (zero-based).
--   
--   The meaning of this offset is determined by the negotiated
--   <tt>PositionEncodingKind</tt>.
--   
--   If the character value is greater than the line length it defaults
--   back to the line length.
[$sel:_character:Position] :: Position -> UInt

-- | The glob pattern to watch relative to the base path. Glob patterns can
--   have the following syntax: - <a>*</a> to match one or more characters
--   in a path segment - <tt>?</tt> to match on one character in a path
--   segment - <a>**</a> to match any number of path segments, including
--   none - `{}` to group conditions (e.g. `**​/*.{ts,js}` matches all
--   TypeScript and JavaScript files) - `[]` to declare a range of
--   characters to match in a path segment (e.g., `example.[0-9]` to match
--   on `example.0`, `example.1`, …) - `[!...]` to negate a range of
--   characters to match in a path segment (e.g., `example.[!0-9]` to match
--   on `example.a`, `example.b`, but not `example.0`)
newtype Pattern
Pattern :: Text -> Pattern

data PartialResultParams
PartialResultParams :: Maybe ProgressToken -> PartialResultParams

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:PartialResultParams] :: PartialResultParams -> Maybe ProgressToken

-- | Represents a parameter of a callable-signature. A parameter can have a
--   label and a doc-comment.
data ParameterInformation
ParameterInformation :: (Text |? (UInt, UInt)) -> Maybe (Text |? MarkupContent) -> ParameterInformation

-- | The label of this parameter information.
--   
--   Either a string or an inclusive start and exclusive end offsets within
--   its containing signature label. (see SignatureInformation.label). The
--   offsets are based on a UTF-16 string representation as
--   <tt>Position</tt> and <tt>Range</tt> does.
--   
--   <ul>
--   <li>Note*: a label of type string should be a substring of its
--   containing signature label. Its intended use case is to highlight the
--   parameter label part in the <a>label</a>.</li>
--   </ul>
[$sel:_label:ParameterInformation] :: ParameterInformation -> Text |? (UInt, UInt)

-- | The human-readable doc-comment of this parameter. Will be shown in the
--   UI but can be omitted.
[$sel:_documentation:ParameterInformation] :: ParameterInformation -> Maybe (Text |? MarkupContent)

-- | A text document identifier to optionally denote a specific version of
--   a text document.
data OptionalVersionedTextDocumentIdentifier
OptionalVersionedTextDocumentIdentifier :: Uri -> (Int32 |? Null) -> OptionalVersionedTextDocumentIdentifier

-- | The text document's uri.
[$sel:_uri:OptionalVersionedTextDocumentIdentifier] :: OptionalVersionedTextDocumentIdentifier -> Uri

-- | The version number of this document. If a versioned text document
--   identifier is sent from the server to the client and the file is not
--   open in the editor (the server has not received an open notification
--   before) the server can send <a>null</a> to indicate that the version
--   is unknown and the content on disk is the truth (as specified with
--   document content ownership).
[$sel:_version:OptionalVersionedTextDocumentIdentifier] :: OptionalVersionedTextDocumentIdentifier -> Int32 |? Null

-- | Registration options specific to a notebook.
data NotebookDocumentSyncRegistrationOptions
NotebookDocumentSyncRegistrationOptions :: [Rec (("notebook" .== (Text |? NotebookDocumentFilter)) .+ (("cells" .== Maybe [Rec (("language" .== Text) .+ Empty)]) .+ Empty)) |? Rec (("notebook" .== Maybe (Text |? NotebookDocumentFilter)) .+ (("cells" .== [Rec (("language" .== Text) .+ Empty)]) .+ Empty))] -> Maybe Bool -> Maybe Text -> NotebookDocumentSyncRegistrationOptions

-- | The notebooks to be synced
[$sel:_notebookSelector:NotebookDocumentSyncRegistrationOptions] :: NotebookDocumentSyncRegistrationOptions -> [Rec (("notebook" .== (Text |? NotebookDocumentFilter)) .+ (("cells" .== Maybe [Rec (("language" .== Text) .+ Empty)]) .+ Empty)) |? Rec (("notebook" .== Maybe (Text |? NotebookDocumentFilter)) .+ (("cells" .== [Rec (("language" .== Text) .+ Empty)]) .+ Empty))]

-- | Whether save notification should be forwarded to the server. Will only
--   be honored if mode === <tt>notebook</tt>.
[$sel:_save:NotebookDocumentSyncRegistrationOptions] :: NotebookDocumentSyncRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:NotebookDocumentSyncRegistrationOptions] :: NotebookDocumentSyncRegistrationOptions -> Maybe Text

-- | Options specific to a notebook plus its cells to be synced to the
--   server.
--   
--   If a selector provides a notebook document filter but no cell selector
--   all cells of a matching notebook document will be synced.
--   
--   If a selector provides no notebook document filter but only a cell
--   selector all notebook document that contain at least one matching cell
--   will be synced.
data NotebookDocumentSyncOptions
NotebookDocumentSyncOptions :: [Rec (("notebook" .== (Text |? NotebookDocumentFilter)) .+ (("cells" .== Maybe [Rec (("language" .== Text) .+ Empty)]) .+ Empty)) |? Rec (("notebook" .== Maybe (Text |? NotebookDocumentFilter)) .+ (("cells" .== [Rec (("language" .== Text) .+ Empty)]) .+ Empty))] -> Maybe Bool -> NotebookDocumentSyncOptions

-- | The notebooks to be synced
[$sel:_notebookSelector:NotebookDocumentSyncOptions] :: NotebookDocumentSyncOptions -> [Rec (("notebook" .== (Text |? NotebookDocumentFilter)) .+ (("cells" .== Maybe [Rec (("language" .== Text) .+ Empty)]) .+ Empty)) |? Rec (("notebook" .== Maybe (Text |? NotebookDocumentFilter)) .+ (("cells" .== [Rec (("language" .== Text) .+ Empty)]) .+ Empty))]

-- | Whether save notification should be forwarded to the server. Will only
--   be honored if mode === <tt>notebook</tt>.
[$sel:_save:NotebookDocumentSyncOptions] :: NotebookDocumentSyncOptions -> Maybe Bool

-- | Notebook specific client capabilities.
data NotebookDocumentSyncClientCapabilities
NotebookDocumentSyncClientCapabilities :: Maybe Bool -> Maybe Bool -> NotebookDocumentSyncClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   `(TextDocumentRegistrationOptions &amp; StaticRegistrationOptions)`
--   return value for the corresponding server capability as well.
[$sel:_dynamicRegistration:NotebookDocumentSyncClientCapabilities] :: NotebookDocumentSyncClientCapabilities -> Maybe Bool

-- | The client supports sending execution summary data per cell.
[$sel:_executionSummarySupport:NotebookDocumentSyncClientCapabilities] :: NotebookDocumentSyncClientCapabilities -> Maybe Bool

-- | A literal to identify a notebook document in the client.
data NotebookDocumentIdentifier
NotebookDocumentIdentifier :: Uri -> NotebookDocumentIdentifier

-- | The notebook document's uri.
[$sel:_uri:NotebookDocumentIdentifier] :: NotebookDocumentIdentifier -> Uri

-- | A notebook document filter denotes a notebook document by different
--   properties. The properties will be match against the notebook's URI
--   (same as with documents)
newtype NotebookDocumentFilter
NotebookDocumentFilter :: (Rec (("notebookType" .== Text) .+ (("scheme" .== Maybe Text) .+ (("pattern" .== Maybe Text) .+ Empty))) |? (Rec (("notebookType" .== Maybe Text) .+ (("scheme" .== Text) .+ (("pattern" .== Maybe Text) .+ Empty))) |? Rec (("notebookType" .== Maybe Text) .+ (("scheme" .== Maybe Text) .+ (("pattern" .== Text) .+ Empty))))) -> NotebookDocumentFilter

-- | Capabilities specific to the notebook document support.
data NotebookDocumentClientCapabilities
NotebookDocumentClientCapabilities :: NotebookDocumentSyncClientCapabilities -> NotebookDocumentClientCapabilities

-- | Capabilities specific to notebook document synchronization
[$sel:_synchronization:NotebookDocumentClientCapabilities] :: NotebookDocumentClientCapabilities -> NotebookDocumentSyncClientCapabilities

-- | A change event for a notebook document.
data NotebookDocumentChangeEvent
NotebookDocumentChangeEvent :: Maybe Object -> Maybe (Rec (("structure" .== Maybe (Rec (("array" .== NotebookCellArrayChange) .+ (("didOpen" .== Maybe [TextDocumentItem]) .+ (("didClose" .== Maybe [TextDocumentIdentifier]) .+ Empty))))) .+ (("data" .== Maybe [NotebookCell]) .+ (("textContent" .== Maybe [Rec (("document" .== VersionedTextDocumentIdentifier) .+ (("changes" .== [TextDocumentContentChangeEvent]) .+ Empty))]) .+ Empty)))) -> NotebookDocumentChangeEvent

-- | The changed meta data if any.
--   
--   Note: should always be an object literal (e.g. LSPObject)
[$sel:_metadata:NotebookDocumentChangeEvent] :: NotebookDocumentChangeEvent -> Maybe Object

-- | Changes to cells
[$sel:_cells:NotebookDocumentChangeEvent] :: NotebookDocumentChangeEvent -> Maybe (Rec (("structure" .== Maybe (Rec (("array" .== NotebookCellArrayChange) .+ (("didOpen" .== Maybe [TextDocumentItem]) .+ (("didClose" .== Maybe [TextDocumentIdentifier]) .+ Empty))))) .+ (("data" .== Maybe [NotebookCell]) .+ (("textContent" .== Maybe [Rec (("document" .== VersionedTextDocumentIdentifier) .+ (("changes" .== [TextDocumentContentChangeEvent]) .+ Empty))]) .+ Empty))))

-- | A notebook document.
data NotebookDocument
NotebookDocument :: Uri -> Text -> Int32 -> Maybe Object -> [NotebookCell] -> NotebookDocument

-- | The notebook document's uri.
[$sel:_uri:NotebookDocument] :: NotebookDocument -> Uri

-- | The type of the notebook.
[$sel:_notebookType:NotebookDocument] :: NotebookDocument -> Text

-- | The version number of this document (it will increase after each
--   change, including undo/redo).
[$sel:_version:NotebookDocument] :: NotebookDocument -> Int32

-- | Additional metadata stored with the notebook document.
--   
--   Note: should always be an object literal (e.g. LSPObject)
[$sel:_metadata:NotebookDocument] :: NotebookDocument -> Maybe Object

-- | The cells of a notebook.
[$sel:_cells:NotebookDocument] :: NotebookDocument -> [NotebookCell]

-- | A notebook cell text document filter denotes a cell text document by
--   different properties.
data NotebookCellTextDocumentFilter
NotebookCellTextDocumentFilter :: (Text |? NotebookDocumentFilter) -> Maybe Text -> NotebookCellTextDocumentFilter

-- | A filter that matches against the notebook containing the notebook
--   cell. If a string value is provided it matches against the notebook
--   type. <a>*</a> matches every notebook.
[$sel:_notebook:NotebookCellTextDocumentFilter] :: NotebookCellTextDocumentFilter -> Text |? NotebookDocumentFilter

-- | A language id like <tt>python</tt>.
--   
--   Will be matched against the language id of the notebook cell document.
--   <a>*</a> matches every language.
[$sel:_language:NotebookCellTextDocumentFilter] :: NotebookCellTextDocumentFilter -> Maybe Text

-- | A notebook cell kind.
data NotebookCellKind

-- | A markup-cell is formatted source that is used for display.
NotebookCellKind_Markup :: NotebookCellKind

-- | A code-cell is source code.
NotebookCellKind_Code :: NotebookCellKind

-- | A change describing how to move a <tt>NotebookCell</tt> array from
--   state S to S'.
data NotebookCellArrayChange
NotebookCellArrayChange :: UInt -> UInt -> Maybe [NotebookCell] -> NotebookCellArrayChange

-- | The start oftest of the cell that changed.
[$sel:_start:NotebookCellArrayChange] :: NotebookCellArrayChange -> UInt

-- | The deleted cells
[$sel:_deleteCount:NotebookCellArrayChange] :: NotebookCellArrayChange -> UInt

-- | The new cells, if any
[$sel:_cells:NotebookCellArrayChange] :: NotebookCellArrayChange -> Maybe [NotebookCell]

-- | A notebook cell.
--   
--   A cell's document URI must be unique across ALL notebook cells and can
--   therefore be used to uniquely identify a notebook cell or the cell's
--   text document.
data NotebookCell
NotebookCell :: NotebookCellKind -> Uri -> Maybe Object -> Maybe ExecutionSummary -> NotebookCell

-- | The cell's kind
[$sel:_kind:NotebookCell] :: NotebookCell -> NotebookCellKind

-- | The URI of the cell's text document content.
[$sel:_document:NotebookCell] :: NotebookCell -> Uri

-- | Additional metadata stored with the cell.
--   
--   Note: should always be an object literal (e.g. LSPObject)
[$sel:_metadata:NotebookCell] :: NotebookCell -> Maybe Object

-- | Additional execution summary information if supported by the client.
[$sel:_executionSummary:NotebookCell] :: NotebookCell -> Maybe ExecutionSummary

data MonikerRegistrationOptions
MonikerRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> MonikerRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:MonikerRegistrationOptions] :: MonikerRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:MonikerRegistrationOptions] :: MonikerRegistrationOptions -> Maybe Bool

data MonikerParams
MonikerParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> MonikerParams

-- | The text document.
[$sel:_textDocument:MonikerParams] :: MonikerParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:MonikerParams] :: MonikerParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:MonikerParams] :: MonikerParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:MonikerParams] :: MonikerParams -> Maybe ProgressToken

data MonikerOptions
MonikerOptions :: Maybe Bool -> MonikerOptions

[$sel:_workDoneProgress:MonikerOptions] :: MonikerOptions -> Maybe Bool

-- | The moniker kind.
data MonikerKind

-- | The moniker represent a symbol that is imported into a project
MonikerKind_Import :: MonikerKind

-- | The moniker represents a symbol that is exported from a project
MonikerKind_Export :: MonikerKind

-- | The moniker represents a symbol that is local to a project (e.g. a
--   local variable of a function, a class not visible outside the project,
--   ...)
MonikerKind_Local :: MonikerKind

-- | Client capabilities specific to the moniker request.
data MonikerClientCapabilities
MonikerClientCapabilities :: Maybe Bool -> MonikerClientCapabilities

-- | Whether moniker supports dynamic registration. If this is set to
--   <tt>true</tt> the client supports the new
--   <tt>MonikerRegistrationOptions</tt> return value for the corresponding
--   server capability as well.
[$sel:_dynamicRegistration:MonikerClientCapabilities] :: MonikerClientCapabilities -> Maybe Bool

-- | Moniker definition to match LSIF 0.5 moniker definition.
data Moniker
Moniker :: Text -> Text -> UniquenessLevel -> Maybe MonikerKind -> Moniker

-- | The scheme of the moniker. For example tsc or .Net
[$sel:_scheme:Moniker] :: Moniker -> Text

-- | The identifier of the moniker. The value is opaque in LSIF however
--   schema owners are allowed to define the structure if they want.
[$sel:_identifier:Moniker] :: Moniker -> Text

-- | The scope in which the moniker is unique
[$sel:_unique:Moniker] :: Moniker -> UniquenessLevel

-- | The moniker kind if known.
[$sel:_kind:Moniker] :: Moniker -> Maybe MonikerKind

-- | The message type
data MessageType

-- | An error message.
MessageType_Error :: MessageType

-- | A warning message.
MessageType_Warning :: MessageType

-- | An information message.
MessageType_Info :: MessageType

-- | A log message.
MessageType_Log :: MessageType

data MessageActionItem
MessageActionItem :: Text -> MessageActionItem

-- | A short title like <tt>Retry</tt>, 'Open Log' etc.
[$sel:_title:MessageActionItem] :: MessageActionItem -> Text

-- | Describes the content type that a client supports in various result
--   literals like <tt>Hover</tt>, <tt>ParameterInfo</tt> or
--   <tt>CompletionItem</tt>.
--   
--   Please note that <tt>MarkupKinds</tt> must not start with a <a>$</a>.
--   This kinds are reserved for internal usage.
data MarkupKind

-- | Plain text is supported as a content format
MarkupKind_PlainText :: MarkupKind

-- | Markdown is supported as a content format
MarkupKind_Markdown :: MarkupKind

-- | A <a>MarkupContent</a> literal represents a string value which content
--   is interpreted base on its kind flag. Currently the protocol supports
--   <tt>plaintext</tt> and <tt>markdown</tt> as markup kinds.
--   
--   If the kind is <tt>markdown</tt> then the value can contain fenced
--   code blocks like in GitHub issues. See
--   <a>https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting</a>
--   
--   Here is an example how such a string can be constructed using
--   JavaScript / TypeScript: ```ts let markdown: MarkdownContent = { kind:
--   MarkupKind.Markdown, value: [ '# Header', 'Some text',
--   '``<tt>typescript</tt>, 'someCode();', '```' ].join('n') }; ```
--   
--   <ul>
--   <li>Please Note* that clients might sanitize the return markdown. A
--   client could decide to remove HTML from the markdown to avoid script
--   execution.</li>
--   </ul>
data MarkupContent
MarkupContent :: MarkupKind -> Text -> MarkupContent

-- | The type of the Markup
[$sel:_kind:MarkupContent] :: MarkupContent -> MarkupKind

-- | The content itself
[$sel:_value:MarkupContent] :: MarkupContent -> Text

-- | MarkedString can be used to render human readable text. It is either a
--   markdown string or a code-block that provides a language and a code
--   snippet. The language identifier is semantically equal to the optional
--   language identifier in fenced code blocks in GitHub issues. See
--   <a>https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting</a>
--   
--   The pair of a language and a value is an equivalent to markdown:
--   ```${language} ${value} ```
--   
--   Note that markdown strings will be sanitized - that means html will be
--   escaped. @deprecated use MarkupContent instead.

-- | <i>Deprecated: use MarkupContent instead.</i>
newtype MarkedString

-- | <i>Deprecated: use MarkupContent instead.</i>
MarkedString :: (Text |? Rec (("language" .== Text) .+ (("value" .== Text) .+ Empty))) -> MarkedString

-- | Client capabilities specific to the used markdown parser.
data MarkdownClientCapabilities
MarkdownClientCapabilities :: Text -> Maybe Text -> Maybe [Text] -> MarkdownClientCapabilities

-- | The name of the parser.
[$sel:_parser:MarkdownClientCapabilities] :: MarkdownClientCapabilities -> Text

-- | The version of the parser.
[$sel:_version:MarkdownClientCapabilities] :: MarkdownClientCapabilities -> Maybe Text

-- | A list of HTML tags that the client allows / supports in Markdown.
[$sel:_allowedTags:MarkdownClientCapabilities] :: MarkdownClientCapabilities -> Maybe [Text]

data LogTraceParams
LogTraceParams :: Text -> Maybe Text -> LogTraceParams

[$sel:_message:LogTraceParams] :: LogTraceParams -> Text

[$sel:_verbose:LogTraceParams] :: LogTraceParams -> Maybe Text

-- | The log message parameters.
data LogMessageParams
LogMessageParams :: MessageType -> Text -> LogMessageParams

-- | The message type. See <tt>MessageType</tt>
[$sel:_type_:LogMessageParams] :: LogMessageParams -> MessageType

-- | The actual message.
[$sel:_message:LogMessageParams] :: LogMessageParams -> Text

-- | Represents the connection of two locations. Provides additional
--   metadata over normal <tt>Location</tt>, including an origin range.
data LocationLink
LocationLink :: Maybe Range -> Uri -> Range -> Range -> LocationLink

-- | Span of the origin of this link.
--   
--   Used as the underlined span for mouse interaction. Defaults to the
--   word range at the definition position.
[$sel:_originSelectionRange:LocationLink] :: LocationLink -> Maybe Range

-- | The target resource identifier of this link.
[$sel:_targetUri:LocationLink] :: LocationLink -> Uri

-- | The full target range of this link. If the target for example is a
--   symbol then target range is the range enclosing this symbol not
--   including leading/trailing whitespace but everything else like
--   comments. This information is typically used to highlight the range in
--   the editor.
[$sel:_targetRange:LocationLink] :: LocationLink -> Range

-- | The range that should be selected and revealed when this link is being
--   followed, e.g the name of a function. Must be contained by the
--   <tt>targetRange</tt>. See also `DocumentSymbol#range`
[$sel:_targetSelectionRange:LocationLink] :: LocationLink -> Range

-- | Represents a location inside a resource, such as a line inside a text
--   file.
data Location
Location :: Uri -> Range -> Location

[$sel:_uri:Location] :: Location -> Uri

[$sel:_range:Location] :: Location -> Range

-- | The result of a linked editing range request.
data LinkedEditingRanges
LinkedEditingRanges :: [Range] -> Maybe Text -> LinkedEditingRanges

-- | A list of ranges that can be edited together. The ranges must have
--   identical length and contain identical text content. The ranges cannot
--   overlap.
[$sel:_ranges:LinkedEditingRanges] :: LinkedEditingRanges -> [Range]

-- | An optional word pattern (regular expression) that describes valid
--   contents for the given ranges. If no pattern is provided, the client
--   configuration's word pattern will be used.
[$sel:_wordPattern:LinkedEditingRanges] :: LinkedEditingRanges -> Maybe Text

data LinkedEditingRangeRegistrationOptions
LinkedEditingRangeRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> LinkedEditingRangeRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:LinkedEditingRangeRegistrationOptions] :: LinkedEditingRangeRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:LinkedEditingRangeRegistrationOptions] :: LinkedEditingRangeRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:LinkedEditingRangeRegistrationOptions] :: LinkedEditingRangeRegistrationOptions -> Maybe Text

data LinkedEditingRangeParams
LinkedEditingRangeParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> LinkedEditingRangeParams

-- | The text document.
[$sel:_textDocument:LinkedEditingRangeParams] :: LinkedEditingRangeParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:LinkedEditingRangeParams] :: LinkedEditingRangeParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:LinkedEditingRangeParams] :: LinkedEditingRangeParams -> Maybe ProgressToken

data LinkedEditingRangeOptions
LinkedEditingRangeOptions :: Maybe Bool -> LinkedEditingRangeOptions

[$sel:_workDoneProgress:LinkedEditingRangeOptions] :: LinkedEditingRangeOptions -> Maybe Bool

-- | Client capabilities for the linked editing range request.
data LinkedEditingRangeClientCapabilities
LinkedEditingRangeClientCapabilities :: Maybe Bool -> LinkedEditingRangeClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   `(TextDocumentRegistrationOptions &amp; StaticRegistrationOptions)`
--   return value for the corresponding server capability as well.
[$sel:_dynamicRegistration:LinkedEditingRangeClientCapabilities] :: LinkedEditingRangeClientCapabilities -> Maybe Bool

data LSPErrorCodes

-- | A request failed but it was syntactically correct, e.g the method name
--   was known and the parameters were valid. The error message should
--   contain human readable information about why the request failed.
LSPErrorCodes_RequestFailed :: LSPErrorCodes

-- | The server cancelled the request. This error code should only be used
--   for requests that explicitly support being server cancellable.
LSPErrorCodes_ServerCancelled :: LSPErrorCodes

-- | The server detected that the content of a document got modified
--   outside normal conditions. A server should NOT send this error code if
--   it detects a content change in it unprocessed messages. The result
--   even computed on an older state might still be useful for the client.
--   
--   If a client decides that a result is not of any use anymore the client
--   should cancel the request.
LSPErrorCodes_ContentModified :: LSPErrorCodes

-- | The client has canceled a request and a server as detected the cancel.
LSPErrorCodes_RequestCancelled :: LSPErrorCodes
LSPErrorCodes_Custom :: Int32 -> LSPErrorCodes

-- | How whitespace and indentation is handled during completion item
--   insertion.
data InsertTextMode

-- | The insertion or replace strings is taken as it is. If the value is
--   multi line the lines below the cursor will be inserted using the
--   indentation defined in the string value. The client will not apply any
--   kind of adjustments to the string.
InsertTextMode_AsIs :: InsertTextMode

-- | The editor adjusts leading whitespace of new lines so that they match
--   the indentation up to the cursor of the line for which the item is
--   accepted.
--   
--   Consider a line like this: <a>2tabs</a><a>cursor</a><a>3tabs</a>foo.
--   Accepting a multi line completion item is indented using 2 tabs and
--   all following lines inserted will be indented using 2 tabs as well.
InsertTextMode_AdjustIndentation :: InsertTextMode

-- | Defines whether the insert text in a completion item should be
--   interpreted as plain text or a snippet.
data InsertTextFormat

-- | The primary text to be inserted is treated as a plain string.
InsertTextFormat_PlainText :: InsertTextFormat

-- | The primary text to be inserted is treated as a snippet.
--   
--   A snippet can define tab stops and placeholders with `$1`, `$2` and
--   `${3:foo}`. `$0` defines the final tab stop, it defaults to the end of
--   the snippet. Placeholders with equal identifiers are linked, that is
--   typing in one will update others too.
--   
--   See also:
--   <a>https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax</a>
InsertTextFormat_Snippet :: InsertTextFormat

-- | A special text edit to provide an insert and a replace operation.
data InsertReplaceEdit
InsertReplaceEdit :: Text -> Range -> Range -> InsertReplaceEdit

-- | The string to be inserted.
[$sel:_newText:InsertReplaceEdit] :: InsertReplaceEdit -> Text

-- | The range if the insert is requested
[$sel:_insert:InsertReplaceEdit] :: InsertReplaceEdit -> Range

-- | The range if the replace is requested.
[$sel:_replace:InsertReplaceEdit] :: InsertReplaceEdit -> Range

-- | Client workspace capabilities specific to inline values.
data InlineValueWorkspaceClientCapabilities
InlineValueWorkspaceClientCapabilities :: Maybe Bool -> InlineValueWorkspaceClientCapabilities

-- | Whether the client implementation supports a refresh request sent from
--   the server to the client.
--   
--   Note that this event is global and will force the client to refresh
--   all inline values currently shown. It should be used with absolute
--   care and is useful for situation where a server for example detects a
--   project wide change that requires such a calculation.
[$sel:_refreshSupport:InlineValueWorkspaceClientCapabilities] :: InlineValueWorkspaceClientCapabilities -> Maybe Bool

-- | Provide inline value through a variable lookup. If only a range is
--   specified, the variable name will be extracted from the underlying
--   document. An optional variable name can be used to override the
--   extracted name.
data InlineValueVariableLookup
InlineValueVariableLookup :: Range -> Maybe Text -> Bool -> InlineValueVariableLookup

-- | The document range for which the inline value applies. The range is
--   used to extract the variable name from the underlying document.
[$sel:_range:InlineValueVariableLookup] :: InlineValueVariableLookup -> Range

-- | If specified the name of the variable to look up.
[$sel:_variableName:InlineValueVariableLookup] :: InlineValueVariableLookup -> Maybe Text

-- | How to perform the lookup.
[$sel:_caseSensitiveLookup:InlineValueVariableLookup] :: InlineValueVariableLookup -> Bool

-- | Provide inline value as text.
data InlineValueText
InlineValueText :: Range -> Text -> InlineValueText

-- | The document range for which the inline value applies.
[$sel:_range:InlineValueText] :: InlineValueText -> Range

-- | The text of the inline value.
[$sel:_text:InlineValueText] :: InlineValueText -> Text

-- | Inline value options used during static or dynamic registration.
data InlineValueRegistrationOptions
InlineValueRegistrationOptions :: Maybe Bool -> (DocumentSelector |? Null) -> Maybe Text -> InlineValueRegistrationOptions

[$sel:_workDoneProgress:InlineValueRegistrationOptions] :: InlineValueRegistrationOptions -> Maybe Bool

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:InlineValueRegistrationOptions] :: InlineValueRegistrationOptions -> DocumentSelector |? Null

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:InlineValueRegistrationOptions] :: InlineValueRegistrationOptions -> Maybe Text

-- | A parameter literal used in inline value requests.
data InlineValueParams
InlineValueParams :: Maybe ProgressToken -> TextDocumentIdentifier -> Range -> InlineValueContext -> InlineValueParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:InlineValueParams] :: InlineValueParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:InlineValueParams] :: InlineValueParams -> TextDocumentIdentifier

-- | The document range for which inline values should be computed.
[$sel:_range:InlineValueParams] :: InlineValueParams -> Range

-- | Additional information about the context in which inline values were
--   requested.
[$sel:_context:InlineValueParams] :: InlineValueParams -> InlineValueContext

-- | Inline value options used during static registration.
data InlineValueOptions
InlineValueOptions :: Maybe Bool -> InlineValueOptions

[$sel:_workDoneProgress:InlineValueOptions] :: InlineValueOptions -> Maybe Bool

-- | Provide an inline value through an expression evaluation. If only a
--   range is specified, the expression will be extracted from the
--   underlying document. An optional expression can be used to override
--   the extracted expression.
data InlineValueEvaluatableExpression
InlineValueEvaluatableExpression :: Range -> Maybe Text -> InlineValueEvaluatableExpression

-- | The document range for which the inline value applies. The range is
--   used to extract the evaluatable expression from the underlying
--   document.
[$sel:_range:InlineValueEvaluatableExpression] :: InlineValueEvaluatableExpression -> Range

-- | If specified the expression overrides the extracted expression.
[$sel:_expression:InlineValueEvaluatableExpression] :: InlineValueEvaluatableExpression -> Maybe Text

data InlineValueContext
InlineValueContext :: Int32 -> Range -> InlineValueContext

-- | The stack frame (as a DAP Id) where the execution has stopped.
[$sel:_frameId:InlineValueContext] :: InlineValueContext -> Int32

-- | The document range where execution has stopped. Typically the end
--   position of the range denotes the line where the inline values are
--   shown.
[$sel:_stoppedLocation:InlineValueContext] :: InlineValueContext -> Range

-- | Client capabilities specific to inline values.
data InlineValueClientCapabilities
InlineValueClientCapabilities :: Maybe Bool -> InlineValueClientCapabilities

-- | Whether implementation supports dynamic registration for inline value
--   providers.
[$sel:_dynamicRegistration:InlineValueClientCapabilities] :: InlineValueClientCapabilities -> Maybe Bool

-- | Inline value information can be provided by different means: -
--   directly as a text value (class InlineValueText). - as a name to use
--   for a variable lookup (class InlineValueVariableLookup) - as an
--   evaluatable expression (class InlineValueEvaluatableExpression) The
--   InlineValue types combines all inline value types into one type.
newtype InlineValue
InlineValue :: (InlineValueText |? (InlineValueVariableLookup |? InlineValueEvaluatableExpression)) -> InlineValue

-- | Client workspace capabilities specific to inlay hints.
data InlayHintWorkspaceClientCapabilities
InlayHintWorkspaceClientCapabilities :: Maybe Bool -> InlayHintWorkspaceClientCapabilities

-- | Whether the client implementation supports a refresh request sent from
--   the server to the client.
--   
--   Note that this event is global and will force the client to refresh
--   all inlay hints currently shown. It should be used with absolute care
--   and is useful for situation where a server for example detects a
--   project wide change that requires such a calculation.
[$sel:_refreshSupport:InlayHintWorkspaceClientCapabilities] :: InlayHintWorkspaceClientCapabilities -> Maybe Bool

-- | Inlay hint options used during static or dynamic registration.
data InlayHintRegistrationOptions
InlayHintRegistrationOptions :: Maybe Bool -> Maybe Bool -> (DocumentSelector |? Null) -> Maybe Text -> InlayHintRegistrationOptions

[$sel:_workDoneProgress:InlayHintRegistrationOptions] :: InlayHintRegistrationOptions -> Maybe Bool

-- | The server provides support to resolve additional information for an
--   inlay hint item.
[$sel:_resolveProvider:InlayHintRegistrationOptions] :: InlayHintRegistrationOptions -> Maybe Bool

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:InlayHintRegistrationOptions] :: InlayHintRegistrationOptions -> DocumentSelector |? Null

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:InlayHintRegistrationOptions] :: InlayHintRegistrationOptions -> Maybe Text

-- | A parameter literal used in inlay hint requests.
data InlayHintParams
InlayHintParams :: Maybe ProgressToken -> TextDocumentIdentifier -> Range -> InlayHintParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:InlayHintParams] :: InlayHintParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:InlayHintParams] :: InlayHintParams -> TextDocumentIdentifier

-- | The document range for which inlay hints should be computed.
[$sel:_range:InlayHintParams] :: InlayHintParams -> Range

-- | Inlay hint options used during static registration.
data InlayHintOptions
InlayHintOptions :: Maybe Bool -> Maybe Bool -> InlayHintOptions

[$sel:_workDoneProgress:InlayHintOptions] :: InlayHintOptions -> Maybe Bool

-- | The server provides support to resolve additional information for an
--   inlay hint item.
[$sel:_resolveProvider:InlayHintOptions] :: InlayHintOptions -> Maybe Bool

-- | An inlay hint label part allows for interactive and composite labels
--   of inlay hints.
data InlayHintLabelPart
InlayHintLabelPart :: Text -> Maybe (Text |? MarkupContent) -> Maybe Location -> Maybe Command -> InlayHintLabelPart

-- | The value of this label part.
[$sel:_value:InlayHintLabelPart] :: InlayHintLabelPart -> Text

-- | The tooltip text when you hover over this label part. Depending on the
--   client capability `inlayHint.resolveSupport` clients might resolve
--   this property late using the resolve request.
[$sel:_tooltip:InlayHintLabelPart] :: InlayHintLabelPart -> Maybe (Text |? MarkupContent)

-- | An optional source code location that represents this label part.
--   
--   The editor will use this location for the hover and for code
--   navigation features: This part will become a clickable link that
--   resolves to the definition of the symbol at the given location (not
--   necessarily the location itself), it shows the hover that shows at the
--   given location, and it shows a context menu with further code
--   navigation commands.
--   
--   Depending on the client capability `inlayHint.resolveSupport` clients
--   might resolve this property late using the resolve request.
[$sel:_location:InlayHintLabelPart] :: InlayHintLabelPart -> Maybe Location

-- | An optional command for this label part.
--   
--   Depending on the client capability `inlayHint.resolveSupport` clients
--   might resolve this property late using the resolve request.
[$sel:_command:InlayHintLabelPart] :: InlayHintLabelPart -> Maybe Command

-- | Inlay hint kinds.
data InlayHintKind

-- | An inlay hint that for a type annotation.
InlayHintKind_Type :: InlayHintKind

-- | An inlay hint that is for a parameter.
InlayHintKind_Parameter :: InlayHintKind

-- | Inlay hint client capabilities.
data InlayHintClientCapabilities
InlayHintClientCapabilities :: Maybe Bool -> Maybe (Rec (("properties" .== [Text]) .+ Empty)) -> InlayHintClientCapabilities

-- | Whether inlay hints support dynamic registration.
[$sel:_dynamicRegistration:InlayHintClientCapabilities] :: InlayHintClientCapabilities -> Maybe Bool

-- | Indicates which properties a client can resolve lazily on an inlay
--   hint.
[$sel:_resolveSupport:InlayHintClientCapabilities] :: InlayHintClientCapabilities -> Maybe (Rec (("properties" .== [Text]) .+ Empty))

-- | Inlay hint information.
data InlayHint
InlayHint :: Position -> (Text |? [InlayHintLabelPart]) -> Maybe InlayHintKind -> Maybe [TextEdit] -> Maybe (Text |? MarkupContent) -> Maybe Bool -> Maybe Bool -> Maybe Value -> InlayHint

-- | The position of this hint.
[$sel:_position:InlayHint] :: InlayHint -> Position

-- | The label of this hint. A human readable string or an array of
--   InlayHintLabelPart label parts.
--   
--   <ul>
--   <li>Note* that neither the string nor the label part can be
--   empty.</li>
--   </ul>
[$sel:_label:InlayHint] :: InlayHint -> Text |? [InlayHintLabelPart]

-- | The kind of this hint. Can be omitted in which case the client should
--   fall back to a reasonable default.
[$sel:_kind:InlayHint] :: InlayHint -> Maybe InlayHintKind

-- | Optional text edits that are performed when accepting this inlay hint.
--   
--   <ul>
--   <li>Note* that edits are expected to change the document so that the
--   inlay hint (or its nearest variant) is now part of the document and
--   the inlay hint itself is now obsolete.</li>
--   </ul>
[$sel:_textEdits:InlayHint] :: InlayHint -> Maybe [TextEdit]

-- | The tooltip text when you hover over this item.
[$sel:_tooltip:InlayHint] :: InlayHint -> Maybe (Text |? MarkupContent)

-- | Render padding before the hint.
--   
--   Note: Padding should use the editor's background color, not the
--   background color of the hint itself. That means padding can be used to
--   visually align/separate an inlay hint.
[$sel:_paddingLeft:InlayHint] :: InlayHint -> Maybe Bool

-- | Render padding after the hint.
--   
--   Note: Padding should use the editor's background color, not the
--   background color of the hint itself. That means padding can be used to
--   visually align/separate an inlay hint.
[$sel:_paddingRight:InlayHint] :: InlayHint -> Maybe Bool

-- | A data entry field that is preserved on an inlay hint between a
--   `textDocument<i>inlayHint` and a `inlayHint</i>resolve` request.
[$sel:_data_:InlayHint] :: InlayHint -> Maybe Value

data InitializedParams
InitializedParams :: InitializedParams

-- | The result returned from an initialize request.
data InitializeResult
InitializeResult :: ServerCapabilities -> Maybe (Rec (("name" .== Text) .+ (("version" .== Maybe Text) .+ Empty))) -> InitializeResult

-- | The capabilities the language server provides.
[$sel:_capabilities:InitializeResult] :: InitializeResult -> ServerCapabilities

-- | Information about the server.
[$sel:_serverInfo:InitializeResult] :: InitializeResult -> Maybe (Rec (("name" .== Text) .+ (("version" .== Maybe Text) .+ Empty)))

data InitializeParams
InitializeParams :: Maybe ProgressToken -> (Int32 |? Null) -> Maybe (Rec (("name" .== Text) .+ (("version" .== Maybe Text) .+ Empty))) -> Maybe Text -> Maybe (Text |? Null) -> (Uri |? Null) -> ClientCapabilities -> Maybe Value -> Maybe TraceValues -> Maybe ([WorkspaceFolder] |? Null) -> InitializeParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:InitializeParams] :: InitializeParams -> Maybe ProgressToken

-- | The process Id of the parent process that started the server.
--   
--   Is <a>null</a> if the process has not been started by another process.
--   If the parent process is not alive then the server should exit.
[$sel:_processId:InitializeParams] :: InitializeParams -> Int32 |? Null

-- | Information about the client
[$sel:_clientInfo:InitializeParams] :: InitializeParams -> Maybe (Rec (("name" .== Text) .+ (("version" .== Maybe Text) .+ Empty)))

-- | The locale the client is currently showing the user interface in. This
--   must not necessarily be the locale of the operating system.
--   
--   Uses IETF language tags as the value's syntax (See
--   <a>https://en.wikipedia.org/wiki/IETF_language_tag)</a>
[$sel:_locale:InitializeParams] :: InitializeParams -> Maybe Text

-- | The rootPath of the workspace. Is null if no folder is open.
--   
--   @deprecated in favour of rootUri.
[$sel:_rootPath:InitializeParams] :: InitializeParams -> Maybe (Text |? Null)

-- | The rootUri of the workspace. Is null if no folder is open. If both
--   <tt>rootPath</tt> and <tt>rootUri</tt> are set <tt>rootUri</tt> wins.
--   
--   @deprecated in favour of workspaceFolders.
[$sel:_rootUri:InitializeParams] :: InitializeParams -> Uri |? Null

-- | The capabilities provided by the client (editor or tool)
[$sel:_capabilities:InitializeParams] :: InitializeParams -> ClientCapabilities

-- | User provided initialization options.
[$sel:_initializationOptions:InitializeParams] :: InitializeParams -> Maybe Value

-- | The initial trace setting. If omitted trace is disabled
--   (<tt>off</tt>).
[$sel:_trace:InitializeParams] :: InitializeParams -> Maybe TraceValues

-- | The workspace folders configured in the client when the server starts.
--   
--   This property is only available if the client supports workspace
--   folders. It can be <a>null</a> if the client supports workspace
--   folders but none are configured.
[$sel:_workspaceFolders:InitializeParams] :: InitializeParams -> Maybe ([WorkspaceFolder] |? Null)

-- | The data type of the ResponseError if the initialize request fails.
data InitializeError
InitializeError :: Bool -> InitializeError

-- | Indicates whether the client execute the following retry logic: (1)
--   show the message provided by the ResponseError to the user (2) user
--   selects retry or cancel (3) if user selected retry the initialize
--   method is sent again.
[$sel:_retry:InitializeError] :: InitializeError -> Bool

data ImplementationRegistrationOptions
ImplementationRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> ImplementationRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:ImplementationRegistrationOptions] :: ImplementationRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:ImplementationRegistrationOptions] :: ImplementationRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:ImplementationRegistrationOptions] :: ImplementationRegistrationOptions -> Maybe Text

data ImplementationParams
ImplementationParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> ImplementationParams

-- | The text document.
[$sel:_textDocument:ImplementationParams] :: ImplementationParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:ImplementationParams] :: ImplementationParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:ImplementationParams] :: ImplementationParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:ImplementationParams] :: ImplementationParams -> Maybe ProgressToken

data ImplementationOptions
ImplementationOptions :: Maybe Bool -> ImplementationOptions

[$sel:_workDoneProgress:ImplementationOptions] :: ImplementationOptions -> Maybe Bool

data ImplementationClientCapabilities
ImplementationClientCapabilities :: Maybe Bool -> Maybe Bool -> ImplementationClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   <tt>ImplementationRegistrationOptions</tt> return value for the
--   corresponding server capability as well.
[$sel:_dynamicRegistration:ImplementationClientCapabilities] :: ImplementationClientCapabilities -> Maybe Bool

-- | The client supports additional metadata in the form of definition
--   links.
[$sel:_linkSupport:ImplementationClientCapabilities] :: ImplementationClientCapabilities -> Maybe Bool

-- | Registration options for a <tt>HoverRequest</tt>.
data HoverRegistrationOptions
HoverRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> HoverRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:HoverRegistrationOptions] :: HoverRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:HoverRegistrationOptions] :: HoverRegistrationOptions -> Maybe Bool

-- | Parameters for a <tt>HoverRequest</tt>.
data HoverParams
HoverParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> HoverParams

-- | The text document.
[$sel:_textDocument:HoverParams] :: HoverParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:HoverParams] :: HoverParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:HoverParams] :: HoverParams -> Maybe ProgressToken

-- | Hover options.
data HoverOptions
HoverOptions :: Maybe Bool -> HoverOptions

[$sel:_workDoneProgress:HoverOptions] :: HoverOptions -> Maybe Bool

data HoverClientCapabilities
HoverClientCapabilities :: Maybe Bool -> Maybe [MarkupKind] -> HoverClientCapabilities

-- | Whether hover supports dynamic registration.
[$sel:_dynamicRegistration:HoverClientCapabilities] :: HoverClientCapabilities -> Maybe Bool

-- | Client supports the following content formats for the content
--   property. The order describes the preferred format of the client.
[$sel:_contentFormat:HoverClientCapabilities] :: HoverClientCapabilities -> Maybe [MarkupKind]

-- | The result of a hover request.
data Hover
Hover :: (MarkupContent |? (MarkedString |? [MarkedString])) -> Maybe Range -> Hover

-- | The hover's content
[$sel:_contents:Hover] :: Hover -> MarkupContent |? (MarkedString |? [MarkedString])

-- | An optional range inside the text document that is used to visualize
--   the hover, e.g. by changing the background color.
[$sel:_range:Hover] :: Hover -> Maybe Range

-- | The glob pattern. Either a string pattern or a relative pattern.
newtype GlobPattern
GlobPattern :: (Pattern |? RelativePattern) -> GlobPattern

-- | General client capabilities.
data GeneralClientCapabilities
GeneralClientCapabilities :: Maybe (Rec (("cancel" .== Bool) .+ (("retryOnContentModified" .== [Text]) .+ Empty))) -> Maybe RegularExpressionsClientCapabilities -> Maybe MarkdownClientCapabilities -> Maybe [PositionEncodingKind] -> GeneralClientCapabilities

-- | Client capability that signals how the client handles stale requests
--   (e.g. a request for which the client will not process the response
--   anymore since the information is outdated).
[$sel:_staleRequestSupport:GeneralClientCapabilities] :: GeneralClientCapabilities -> Maybe (Rec (("cancel" .== Bool) .+ (("retryOnContentModified" .== [Text]) .+ Empty)))

-- | Client capabilities specific to regular expressions.
[$sel:_regularExpressions:GeneralClientCapabilities] :: GeneralClientCapabilities -> Maybe RegularExpressionsClientCapabilities

-- | Client capabilities specific to the client's markdown parser.
[$sel:_markdown:GeneralClientCapabilities] :: GeneralClientCapabilities -> Maybe MarkdownClientCapabilities

-- | The position encodings supported by the client. Client and server have
--   to agree on the same position encoding to ensure that offsets (e.g.
--   character position in a line) are interpreted the same on both sides.
--   
--   To keep the protocol backwards compatible the following applies: if
--   the value 'utf-16' is missing from the array of position encodings
--   servers can assume that the client supports UTF-16. UTF-16 is
--   therefore a mandatory encoding.
--   
--   If omitted it defaults to ['utf-16'].
--   
--   Implementation considerations: since the conversion from one encoding
--   into another requires the content of the file / line the conversion is
--   best done where the file is read which is usually on the server side.
[$sel:_positionEncodings:GeneralClientCapabilities] :: GeneralClientCapabilities -> Maybe [PositionEncodingKind]

-- | A diagnostic report with a full set of problems.
data FullDocumentDiagnosticReport
FullDocumentDiagnosticReport :: AString "full" -> Maybe Text -> [Diagnostic] -> FullDocumentDiagnosticReport

-- | A full document diagnostic report.
[$sel:_kind:FullDocumentDiagnosticReport] :: FullDocumentDiagnosticReport -> AString "full"

-- | An optional result id. If provided it will be sent on the next
--   diagnostic request for the same document.
[$sel:_resultId:FullDocumentDiagnosticReport] :: FullDocumentDiagnosticReport -> Maybe Text

-- | The actual items.
[$sel:_items:FullDocumentDiagnosticReport] :: FullDocumentDiagnosticReport -> [Diagnostic]

-- | Value-object describing what options formatting should use.
data FormattingOptions
FormattingOptions :: UInt -> Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> FormattingOptions

-- | Size of a tab in spaces.
[$sel:_tabSize:FormattingOptions] :: FormattingOptions -> UInt

-- | Prefer spaces over tabs.
[$sel:_insertSpaces:FormattingOptions] :: FormattingOptions -> Bool

-- | Trim trailing whitespace on a line.
[$sel:_trimTrailingWhitespace:FormattingOptions] :: FormattingOptions -> Maybe Bool

-- | Insert a newline character at the end of the file if one does not
--   exist.
[$sel:_insertFinalNewline:FormattingOptions] :: FormattingOptions -> Maybe Bool

-- | Trim all newlines after the final newline at the end of the file.
[$sel:_trimFinalNewlines:FormattingOptions] :: FormattingOptions -> Maybe Bool

data FoldingRangeRegistrationOptions
FoldingRangeRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> FoldingRangeRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:FoldingRangeRegistrationOptions] :: FoldingRangeRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:FoldingRangeRegistrationOptions] :: FoldingRangeRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:FoldingRangeRegistrationOptions] :: FoldingRangeRegistrationOptions -> Maybe Text

-- | Parameters for a <tt>FoldingRangeRequest</tt>.
data FoldingRangeParams
FoldingRangeParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> FoldingRangeParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:FoldingRangeParams] :: FoldingRangeParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:FoldingRangeParams] :: FoldingRangeParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:FoldingRangeParams] :: FoldingRangeParams -> TextDocumentIdentifier

data FoldingRangeOptions
FoldingRangeOptions :: Maybe Bool -> FoldingRangeOptions

[$sel:_workDoneProgress:FoldingRangeOptions] :: FoldingRangeOptions -> Maybe Bool

-- | A set of predefined range kinds.
data FoldingRangeKind

-- | Folding range for a comment
FoldingRangeKind_Comment :: FoldingRangeKind

-- | Folding range for an import or include
FoldingRangeKind_Imports :: FoldingRangeKind

-- | Folding range for a region (e.g. `#region`)
FoldingRangeKind_Region :: FoldingRangeKind
FoldingRangeKind_Custom :: Text -> FoldingRangeKind

data FoldingRangeClientCapabilities
FoldingRangeClientCapabilities :: Maybe Bool -> Maybe UInt -> Maybe Bool -> Maybe (Rec (("valueSet" .== Maybe [FoldingRangeKind]) .+ Empty)) -> Maybe (Rec (("collapsedText" .== Maybe Bool) .+ Empty)) -> FoldingRangeClientCapabilities

-- | Whether implementation supports dynamic registration for folding range
--   providers. If this is set to <tt>true</tt> the client supports the new
--   <tt>FoldingRangeRegistrationOptions</tt> return value for the
--   corresponding server capability as well.
[$sel:_dynamicRegistration:FoldingRangeClientCapabilities] :: FoldingRangeClientCapabilities -> Maybe Bool

-- | The maximum number of folding ranges that the client prefers to
--   receive per document. The value serves as a hint, servers are free to
--   follow the limit.
[$sel:_rangeLimit:FoldingRangeClientCapabilities] :: FoldingRangeClientCapabilities -> Maybe UInt

-- | If set, the client signals that it only supports folding complete
--   lines. If set, client will ignore specified <tt>startCharacter</tt>
--   and <tt>endCharacter</tt> properties in a FoldingRange.
[$sel:_lineFoldingOnly:FoldingRangeClientCapabilities] :: FoldingRangeClientCapabilities -> Maybe Bool

-- | Specific options for the folding range kind.
[$sel:_foldingRangeKind:FoldingRangeClientCapabilities] :: FoldingRangeClientCapabilities -> Maybe (Rec (("valueSet" .== Maybe [FoldingRangeKind]) .+ Empty))

-- | Specific options for the folding range.
[$sel:_foldingRange:FoldingRangeClientCapabilities] :: FoldingRangeClientCapabilities -> Maybe (Rec (("collapsedText" .== Maybe Bool) .+ Empty))

-- | Represents a folding range. To be valid, start and end line must be
--   bigger than zero and smaller than the number of lines in the document.
--   Clients are free to ignore invalid ranges.
data FoldingRange
FoldingRange :: UInt -> Maybe UInt -> UInt -> Maybe UInt -> Maybe FoldingRangeKind -> Maybe Text -> FoldingRange

-- | The zero-based start line of the range to fold. The folded area starts
--   after the line's last character. To be valid, the end must be zero or
--   larger and smaller than the number of lines in the document.
[$sel:_startLine:FoldingRange] :: FoldingRange -> UInt

-- | The zero-based character offset from where the folded range starts. If
--   not defined, defaults to the length of the start line.
[$sel:_startCharacter:FoldingRange] :: FoldingRange -> Maybe UInt

-- | The zero-based end line of the range to fold. The folded area ends
--   with the line's last character. To be valid, the end must be zero or
--   larger and smaller than the number of lines in the document.
[$sel:_endLine:FoldingRange] :: FoldingRange -> UInt

-- | The zero-based character offset before the folded range ends. If not
--   defined, defaults to the length of the end line.
[$sel:_endCharacter:FoldingRange] :: FoldingRange -> Maybe UInt

-- | Describes the kind of the folding range such as <tt>comment</tt> or
--   <tt>region</tt>. The kind is used to categorize folding ranges and
--   used by commands like 'Fold all comments'. See
--   <tt>FoldingRangeKind</tt> for an enumeration of standardized kinds.
[$sel:_kind:FoldingRange] :: FoldingRange -> Maybe FoldingRangeKind

-- | The text that the client should show when the specified range is
--   collapsed. If not defined or not supported by the client, a default
--   will be chosen by the client.
[$sel:_collapsedText:FoldingRange] :: FoldingRange -> Maybe Text

data FileSystemWatcher
FileSystemWatcher :: GlobPattern -> Maybe WatchKind -> FileSystemWatcher

-- | The glob pattern to watch. See <tt>GlobPattern</tt> for more detail.
--   
--   @since 3.17.0 support for relative patterns.
[$sel:_globPattern:FileSystemWatcher] :: FileSystemWatcher -> GlobPattern

-- | The kind of events of interest. If omitted it defaults to
--   WatchKind.Create | WatchKind.Change | WatchKind.Delete which is 7.
[$sel:_kind:FileSystemWatcher] :: FileSystemWatcher -> Maybe WatchKind

-- | Represents information on a file/folder rename.
data FileRename
FileRename :: Text -> Text -> FileRename

-- | A file:/<i> URI for the original location of the file</i>folder being
--   renamed.
[$sel:_oldUri:FileRename] :: FileRename -> Text

-- | A file:/<i> URI for the new location of the file</i>folder being
--   renamed.
[$sel:_newUri:FileRename] :: FileRename -> Text

-- | The options to register for file operations.
data FileOperationRegistrationOptions
FileOperationRegistrationOptions :: [FileOperationFilter] -> FileOperationRegistrationOptions

-- | The actual filters.
[$sel:_filters:FileOperationRegistrationOptions] :: FileOperationRegistrationOptions -> [FileOperationFilter]

-- | Matching options for the file operation pattern.
data FileOperationPatternOptions
FileOperationPatternOptions :: Maybe Bool -> FileOperationPatternOptions

-- | The pattern should be matched ignoring casing.
[$sel:_ignoreCase:FileOperationPatternOptions] :: FileOperationPatternOptions -> Maybe Bool

-- | A pattern kind describing if a glob pattern matches a file a folder or
--   both.
data FileOperationPatternKind

-- | The pattern matches a file only.
FileOperationPatternKind_File :: FileOperationPatternKind

-- | The pattern matches a folder only.
FileOperationPatternKind_Folder :: FileOperationPatternKind

-- | A pattern to describe in which file operation requests or
--   notifications the server is interested in receiving.
data FileOperationPattern
FileOperationPattern :: Text -> Maybe FileOperationPatternKind -> Maybe FileOperationPatternOptions -> FileOperationPattern

-- | The glob pattern to match. Glob patterns can have the following
--   syntax: - <a>*</a> to match one or more characters in a path segment -
--   <tt>?</tt> to match on one character in a path segment - <a>**</a> to
--   match any number of path segments, including none - `{}` to group sub
--   patterns into an OR expression. (e.g. `**​/*.{ts,js}` matches all
--   TypeScript and JavaScript files) - `[]` to declare a range of
--   characters to match in a path segment (e.g., `example.[0-9]` to match
--   on `example.0`, `example.1`, …) - `[!...]` to negate a range of
--   characters to match in a path segment (e.g., `example.[!0-9]` to match
--   on `example.a`, `example.b`, but not `example.0`)
[$sel:_glob:FileOperationPattern] :: FileOperationPattern -> Text

-- | Whether to match files or folders with this pattern.
--   
--   Matches both if undefined.
[$sel:_matches:FileOperationPattern] :: FileOperationPattern -> Maybe FileOperationPatternKind

-- | Additional options used during matching.
[$sel:_options:FileOperationPattern] :: FileOperationPattern -> Maybe FileOperationPatternOptions

-- | Options for notifications/requests for user operations on files.
data FileOperationOptions
FileOperationOptions :: Maybe FileOperationRegistrationOptions -> Maybe FileOperationRegistrationOptions -> Maybe FileOperationRegistrationOptions -> Maybe FileOperationRegistrationOptions -> Maybe FileOperationRegistrationOptions -> Maybe FileOperationRegistrationOptions -> FileOperationOptions

-- | The server is interested in receiving didCreateFiles notifications.
[$sel:_didCreate:FileOperationOptions] :: FileOperationOptions -> Maybe FileOperationRegistrationOptions

-- | The server is interested in receiving willCreateFiles requests.
[$sel:_willCreate:FileOperationOptions] :: FileOperationOptions -> Maybe FileOperationRegistrationOptions

-- | The server is interested in receiving didRenameFiles notifications.
[$sel:_didRename:FileOperationOptions] :: FileOperationOptions -> Maybe FileOperationRegistrationOptions

-- | The server is interested in receiving willRenameFiles requests.
[$sel:_willRename:FileOperationOptions] :: FileOperationOptions -> Maybe FileOperationRegistrationOptions

-- | The server is interested in receiving didDeleteFiles file
--   notifications.
[$sel:_didDelete:FileOperationOptions] :: FileOperationOptions -> Maybe FileOperationRegistrationOptions

-- | The server is interested in receiving willDeleteFiles file requests.
[$sel:_willDelete:FileOperationOptions] :: FileOperationOptions -> Maybe FileOperationRegistrationOptions

-- | A filter to describe in which file operation requests or notifications
--   the server is interested in receiving.
data FileOperationFilter
FileOperationFilter :: Maybe Text -> FileOperationPattern -> FileOperationFilter

-- | A Uri scheme like <tt>file</tt> or <tt>untitled</tt>.
[$sel:_scheme:FileOperationFilter] :: FileOperationFilter -> Maybe Text

-- | The actual file operation pattern.
[$sel:_pattern:FileOperationFilter] :: FileOperationFilter -> FileOperationPattern

-- | Capabilities relating to events from file operations by the user in
--   the client.
--   
--   These events do not come from the file system, they come from user
--   operations like renaming a file in the UI.
data FileOperationClientCapabilities
FileOperationClientCapabilities :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> FileOperationClientCapabilities

-- | Whether the client supports dynamic registration for file
--   requests/notifications.
[$sel:_dynamicRegistration:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | The client has support for sending didCreateFiles notifications.
[$sel:_didCreate:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | The client has support for sending willCreateFiles requests.
[$sel:_willCreate:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | The client has support for sending didRenameFiles notifications.
[$sel:_didRename:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | The client has support for sending willRenameFiles requests.
[$sel:_willRename:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | The client has support for sending didDeleteFiles notifications.
[$sel:_didDelete:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | The client has support for sending willDeleteFiles requests.
[$sel:_willDelete:FileOperationClientCapabilities] :: FileOperationClientCapabilities -> Maybe Bool

-- | An event describing a file change.
data FileEvent
FileEvent :: Uri -> FileChangeType -> FileEvent

-- | The file's uri.
[$sel:_uri:FileEvent] :: FileEvent -> Uri

-- | The change type.
[$sel:_type_:FileEvent] :: FileEvent -> FileChangeType

-- | Represents information on a file/folder delete.
data FileDelete
FileDelete :: Text -> FileDelete

-- | A file:/<i> URI for the location of the file</i>folder being deleted.
[$sel:_uri:FileDelete] :: FileDelete -> Text

-- | Represents information on a file/folder create.
data FileCreate
FileCreate :: Text -> FileCreate

-- | A file:/<i> URI for the location of the file</i>folder being created.
[$sel:_uri:FileCreate] :: FileCreate -> Text

-- | The file event type
data FileChangeType

-- | The file got created.
FileChangeType_Created :: FileChangeType

-- | The file got changed.
FileChangeType_Changed :: FileChangeType

-- | The file got deleted.
FileChangeType_Deleted :: FileChangeType

data FailureHandlingKind

-- | Applying the workspace change is simply aborted if one of the changes
--   provided fails. All operations executed before the failing operation
--   stay executed.
FailureHandlingKind_Abort :: FailureHandlingKind

-- | All operations are executed transactional. That means they either all
--   succeed or no changes at all are applied to the workspace.
FailureHandlingKind_Transactional :: FailureHandlingKind

-- | If the workspace edit contains only textual file changes they are
--   executed transactional. If resource changes (create, rename or delete
--   file) are part of the change the failure handling strategy is abort.
FailureHandlingKind_TextOnlyTransactional :: FailureHandlingKind

-- | The client tries to undo the operations already executed. But there is
--   no guarantee that this is succeeding.
FailureHandlingKind_Undo :: FailureHandlingKind

data ExecutionSummary
ExecutionSummary :: UInt -> Maybe Bool -> ExecutionSummary

-- | A strict monotonically increasing value indicating the execution order
--   of a cell inside a notebook.
[$sel:_executionOrder:ExecutionSummary] :: ExecutionSummary -> UInt

-- | Whether the execution was successful or not if known by the client.
[$sel:_success:ExecutionSummary] :: ExecutionSummary -> Maybe Bool

-- | Registration options for a <tt>ExecuteCommandRequest</tt>.
data ExecuteCommandRegistrationOptions
ExecuteCommandRegistrationOptions :: Maybe Bool -> [Text] -> ExecuteCommandRegistrationOptions

[$sel:_workDoneProgress:ExecuteCommandRegistrationOptions] :: ExecuteCommandRegistrationOptions -> Maybe Bool

-- | The commands to be executed on the server
[$sel:_commands:ExecuteCommandRegistrationOptions] :: ExecuteCommandRegistrationOptions -> [Text]

-- | The parameters of a <tt>ExecuteCommandRequest</tt>.
data ExecuteCommandParams
ExecuteCommandParams :: Maybe ProgressToken -> Text -> Maybe [Value] -> ExecuteCommandParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:ExecuteCommandParams] :: ExecuteCommandParams -> Maybe ProgressToken

-- | The identifier of the actual command handler.
[$sel:_command:ExecuteCommandParams] :: ExecuteCommandParams -> Text

-- | Arguments that the command should be invoked with.
[$sel:_arguments:ExecuteCommandParams] :: ExecuteCommandParams -> Maybe [Value]

-- | The server capabilities of a <tt>ExecuteCommandRequest</tt>.
data ExecuteCommandOptions
ExecuteCommandOptions :: Maybe Bool -> [Text] -> ExecuteCommandOptions

[$sel:_workDoneProgress:ExecuteCommandOptions] :: ExecuteCommandOptions -> Maybe Bool

-- | The commands to be executed on the server
[$sel:_commands:ExecuteCommandOptions] :: ExecuteCommandOptions -> [Text]

-- | The client capabilities of a <tt>ExecuteCommandRequest</tt>.
data ExecuteCommandClientCapabilities
ExecuteCommandClientCapabilities :: Maybe Bool -> ExecuteCommandClientCapabilities

-- | Execute command supports dynamic registration.
[$sel:_dynamicRegistration:ExecuteCommandClientCapabilities] :: ExecuteCommandClientCapabilities -> Maybe Bool

-- | Predefined error codes.
data ErrorCodes

ErrorCodes_ParseError :: ErrorCodes

ErrorCodes_InvalidRequest :: ErrorCodes

ErrorCodes_MethodNotFound :: ErrorCodes

ErrorCodes_InvalidParams :: ErrorCodes

ErrorCodes_InternalError :: ErrorCodes

-- | Error code indicating that a server received a notification or request
--   before the server has received the <tt>initialize</tt> request.
ErrorCodes_ServerNotInitialized :: ErrorCodes

ErrorCodes_UnknownErrorCode :: ErrorCodes
ErrorCodes_Custom :: Int32 -> ErrorCodes

-- | Registration options for a <tt>DocumentSymbolRequest</tt>.
data DocumentSymbolRegistrationOptions
DocumentSymbolRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> DocumentSymbolRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentSymbolRegistrationOptions] :: DocumentSymbolRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DocumentSymbolRegistrationOptions] :: DocumentSymbolRegistrationOptions -> Maybe Bool

-- | A human-readable string that is shown when multiple outlines trees are
--   shown for the same document.
[$sel:_label:DocumentSymbolRegistrationOptions] :: DocumentSymbolRegistrationOptions -> Maybe Text

-- | Parameters for a <tt>DocumentSymbolRequest</tt>.
data DocumentSymbolParams
DocumentSymbolParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> DocumentSymbolParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentSymbolParams] :: DocumentSymbolParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DocumentSymbolParams] :: DocumentSymbolParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:DocumentSymbolParams] :: DocumentSymbolParams -> TextDocumentIdentifier

-- | Provider options for a <tt>DocumentSymbolRequest</tt>.
data DocumentSymbolOptions
DocumentSymbolOptions :: Maybe Bool -> Maybe Text -> DocumentSymbolOptions

[$sel:_workDoneProgress:DocumentSymbolOptions] :: DocumentSymbolOptions -> Maybe Bool

-- | A human-readable string that is shown when multiple outlines trees are
--   shown for the same document.
[$sel:_label:DocumentSymbolOptions] :: DocumentSymbolOptions -> Maybe Text

-- | Client Capabilities for a <tt>DocumentSymbolRequest</tt>.
data DocumentSymbolClientCapabilities
DocumentSymbolClientCapabilities :: Maybe Bool -> Maybe (Rec (("valueSet" .== Maybe [SymbolKind]) .+ Empty)) -> Maybe Bool -> Maybe (Rec (("valueSet" .== [SymbolTag]) .+ Empty)) -> Maybe Bool -> DocumentSymbolClientCapabilities

-- | Whether document symbol supports dynamic registration.
[$sel:_dynamicRegistration:DocumentSymbolClientCapabilities] :: DocumentSymbolClientCapabilities -> Maybe Bool

-- | Specific capabilities for the <tt>SymbolKind</tt> in the
--   `textDocument/documentSymbol` request.
[$sel:_symbolKind:DocumentSymbolClientCapabilities] :: DocumentSymbolClientCapabilities -> Maybe (Rec (("valueSet" .== Maybe [SymbolKind]) .+ Empty))

-- | The client supports hierarchical document symbols.
[$sel:_hierarchicalDocumentSymbolSupport:DocumentSymbolClientCapabilities] :: DocumentSymbolClientCapabilities -> Maybe Bool

-- | The client supports tags on <tt>SymbolInformation</tt>. Tags are
--   supported on <tt>DocumentSymbol</tt> if
--   <tt>hierarchicalDocumentSymbolSupport</tt> is set to true. Clients
--   supporting tags have to handle unknown tags gracefully.
[$sel:_tagSupport:DocumentSymbolClientCapabilities] :: DocumentSymbolClientCapabilities -> Maybe (Rec (("valueSet" .== [SymbolTag]) .+ Empty))

-- | The client supports an additional label presented in the UI when
--   registering a document symbol provider.
[$sel:_labelSupport:DocumentSymbolClientCapabilities] :: DocumentSymbolClientCapabilities -> Maybe Bool

-- | Represents programming constructs like variables, classes, interfaces
--   etc. that appear in a document. Document symbols can be hierarchical
--   and they have two ranges: one that encloses its definition and one
--   that points to its most interesting range, e.g. the range of an
--   identifier.
data DocumentSymbol
DocumentSymbol :: Text -> Maybe Text -> SymbolKind -> Maybe [SymbolTag] -> Maybe Bool -> Range -> Range -> Maybe [DocumentSymbol] -> DocumentSymbol

-- | The name of this symbol. Will be displayed in the user interface and
--   therefore must not be an empty string or a string only consisting of
--   white spaces.
[$sel:_name:DocumentSymbol] :: DocumentSymbol -> Text

-- | More detail for this symbol, e.g the signature of a function.
[$sel:_detail:DocumentSymbol] :: DocumentSymbol -> Maybe Text

-- | The kind of this symbol.
[$sel:_kind:DocumentSymbol] :: DocumentSymbol -> SymbolKind

-- | Tags for this document symbol.
[$sel:_tags:DocumentSymbol] :: DocumentSymbol -> Maybe [SymbolTag]

-- | Indicates if this symbol is deprecated.
--   
--   @deprecated Use tags instead
[$sel:_deprecated:DocumentSymbol] :: DocumentSymbol -> Maybe Bool

-- | The range enclosing this symbol not including leading/trailing
--   whitespace but everything else like comments. This information is
--   typically used to determine if the clients cursor is inside the symbol
--   to reveal in the symbol in the UI.
[$sel:_range:DocumentSymbol] :: DocumentSymbol -> Range

-- | The range that should be selected and revealed when this symbol is
--   being picked, e.g the name of a function. Must be contained by the
--   <tt>range</tt>.
[$sel:_selectionRange:DocumentSymbol] :: DocumentSymbol -> Range

-- | Children of this symbol, e.g. properties of a class.
[$sel:_children:DocumentSymbol] :: DocumentSymbol -> Maybe [DocumentSymbol]

-- | A document selector is the combination of one or many document
--   filters.
--   
--   @sample `let sel:DocumentSelector = [{ language: <tt>typescript</tt>
--   }, { language: <tt>json</tt>, pattern: '**∕tsconfig.json' }]`;
--   
--   The use of a string as a document filter is deprecated @since 3.16.0.
newtype DocumentSelector
DocumentSelector :: [DocumentFilter] -> DocumentSelector

-- | Registration options for a <tt>DocumentRangeFormattingRequest</tt>.
data DocumentRangeFormattingRegistrationOptions
DocumentRangeFormattingRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> DocumentRangeFormattingRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentRangeFormattingRegistrationOptions] :: DocumentRangeFormattingRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DocumentRangeFormattingRegistrationOptions] :: DocumentRangeFormattingRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>DocumentRangeFormattingRequest</tt>.
data DocumentRangeFormattingParams
DocumentRangeFormattingParams :: Maybe ProgressToken -> TextDocumentIdentifier -> Range -> FormattingOptions -> DocumentRangeFormattingParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentRangeFormattingParams] :: DocumentRangeFormattingParams -> Maybe ProgressToken

-- | The document to format.
[$sel:_textDocument:DocumentRangeFormattingParams] :: DocumentRangeFormattingParams -> TextDocumentIdentifier

-- | The range to format
[$sel:_range:DocumentRangeFormattingParams] :: DocumentRangeFormattingParams -> Range

-- | The format options
[$sel:_options:DocumentRangeFormattingParams] :: DocumentRangeFormattingParams -> FormattingOptions

-- | Provider options for a <tt>DocumentRangeFormattingRequest</tt>.
data DocumentRangeFormattingOptions
DocumentRangeFormattingOptions :: Maybe Bool -> DocumentRangeFormattingOptions

[$sel:_workDoneProgress:DocumentRangeFormattingOptions] :: DocumentRangeFormattingOptions -> Maybe Bool

-- | Client capabilities of a <tt>DocumentRangeFormattingRequest</tt>.
data DocumentRangeFormattingClientCapabilities
DocumentRangeFormattingClientCapabilities :: Maybe Bool -> DocumentRangeFormattingClientCapabilities

-- | Whether range formatting supports dynamic registration.
[$sel:_dynamicRegistration:DocumentRangeFormattingClientCapabilities] :: DocumentRangeFormattingClientCapabilities -> Maybe Bool

-- | Registration options for a <tt>DocumentOnTypeFormattingRequest</tt>.
data DocumentOnTypeFormattingRegistrationOptions
DocumentOnTypeFormattingRegistrationOptions :: (DocumentSelector |? Null) -> Text -> Maybe [Text] -> DocumentOnTypeFormattingRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentOnTypeFormattingRegistrationOptions] :: DocumentOnTypeFormattingRegistrationOptions -> DocumentSelector |? Null

-- | A character on which formatting should be triggered, like `{`.
[$sel:_firstTriggerCharacter:DocumentOnTypeFormattingRegistrationOptions] :: DocumentOnTypeFormattingRegistrationOptions -> Text

-- | More trigger characters.
[$sel:_moreTriggerCharacter:DocumentOnTypeFormattingRegistrationOptions] :: DocumentOnTypeFormattingRegistrationOptions -> Maybe [Text]

-- | The parameters of a <tt>DocumentOnTypeFormattingRequest</tt>.
data DocumentOnTypeFormattingParams
DocumentOnTypeFormattingParams :: TextDocumentIdentifier -> Position -> Text -> FormattingOptions -> DocumentOnTypeFormattingParams

-- | The document to format.
[$sel:_textDocument:DocumentOnTypeFormattingParams] :: DocumentOnTypeFormattingParams -> TextDocumentIdentifier

-- | The position around which the on type formatting should happen. This
--   is not necessarily the exact position where the character denoted by
--   the property <tt>ch</tt> got typed.
[$sel:_position:DocumentOnTypeFormattingParams] :: DocumentOnTypeFormattingParams -> Position

-- | The character that has been typed that triggered the formatting on
--   type request. That is not necessarily the last character that got
--   inserted into the document since the client could auto insert
--   characters as well (e.g. like automatic brace completion).
[$sel:_ch:DocumentOnTypeFormattingParams] :: DocumentOnTypeFormattingParams -> Text

-- | The formatting options.
[$sel:_options:DocumentOnTypeFormattingParams] :: DocumentOnTypeFormattingParams -> FormattingOptions

-- | Provider options for a <tt>DocumentOnTypeFormattingRequest</tt>.
data DocumentOnTypeFormattingOptions
DocumentOnTypeFormattingOptions :: Text -> Maybe [Text] -> DocumentOnTypeFormattingOptions

-- | A character on which formatting should be triggered, like `{`.
[$sel:_firstTriggerCharacter:DocumentOnTypeFormattingOptions] :: DocumentOnTypeFormattingOptions -> Text

-- | More trigger characters.
[$sel:_moreTriggerCharacter:DocumentOnTypeFormattingOptions] :: DocumentOnTypeFormattingOptions -> Maybe [Text]

-- | Client capabilities of a <tt>DocumentOnTypeFormattingRequest</tt>.
data DocumentOnTypeFormattingClientCapabilities
DocumentOnTypeFormattingClientCapabilities :: Maybe Bool -> DocumentOnTypeFormattingClientCapabilities

-- | Whether on type formatting supports dynamic registration.
[$sel:_dynamicRegistration:DocumentOnTypeFormattingClientCapabilities] :: DocumentOnTypeFormattingClientCapabilities -> Maybe Bool

-- | Registration options for a <tt>DocumentLinkRequest</tt>.
data DocumentLinkRegistrationOptions
DocumentLinkRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Bool -> DocumentLinkRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentLinkRegistrationOptions] :: DocumentLinkRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DocumentLinkRegistrationOptions] :: DocumentLinkRegistrationOptions -> Maybe Bool

-- | Document links have a resolve provider as well.
[$sel:_resolveProvider:DocumentLinkRegistrationOptions] :: DocumentLinkRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>DocumentLinkRequest</tt>.
data DocumentLinkParams
DocumentLinkParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> DocumentLinkParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentLinkParams] :: DocumentLinkParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DocumentLinkParams] :: DocumentLinkParams -> Maybe ProgressToken

-- | The document to provide document links for.
[$sel:_textDocument:DocumentLinkParams] :: DocumentLinkParams -> TextDocumentIdentifier

-- | Provider options for a <tt>DocumentLinkRequest</tt>.
data DocumentLinkOptions
DocumentLinkOptions :: Maybe Bool -> Maybe Bool -> DocumentLinkOptions

[$sel:_workDoneProgress:DocumentLinkOptions] :: DocumentLinkOptions -> Maybe Bool

-- | Document links have a resolve provider as well.
[$sel:_resolveProvider:DocumentLinkOptions] :: DocumentLinkOptions -> Maybe Bool

-- | The client capabilities of a <tt>DocumentLinkRequest</tt>.
data DocumentLinkClientCapabilities
DocumentLinkClientCapabilities :: Maybe Bool -> Maybe Bool -> DocumentLinkClientCapabilities

-- | Whether document link supports dynamic registration.
[$sel:_dynamicRegistration:DocumentLinkClientCapabilities] :: DocumentLinkClientCapabilities -> Maybe Bool

-- | Whether the client supports the <tt>tooltip</tt> property on
--   <tt>DocumentLink</tt>.
[$sel:_tooltipSupport:DocumentLinkClientCapabilities] :: DocumentLinkClientCapabilities -> Maybe Bool

-- | A document link is a range in a text document that links to an
--   internal or external resource, like another text document or a web
--   site.
data DocumentLink
DocumentLink :: Range -> Maybe Text -> Maybe Text -> Maybe Value -> DocumentLink

-- | The range this link applies to.
[$sel:_range:DocumentLink] :: DocumentLink -> Range

-- | The uri this link points to. If missing a resolve request is sent
--   later.
[$sel:_target:DocumentLink] :: DocumentLink -> Maybe Text

-- | The tooltip text when you hover over this link.
--   
--   If a tooltip is provided, is will be displayed in a string that
--   includes instructions on how to trigger the link, such as `{0} (ctrl +
--   click)`. The specific instructions vary depending on OS, user
--   settings, and localization.
[$sel:_tooltip:DocumentLink] :: DocumentLink -> Maybe Text

-- | A data entry field that is preserved on a document link between a
--   DocumentLinkRequest and a DocumentLinkResolveRequest.
[$sel:_data_:DocumentLink] :: DocumentLink -> Maybe Value

-- | Registration options for a <tt>DocumentHighlightRequest</tt>.
data DocumentHighlightRegistrationOptions
DocumentHighlightRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> DocumentHighlightRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentHighlightRegistrationOptions] :: DocumentHighlightRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DocumentHighlightRegistrationOptions] :: DocumentHighlightRegistrationOptions -> Maybe Bool

-- | Parameters for a <tt>DocumentHighlightRequest</tt>.
data DocumentHighlightParams
DocumentHighlightParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> DocumentHighlightParams

-- | The text document.
[$sel:_textDocument:DocumentHighlightParams] :: DocumentHighlightParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:DocumentHighlightParams] :: DocumentHighlightParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentHighlightParams] :: DocumentHighlightParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DocumentHighlightParams] :: DocumentHighlightParams -> Maybe ProgressToken

-- | Provider options for a <tt>DocumentHighlightRequest</tt>.
data DocumentHighlightOptions
DocumentHighlightOptions :: Maybe Bool -> DocumentHighlightOptions

[$sel:_workDoneProgress:DocumentHighlightOptions] :: DocumentHighlightOptions -> Maybe Bool

-- | A document highlight kind.
data DocumentHighlightKind

-- | A textual occurrence.
DocumentHighlightKind_Text :: DocumentHighlightKind

-- | Read-access of a symbol, like reading a variable.
DocumentHighlightKind_Read :: DocumentHighlightKind

-- | Write-access of a symbol, like writing to a variable.
DocumentHighlightKind_Write :: DocumentHighlightKind

-- | Client Capabilities for a <tt>DocumentHighlightRequest</tt>.
data DocumentHighlightClientCapabilities
DocumentHighlightClientCapabilities :: Maybe Bool -> DocumentHighlightClientCapabilities

-- | Whether document highlight supports dynamic registration.
[$sel:_dynamicRegistration:DocumentHighlightClientCapabilities] :: DocumentHighlightClientCapabilities -> Maybe Bool

-- | A document highlight is a range inside a text document which deserves
--   special attention. Usually a document highlight is visualized by
--   changing the background color of its range.
data DocumentHighlight
DocumentHighlight :: Range -> Maybe DocumentHighlightKind -> DocumentHighlight

-- | The range this highlight applies to.
[$sel:_range:DocumentHighlight] :: DocumentHighlight -> Range

-- | The highlight kind, default is <a>Text</a>.
[$sel:_kind:DocumentHighlight] :: DocumentHighlight -> Maybe DocumentHighlightKind

-- | Registration options for a <tt>DocumentFormattingRequest</tt>.
data DocumentFormattingRegistrationOptions
DocumentFormattingRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> DocumentFormattingRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentFormattingRegistrationOptions] :: DocumentFormattingRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DocumentFormattingRegistrationOptions] :: DocumentFormattingRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>DocumentFormattingRequest</tt>.
data DocumentFormattingParams
DocumentFormattingParams :: Maybe ProgressToken -> TextDocumentIdentifier -> FormattingOptions -> DocumentFormattingParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentFormattingParams] :: DocumentFormattingParams -> Maybe ProgressToken

-- | The document to format.
[$sel:_textDocument:DocumentFormattingParams] :: DocumentFormattingParams -> TextDocumentIdentifier

-- | The format options.
[$sel:_options:DocumentFormattingParams] :: DocumentFormattingParams -> FormattingOptions

-- | Provider options for a <tt>DocumentFormattingRequest</tt>.
data DocumentFormattingOptions
DocumentFormattingOptions :: Maybe Bool -> DocumentFormattingOptions

[$sel:_workDoneProgress:DocumentFormattingOptions] :: DocumentFormattingOptions -> Maybe Bool

-- | Client capabilities of a <tt>DocumentFormattingRequest</tt>.
data DocumentFormattingClientCapabilities
DocumentFormattingClientCapabilities :: Maybe Bool -> DocumentFormattingClientCapabilities

-- | Whether formatting supports dynamic registration.
[$sel:_dynamicRegistration:DocumentFormattingClientCapabilities] :: DocumentFormattingClientCapabilities -> Maybe Bool

-- | A document filter describes a top level text document or a notebook
--   cell document.
--   
--   @since 3.17.0 - proposed support for NotebookCellTextDocumentFilter.
newtype DocumentFilter
DocumentFilter :: (TextDocumentFilter |? NotebookCellTextDocumentFilter) -> DocumentFilter

-- | A partial result for a document diagnostic report.
data DocumentDiagnosticReportPartialResult
DocumentDiagnosticReportPartialResult :: Map Uri (FullDocumentDiagnosticReport |? UnchangedDocumentDiagnosticReport) -> DocumentDiagnosticReportPartialResult

[$sel:_relatedDocuments:DocumentDiagnosticReportPartialResult] :: DocumentDiagnosticReportPartialResult -> Map Uri (FullDocumentDiagnosticReport |? UnchangedDocumentDiagnosticReport)

-- | The document diagnostic report kinds.
data DocumentDiagnosticReportKind

-- | A diagnostic report with a full set of problems.
DocumentDiagnosticReportKind_Full :: DocumentDiagnosticReportKind

-- | A report indicating that the last returned report is still accurate.
DocumentDiagnosticReportKind_Unchanged :: DocumentDiagnosticReportKind

-- | The result of a document diagnostic pull request. A report can either
--   be a full report containing all diagnostics for the requested document
--   or an unchanged report indicating that nothing has changed in terms of
--   diagnostics in comparison to the last pull request.
newtype DocumentDiagnosticReport
DocumentDiagnosticReport :: (RelatedFullDocumentDiagnosticReport |? RelatedUnchangedDocumentDiagnosticReport) -> DocumentDiagnosticReport

-- | Parameters of the document diagnostic request.
data DocumentDiagnosticParams
DocumentDiagnosticParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> Maybe Text -> Maybe Text -> DocumentDiagnosticParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentDiagnosticParams] :: DocumentDiagnosticParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DocumentDiagnosticParams] :: DocumentDiagnosticParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:DocumentDiagnosticParams] :: DocumentDiagnosticParams -> TextDocumentIdentifier

-- | The additional identifier provided during registration.
[$sel:_identifier:DocumentDiagnosticParams] :: DocumentDiagnosticParams -> Maybe Text

-- | The result id of a previous response if provided.
[$sel:_previousResultId:DocumentDiagnosticParams] :: DocumentDiagnosticParams -> Maybe Text

data DocumentColorRegistrationOptions
DocumentColorRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> DocumentColorRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DocumentColorRegistrationOptions] :: DocumentColorRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DocumentColorRegistrationOptions] :: DocumentColorRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:DocumentColorRegistrationOptions] :: DocumentColorRegistrationOptions -> Maybe Text

-- | Parameters for a <tt>DocumentColorRequest</tt>.
data DocumentColorParams
DocumentColorParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> DocumentColorParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DocumentColorParams] :: DocumentColorParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DocumentColorParams] :: DocumentColorParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:DocumentColorParams] :: DocumentColorParams -> TextDocumentIdentifier

data DocumentColorOptions
DocumentColorOptions :: Maybe Bool -> DocumentColorOptions

[$sel:_workDoneProgress:DocumentColorOptions] :: DocumentColorOptions -> Maybe Bool

data DocumentColorClientCapabilities
DocumentColorClientCapabilities :: Maybe Bool -> DocumentColorClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   <tt>DocumentColorRegistrationOptions</tt> return value for the
--   corresponding server capability as well.
[$sel:_dynamicRegistration:DocumentColorClientCapabilities] :: DocumentColorClientCapabilities -> Maybe Bool

-- | The parameters sent in a save text document notification
data DidSaveTextDocumentParams
DidSaveTextDocumentParams :: TextDocumentIdentifier -> Maybe Text -> DidSaveTextDocumentParams

-- | The document that was saved.
[$sel:_textDocument:DidSaveTextDocumentParams] :: DidSaveTextDocumentParams -> TextDocumentIdentifier

-- | Optional the content when saved. Depends on the includeText value when
--   the save notification was requested.
[$sel:_text:DidSaveTextDocumentParams] :: DidSaveTextDocumentParams -> Maybe Text

-- | The params sent in a save notebook document notification.
data DidSaveNotebookDocumentParams
DidSaveNotebookDocumentParams :: NotebookDocumentIdentifier -> DidSaveNotebookDocumentParams

-- | The notebook document that got saved.
[$sel:_notebookDocument:DidSaveNotebookDocumentParams] :: DidSaveNotebookDocumentParams -> NotebookDocumentIdentifier

-- | The parameters sent in an open text document notification
data DidOpenTextDocumentParams
DidOpenTextDocumentParams :: TextDocumentItem -> DidOpenTextDocumentParams

-- | The document that was opened.
[$sel:_textDocument:DidOpenTextDocumentParams] :: DidOpenTextDocumentParams -> TextDocumentItem

-- | The params sent in an open notebook document notification.
data DidOpenNotebookDocumentParams
DidOpenNotebookDocumentParams :: NotebookDocument -> [TextDocumentItem] -> DidOpenNotebookDocumentParams

-- | The notebook document that got opened.
[$sel:_notebookDocument:DidOpenNotebookDocumentParams] :: DidOpenNotebookDocumentParams -> NotebookDocument

-- | The text documents that represent the content of a notebook cell.
[$sel:_cellTextDocuments:DidOpenNotebookDocumentParams] :: DidOpenNotebookDocumentParams -> [TextDocumentItem]

-- | The parameters sent in a close text document notification
data DidCloseTextDocumentParams
DidCloseTextDocumentParams :: TextDocumentIdentifier -> DidCloseTextDocumentParams

-- | The document that was closed.
[$sel:_textDocument:DidCloseTextDocumentParams] :: DidCloseTextDocumentParams -> TextDocumentIdentifier

-- | The params sent in a close notebook document notification.
data DidCloseNotebookDocumentParams
DidCloseNotebookDocumentParams :: NotebookDocumentIdentifier -> [TextDocumentIdentifier] -> DidCloseNotebookDocumentParams

-- | The notebook document that got closed.
[$sel:_notebookDocument:DidCloseNotebookDocumentParams] :: DidCloseNotebookDocumentParams -> NotebookDocumentIdentifier

-- | The text documents that represent the content of a notebook cell that
--   got closed.
[$sel:_cellTextDocuments:DidCloseNotebookDocumentParams] :: DidCloseNotebookDocumentParams -> [TextDocumentIdentifier]

-- | The parameters of a `workspace/didChangeWorkspaceFolders`
--   notification.
data DidChangeWorkspaceFoldersParams
DidChangeWorkspaceFoldersParams :: WorkspaceFoldersChangeEvent -> DidChangeWorkspaceFoldersParams

-- | The actual workspace folder change event.
[$sel:_event:DidChangeWorkspaceFoldersParams] :: DidChangeWorkspaceFoldersParams -> WorkspaceFoldersChangeEvent

-- | Describe options to be used when registered for text document change
--   events.
data DidChangeWatchedFilesRegistrationOptions
DidChangeWatchedFilesRegistrationOptions :: [FileSystemWatcher] -> DidChangeWatchedFilesRegistrationOptions

-- | The watchers to register.
[$sel:_watchers:DidChangeWatchedFilesRegistrationOptions] :: DidChangeWatchedFilesRegistrationOptions -> [FileSystemWatcher]

-- | The watched files change notification's parameters.
data DidChangeWatchedFilesParams
DidChangeWatchedFilesParams :: [FileEvent] -> DidChangeWatchedFilesParams

-- | The actual file events.
[$sel:_changes:DidChangeWatchedFilesParams] :: DidChangeWatchedFilesParams -> [FileEvent]

data DidChangeWatchedFilesClientCapabilities
DidChangeWatchedFilesClientCapabilities :: Maybe Bool -> Maybe Bool -> DidChangeWatchedFilesClientCapabilities

-- | Did change watched files notification supports dynamic registration.
--   Please note that the current protocol doesn't support static
--   configuration for file changes from the server side.
[$sel:_dynamicRegistration:DidChangeWatchedFilesClientCapabilities] :: DidChangeWatchedFilesClientCapabilities -> Maybe Bool

-- | Whether the client has support for <tt>RelativePattern</tt> or not.
[$sel:_relativePatternSupport:DidChangeWatchedFilesClientCapabilities] :: DidChangeWatchedFilesClientCapabilities -> Maybe Bool

-- | The change text document notification's parameters.
data DidChangeTextDocumentParams
DidChangeTextDocumentParams :: VersionedTextDocumentIdentifier -> [TextDocumentContentChangeEvent] -> DidChangeTextDocumentParams

-- | The document that did change. The version number points to the version
--   after all provided content changes have been applied.
[$sel:_textDocument:DidChangeTextDocumentParams] :: DidChangeTextDocumentParams -> VersionedTextDocumentIdentifier

-- | The actual content changes. The content changes describe single state
--   changes to the document. So if there are two content changes c1 (at
--   array index 0) and c2 (at array index 1) for a document in state S
--   then c1 moves the document from S to S' and c2 from S' to S''. So c1
--   is computed on the state S and c2 is computed on the state S'.
--   
--   To mirror the content of a document using change events use the
--   following approach: - start with the same initial content - apply the
--   'textDocument/didChange' notifications in the order you receive them.
--   - apply the <tt>TextDocumentContentChangeEvent</tt>s in a single
--   notification in the order you receive them.
[$sel:_contentChanges:DidChangeTextDocumentParams] :: DidChangeTextDocumentParams -> [TextDocumentContentChangeEvent]

-- | The params sent in a change notebook document notification.
data DidChangeNotebookDocumentParams
DidChangeNotebookDocumentParams :: VersionedNotebookDocumentIdentifier -> NotebookDocumentChangeEvent -> DidChangeNotebookDocumentParams

-- | The notebook document that did change. The version number points to
--   the version after all provided changes have been applied. If only the
--   text document content of a cell changes the notebook version doesn't
--   necessarily have to change.
[$sel:_notebookDocument:DidChangeNotebookDocumentParams] :: DidChangeNotebookDocumentParams -> VersionedNotebookDocumentIdentifier

-- | The actual changes to the notebook document.
--   
--   The changes describe single state changes to the notebook document. So
--   if there are two changes c1 (at array index 0) and c2 (at array index
--   1) for a notebook in state S then c1 moves the notebook from S to S'
--   and c2 from S' to S''. So c1 is computed on the state S and c2 is
--   computed on the state S'.
--   
--   To mirror the content of a notebook using change events use the
--   following approach: - start with the same initial content - apply the
--   'notebookDocument/didChange' notifications in the order you receive
--   them. - apply the <tt>NotebookChangeEvent</tt>s in a single
--   notification in the order you receive them.
[$sel:_change:DidChangeNotebookDocumentParams] :: DidChangeNotebookDocumentParams -> NotebookDocumentChangeEvent

data DidChangeConfigurationRegistrationOptions
DidChangeConfigurationRegistrationOptions :: Maybe (Text |? [Text]) -> DidChangeConfigurationRegistrationOptions

[$sel:_section:DidChangeConfigurationRegistrationOptions] :: DidChangeConfigurationRegistrationOptions -> Maybe (Text |? [Text])

-- | The parameters of a change configuration notification.
data DidChangeConfigurationParams
DidChangeConfigurationParams :: Value -> DidChangeConfigurationParams

-- | The actual changed settings
[$sel:_settings:DidChangeConfigurationParams] :: DidChangeConfigurationParams -> Value

data DidChangeConfigurationClientCapabilities
DidChangeConfigurationClientCapabilities :: Maybe Bool -> DidChangeConfigurationClientCapabilities

-- | Did change configuration notification supports dynamic registration.
[$sel:_dynamicRegistration:DidChangeConfigurationClientCapabilities] :: DidChangeConfigurationClientCapabilities -> Maybe Bool

-- | Workspace client capabilities specific to diagnostic pull requests.
data DiagnosticWorkspaceClientCapabilities
DiagnosticWorkspaceClientCapabilities :: Maybe Bool -> DiagnosticWorkspaceClientCapabilities

-- | Whether the client implementation supports a refresh request sent from
--   the server to the client.
--   
--   Note that this event is global and will force the client to refresh
--   all pulled diagnostics currently shown. It should be used with
--   absolute care and is useful for situation where a server for example
--   detects a project wide change that requires such a calculation.
[$sel:_refreshSupport:DiagnosticWorkspaceClientCapabilities] :: DiagnosticWorkspaceClientCapabilities -> Maybe Bool

-- | The diagnostic tags.
data DiagnosticTag

-- | Unused or unnecessary code.
--   
--   Clients are allowed to render diagnostics with this tag faded out
--   instead of having an error squiggle.
DiagnosticTag_Unnecessary :: DiagnosticTag

-- | Deprecated or obsolete code.
--   
--   Clients are allowed to rendered diagnostics with this tag strike
--   through.
DiagnosticTag_Deprecated :: DiagnosticTag

-- | The diagnostic's severity.
data DiagnosticSeverity

-- | Reports an error.
DiagnosticSeverity_Error :: DiagnosticSeverity

-- | Reports a warning.
DiagnosticSeverity_Warning :: DiagnosticSeverity

-- | Reports an information.
DiagnosticSeverity_Information :: DiagnosticSeverity

-- | Reports a hint.
DiagnosticSeverity_Hint :: DiagnosticSeverity

-- | Cancellation data returned from a diagnostic request.
data DiagnosticServerCancellationData
DiagnosticServerCancellationData :: Bool -> DiagnosticServerCancellationData

[$sel:_retriggerRequest:DiagnosticServerCancellationData] :: DiagnosticServerCancellationData -> Bool

-- | Represents a related message and source code location for a
--   diagnostic. This should be used to point to code locations that cause
--   or related to a diagnostics, e.g when duplicating a symbol in a scope.
data DiagnosticRelatedInformation
DiagnosticRelatedInformation :: Location -> Text -> DiagnosticRelatedInformation

-- | The location of this related diagnostic information.
[$sel:_location:DiagnosticRelatedInformation] :: DiagnosticRelatedInformation -> Location

-- | The message of this related diagnostic information.
[$sel:_message:DiagnosticRelatedInformation] :: DiagnosticRelatedInformation -> Text

-- | Diagnostic registration options.
data DiagnosticRegistrationOptions
DiagnosticRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> Bool -> Bool -> Maybe Text -> DiagnosticRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DiagnosticRegistrationOptions] :: DiagnosticRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DiagnosticRegistrationOptions] :: DiagnosticRegistrationOptions -> Maybe Bool

-- | An optional identifier under which the diagnostics are managed by the
--   client.
[$sel:_identifier:DiagnosticRegistrationOptions] :: DiagnosticRegistrationOptions -> Maybe Text

-- | Whether the language has inter file dependencies meaning that editing
--   code in one file can result in a different diagnostic set in another
--   file. Inter file dependencies are common for most programming
--   languages and typically uncommon for linters.
[$sel:_interFileDependencies:DiagnosticRegistrationOptions] :: DiagnosticRegistrationOptions -> Bool

-- | The server provides support for workspace diagnostics as well.
[$sel:_workspaceDiagnostics:DiagnosticRegistrationOptions] :: DiagnosticRegistrationOptions -> Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:DiagnosticRegistrationOptions] :: DiagnosticRegistrationOptions -> Maybe Text

-- | Diagnostic options.
data DiagnosticOptions
DiagnosticOptions :: Maybe Bool -> Maybe Text -> Bool -> Bool -> DiagnosticOptions

[$sel:_workDoneProgress:DiagnosticOptions] :: DiagnosticOptions -> Maybe Bool

-- | An optional identifier under which the diagnostics are managed by the
--   client.
[$sel:_identifier:DiagnosticOptions] :: DiagnosticOptions -> Maybe Text

-- | Whether the language has inter file dependencies meaning that editing
--   code in one file can result in a different diagnostic set in another
--   file. Inter file dependencies are common for most programming
--   languages and typically uncommon for linters.
[$sel:_interFileDependencies:DiagnosticOptions] :: DiagnosticOptions -> Bool

-- | The server provides support for workspace diagnostics as well.
[$sel:_workspaceDiagnostics:DiagnosticOptions] :: DiagnosticOptions -> Bool

-- | Client capabilities specific to diagnostic pull requests.
data DiagnosticClientCapabilities
DiagnosticClientCapabilities :: Maybe Bool -> Maybe Bool -> DiagnosticClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   `(TextDocumentRegistrationOptions &amp; StaticRegistrationOptions)`
--   return value for the corresponding server capability as well.
[$sel:_dynamicRegistration:DiagnosticClientCapabilities] :: DiagnosticClientCapabilities -> Maybe Bool

-- | Whether the clients supports related documents for document diagnostic
--   pulls.
[$sel:_relatedDocumentSupport:DiagnosticClientCapabilities] :: DiagnosticClientCapabilities -> Maybe Bool

-- | Represents a diagnostic, such as a compiler error or warning.
--   Diagnostic objects are only valid in the scope of a resource.
data Diagnostic
Diagnostic :: Range -> Maybe DiagnosticSeverity -> Maybe (Int32 |? Text) -> Maybe CodeDescription -> Maybe Text -> Text -> Maybe [DiagnosticTag] -> Maybe [DiagnosticRelatedInformation] -> Maybe Value -> Diagnostic

-- | The range at which the message applies
[$sel:_range:Diagnostic] :: Diagnostic -> Range

-- | The diagnostic's severity. Can be omitted. If omitted it is up to the
--   client to interpret diagnostics as error, warning, info or hint.
[$sel:_severity:Diagnostic] :: Diagnostic -> Maybe DiagnosticSeverity

-- | The diagnostic's code, which usually appear in the user interface.
[$sel:_code:Diagnostic] :: Diagnostic -> Maybe (Int32 |? Text)

-- | An optional property to describe the error code. Requires the code
--   field (above) to be present/not null.
[$sel:_codeDescription:Diagnostic] :: Diagnostic -> Maybe CodeDescription

-- | A human-readable string describing the source of this diagnostic, e.g.
--   <tt>typescript</tt> or 'super lint'. It usually appears in the user
--   interface.
[$sel:_source:Diagnostic] :: Diagnostic -> Maybe Text

-- | The diagnostic's message. It usually appears in the user interface
[$sel:_message:Diagnostic] :: Diagnostic -> Text

-- | Additional metadata about the diagnostic.
[$sel:_tags:Diagnostic] :: Diagnostic -> Maybe [DiagnosticTag]

-- | An array of related diagnostic information, e.g. when symbol-names
--   within a scope collide all definitions can be marked via this
--   property.
[$sel:_relatedInformation:Diagnostic] :: Diagnostic -> Maybe [DiagnosticRelatedInformation]

-- | A data entry field that is preserved between a
--   `textDocument/publishDiagnostics` notification and
--   `textDocument/codeAction` request.
[$sel:_data_:Diagnostic] :: Diagnostic -> Maybe Value

-- | The parameters sent in notifications/requests for user-initiated
--   deletes of files.
data DeleteFilesParams
DeleteFilesParams :: [FileDelete] -> DeleteFilesParams

-- | An array of all files/folders deleted in this operation.
[$sel:_files:DeleteFilesParams] :: DeleteFilesParams -> [FileDelete]

-- | Delete file options
data DeleteFileOptions
DeleteFileOptions :: Maybe Bool -> Maybe Bool -> DeleteFileOptions

-- | Delete the content recursively if a folder is denoted.
[$sel:_recursive:DeleteFileOptions] :: DeleteFileOptions -> Maybe Bool

-- | Ignore the operation if the file doesn't exist.
[$sel:_ignoreIfNotExists:DeleteFileOptions] :: DeleteFileOptions -> Maybe Bool

-- | Delete file operation
data DeleteFile
DeleteFile :: Maybe ChangeAnnotationIdentifier -> AString "delete" -> Uri -> Maybe DeleteFileOptions -> DeleteFile

-- | An optional annotation identifier describing the operation.
[$sel:_annotationId:DeleteFile] :: DeleteFile -> Maybe ChangeAnnotationIdentifier

-- | A delete
[$sel:_kind:DeleteFile] :: DeleteFile -> AString "delete"

-- | The file to delete.
[$sel:_uri:DeleteFile] :: DeleteFile -> Uri

-- | Delete options.
[$sel:_options:DeleteFile] :: DeleteFile -> Maybe DeleteFileOptions

-- | Registration options for a <tt>DefinitionRequest</tt>.
data DefinitionRegistrationOptions
DefinitionRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> DefinitionRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DefinitionRegistrationOptions] :: DefinitionRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:DefinitionRegistrationOptions] :: DefinitionRegistrationOptions -> Maybe Bool

-- | Parameters for a <tt>DefinitionRequest</tt>.
data DefinitionParams
DefinitionParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> DefinitionParams

-- | The text document.
[$sel:_textDocument:DefinitionParams] :: DefinitionParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:DefinitionParams] :: DefinitionParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DefinitionParams] :: DefinitionParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DefinitionParams] :: DefinitionParams -> Maybe ProgressToken

-- | Server Capabilities for a <tt>DefinitionRequest</tt>.
data DefinitionOptions
DefinitionOptions :: Maybe Bool -> DefinitionOptions

[$sel:_workDoneProgress:DefinitionOptions] :: DefinitionOptions -> Maybe Bool

-- | Information about where a symbol is defined.
--   
--   Provides additional metadata over normal <tt>Location</tt>
--   definitions, including the range of the defining symbol
newtype DefinitionLink
DefinitionLink :: LocationLink -> DefinitionLink

-- | Client Capabilities for a <tt>DefinitionRequest</tt>.
data DefinitionClientCapabilities
DefinitionClientCapabilities :: Maybe Bool -> Maybe Bool -> DefinitionClientCapabilities

-- | Whether definition supports dynamic registration.
[$sel:_dynamicRegistration:DefinitionClientCapabilities] :: DefinitionClientCapabilities -> Maybe Bool

-- | The client supports additional metadata in the form of definition
--   links.
[$sel:_linkSupport:DefinitionClientCapabilities] :: DefinitionClientCapabilities -> Maybe Bool

-- | The definition of a symbol represented as one or many
--   <tt>Location</tt>. For most programming languages there is only one
--   location at which a symbol is defined.
--   
--   Servers should prefer returning <tt>DefinitionLink</tt> over
--   <a>Definition</a> if supported by the client.
newtype Definition
Definition :: (Location |? [Location]) -> Definition

data DeclarationRegistrationOptions
DeclarationRegistrationOptions :: Maybe Bool -> (DocumentSelector |? Null) -> Maybe Text -> DeclarationRegistrationOptions

[$sel:_workDoneProgress:DeclarationRegistrationOptions] :: DeclarationRegistrationOptions -> Maybe Bool

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:DeclarationRegistrationOptions] :: DeclarationRegistrationOptions -> DocumentSelector |? Null

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:DeclarationRegistrationOptions] :: DeclarationRegistrationOptions -> Maybe Text

data DeclarationParams
DeclarationParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> DeclarationParams

-- | The text document.
[$sel:_textDocument:DeclarationParams] :: DeclarationParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:DeclarationParams] :: DeclarationParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:DeclarationParams] :: DeclarationParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:DeclarationParams] :: DeclarationParams -> Maybe ProgressToken

data DeclarationOptions
DeclarationOptions :: Maybe Bool -> DeclarationOptions

[$sel:_workDoneProgress:DeclarationOptions] :: DeclarationOptions -> Maybe Bool

-- | Information about where a symbol is declared.
--   
--   Provides additional metadata over normal <tt>Location</tt>
--   declarations, including the range of the declaring symbol.
--   
--   Servers should prefer returning <a>DeclarationLink</a> over
--   <tt>Declaration</tt> if supported by the client.
newtype DeclarationLink
DeclarationLink :: LocationLink -> DeclarationLink

data DeclarationClientCapabilities
DeclarationClientCapabilities :: Maybe Bool -> Maybe Bool -> DeclarationClientCapabilities

-- | Whether declaration supports dynamic registration. If this is set to
--   <tt>true</tt> the client supports the new
--   <tt>DeclarationRegistrationOptions</tt> return value for the
--   corresponding server capability as well.
[$sel:_dynamicRegistration:DeclarationClientCapabilities] :: DeclarationClientCapabilities -> Maybe Bool

-- | The client supports additional metadata in the form of declaration
--   links.
[$sel:_linkSupport:DeclarationClientCapabilities] :: DeclarationClientCapabilities -> Maybe Bool

-- | The declaration of a symbol representation as one or many
--   <tt>Location</tt>.
newtype Declaration
Declaration :: (Location |? [Location]) -> Declaration

-- | The parameters sent in notifications/requests for user-initiated
--   creation of files.
data CreateFilesParams
CreateFilesParams :: [FileCreate] -> CreateFilesParams

-- | An array of all files/folders created in this operation.
[$sel:_files:CreateFilesParams] :: CreateFilesParams -> [FileCreate]

-- | Options to create a file.
data CreateFileOptions
CreateFileOptions :: Maybe Bool -> Maybe Bool -> CreateFileOptions

-- | Overwrite existing file. Overwrite wins over <tt>ignoreIfExists</tt>
[$sel:_overwrite:CreateFileOptions] :: CreateFileOptions -> Maybe Bool

-- | Ignore if exists.
[$sel:_ignoreIfExists:CreateFileOptions] :: CreateFileOptions -> Maybe Bool

-- | Create file operation.
data CreateFile
CreateFile :: Maybe ChangeAnnotationIdentifier -> AString "create" -> Uri -> Maybe CreateFileOptions -> CreateFile

-- | An optional annotation identifier describing the operation.
[$sel:_annotationId:CreateFile] :: CreateFile -> Maybe ChangeAnnotationIdentifier

-- | A create
[$sel:_kind:CreateFile] :: CreateFile -> AString "create"

-- | The resource to create.
[$sel:_uri:CreateFile] :: CreateFile -> Uri

-- | Additional options
[$sel:_options:CreateFile] :: CreateFile -> Maybe CreateFileOptions

-- | The parameters of a configuration request.
data ConfigurationParams
ConfigurationParams :: [ConfigurationItem] -> ConfigurationParams

[$sel:_items:ConfigurationParams] :: ConfigurationParams -> [ConfigurationItem]

data ConfigurationItem
ConfigurationItem :: Maybe Text -> Maybe Text -> ConfigurationItem

-- | The scope to get the configuration section for.
[$sel:_scopeUri:ConfigurationItem] :: ConfigurationItem -> Maybe Text

-- | The configuration section asked for.
[$sel:_section:ConfigurationItem] :: ConfigurationItem -> Maybe Text

-- | How a completion was triggered
data CompletionTriggerKind

-- | Completion was triggered by typing an identifier (24x7 code complete),
--   manual invocation (e.g Ctrl+Space) or via API.
CompletionTriggerKind_Invoked :: CompletionTriggerKind

-- | Completion was triggered by a trigger character specified by the
--   <tt>triggerCharacters</tt> properties of the
--   <tt>CompletionRegistrationOptions</tt>.
CompletionTriggerKind_TriggerCharacter :: CompletionTriggerKind

-- | Completion was re-triggered as current completion list is incomplete
CompletionTriggerKind_TriggerForIncompleteCompletions :: CompletionTriggerKind

-- | Registration options for a <tt>CompletionRequest</tt>.
data CompletionRegistrationOptions
CompletionRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe (Rec (("labelDetailsSupport" .== Maybe Bool) .+ Empty)) -> CompletionRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:CompletionRegistrationOptions] :: CompletionRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:CompletionRegistrationOptions] :: CompletionRegistrationOptions -> Maybe Bool

-- | Most tools trigger completion request automatically without explicitly
--   requesting it using a keyboard shortcut (e.g. Ctrl+Space). Typically
--   they do so when the user starts to type an identifier. For example if
--   the user types <tt>c</tt> in a JavaScript file code complete will
--   automatically pop up present <tt>console</tt> besides others as a
--   completion item. Characters that make up identifiers don't need to be
--   listed here.
--   
--   If code complete should automatically be trigger on characters not
--   being valid inside an identifier (for example <a>.</a> in JavaScript)
--   list them in <tt>triggerCharacters</tt>.
[$sel:_triggerCharacters:CompletionRegistrationOptions] :: CompletionRegistrationOptions -> Maybe [Text]

-- | The list of all possible characters that commit a completion. This
--   field can be used if clients don't support individual commit
--   characters per completion item. See
--   `ClientCapabilities.textDocument.completion.completionItem.commitCharactersSupport`
--   
--   If a server provides both <tt>allCommitCharacters</tt> and commit
--   characters on an individual completion item the ones on the completion
--   item win.
[$sel:_allCommitCharacters:CompletionRegistrationOptions] :: CompletionRegistrationOptions -> Maybe [Text]

-- | The server provides support to resolve additional information for a
--   completion item.
[$sel:_resolveProvider:CompletionRegistrationOptions] :: CompletionRegistrationOptions -> Maybe Bool

-- | The server supports the following <tt>CompletionItem</tt> specific
--   capabilities.
[$sel:_completionItem:CompletionRegistrationOptions] :: CompletionRegistrationOptions -> Maybe (Rec (("labelDetailsSupport" .== Maybe Bool) .+ Empty))

-- | Completion parameters
data CompletionParams
CompletionParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> Maybe ProgressToken -> Maybe CompletionContext -> CompletionParams

-- | The text document.
[$sel:_textDocument:CompletionParams] :: CompletionParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:CompletionParams] :: CompletionParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:CompletionParams] :: CompletionParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:CompletionParams] :: CompletionParams -> Maybe ProgressToken

-- | The completion context. This is only available it the client specifies
--   to send this using the client capability
--   `textDocument.completion.contextSupport === true`
[$sel:_context:CompletionParams] :: CompletionParams -> Maybe CompletionContext

-- | Completion options.
data CompletionOptions
CompletionOptions :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe (Rec (("labelDetailsSupport" .== Maybe Bool) .+ Empty)) -> CompletionOptions

[$sel:_workDoneProgress:CompletionOptions] :: CompletionOptions -> Maybe Bool

-- | Most tools trigger completion request automatically without explicitly
--   requesting it using a keyboard shortcut (e.g. Ctrl+Space). Typically
--   they do so when the user starts to type an identifier. For example if
--   the user types <tt>c</tt> in a JavaScript file code complete will
--   automatically pop up present <tt>console</tt> besides others as a
--   completion item. Characters that make up identifiers don't need to be
--   listed here.
--   
--   If code complete should automatically be trigger on characters not
--   being valid inside an identifier (for example <a>.</a> in JavaScript)
--   list them in <tt>triggerCharacters</tt>.
[$sel:_triggerCharacters:CompletionOptions] :: CompletionOptions -> Maybe [Text]

-- | The list of all possible characters that commit a completion. This
--   field can be used if clients don't support individual commit
--   characters per completion item. See
--   `ClientCapabilities.textDocument.completion.completionItem.commitCharactersSupport`
--   
--   If a server provides both <tt>allCommitCharacters</tt> and commit
--   characters on an individual completion item the ones on the completion
--   item win.
[$sel:_allCommitCharacters:CompletionOptions] :: CompletionOptions -> Maybe [Text]

-- | The server provides support to resolve additional information for a
--   completion item.
[$sel:_resolveProvider:CompletionOptions] :: CompletionOptions -> Maybe Bool

-- | The server supports the following <tt>CompletionItem</tt> specific
--   capabilities.
[$sel:_completionItem:CompletionOptions] :: CompletionOptions -> Maybe (Rec (("labelDetailsSupport" .== Maybe Bool) .+ Empty))

-- | Represents a collection of <tt>CompletionItem</tt> to be presented in
--   the editor.
data CompletionList
CompletionList :: Bool -> Maybe (Rec (("commitCharacters" .== Maybe [Text]) .+ (("editRange" .== Maybe (Range |? Rec (("insert" .== Range) .+ (("replace" .== Range) .+ Empty)))) .+ (("insertTextFormat" .== Maybe InsertTextFormat) .+ (("insertTextMode" .== Maybe InsertTextMode) .+ (("data" .== Maybe Value) .+ Empty)))))) -> [CompletionItem] -> CompletionList

-- | This list it not complete. Further typing results in recomputing this
--   list.
--   
--   Recomputed lists have all their items replaced (not appended) in the
--   incomplete completion sessions.
[$sel:_isIncomplete:CompletionList] :: CompletionList -> Bool

-- | In many cases the items of an actual completion result share the same
--   value for properties like <tt>commitCharacters</tt> or the range of a
--   text edit. A completion list can therefore define item defaults which
--   will be used if a completion item itself doesn't specify the value.
--   
--   If a completion list specifies a default value and a completion item
--   also specifies a corresponding value the one from the item is used.
--   
--   Servers are only allowed to return default values if the client
--   signals support for this via the `completionList.itemDefaults`
--   capability.
[$sel:_itemDefaults:CompletionList] :: CompletionList -> Maybe (Rec (("commitCharacters" .== Maybe [Text]) .+ (("editRange" .== Maybe (Range |? Rec (("insert" .== Range) .+ (("replace" .== Range) .+ Empty)))) .+ (("insertTextFormat" .== Maybe InsertTextFormat) .+ (("insertTextMode" .== Maybe InsertTextMode) .+ (("data" .== Maybe Value) .+ Empty))))))

-- | The completion items.
[$sel:_items:CompletionList] :: CompletionList -> [CompletionItem]

-- | Completion item tags are extra annotations that tweak the rendering of
--   a completion item.
data CompletionItemTag

-- | Render a completion as obsolete, usually using a strike-out.
CompletionItemTag_Deprecated :: CompletionItemTag

-- | Additional details for a completion item label.
data CompletionItemLabelDetails
CompletionItemLabelDetails :: Maybe Text -> Maybe Text -> CompletionItemLabelDetails

-- | An optional string which is rendered less prominently directly after
--   <a>label</a>, without any spacing. Should be used for function
--   signatures and type annotations.
[$sel:_detail:CompletionItemLabelDetails] :: CompletionItemLabelDetails -> Maybe Text

-- | An optional string which is rendered less prominently after
--   <a>detail</a>. Should be used for fully qualified names and file
--   paths.
[$sel:_description:CompletionItemLabelDetails] :: CompletionItemLabelDetails -> Maybe Text

-- | The kind of a completion entry.
data CompletionItemKind

CompletionItemKind_Text :: CompletionItemKind

CompletionItemKind_Method :: CompletionItemKind

CompletionItemKind_Function :: CompletionItemKind

CompletionItemKind_Constructor :: CompletionItemKind

CompletionItemKind_Field :: CompletionItemKind

CompletionItemKind_Variable :: CompletionItemKind

CompletionItemKind_Class :: CompletionItemKind

CompletionItemKind_Interface :: CompletionItemKind

CompletionItemKind_Module :: CompletionItemKind

CompletionItemKind_Property :: CompletionItemKind

CompletionItemKind_Unit :: CompletionItemKind

CompletionItemKind_Value :: CompletionItemKind

CompletionItemKind_Enum :: CompletionItemKind

CompletionItemKind_Keyword :: CompletionItemKind

CompletionItemKind_Snippet :: CompletionItemKind

CompletionItemKind_Color :: CompletionItemKind

CompletionItemKind_File :: CompletionItemKind

CompletionItemKind_Reference :: CompletionItemKind

CompletionItemKind_Folder :: CompletionItemKind

CompletionItemKind_EnumMember :: CompletionItemKind

CompletionItemKind_Constant :: CompletionItemKind

CompletionItemKind_Struct :: CompletionItemKind

CompletionItemKind_Event :: CompletionItemKind

CompletionItemKind_Operator :: CompletionItemKind

CompletionItemKind_TypeParameter :: CompletionItemKind

-- | A completion item represents a text snippet that is proposed to
--   complete text that is being typed.
data CompletionItem
CompletionItem :: Text -> Maybe CompletionItemLabelDetails -> Maybe CompletionItemKind -> Maybe [CompletionItemTag] -> Maybe Text -> Maybe (Text |? MarkupContent) -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InsertTextFormat -> Maybe InsertTextMode -> Maybe (TextEdit |? InsertReplaceEdit) -> Maybe Text -> Maybe [TextEdit] -> Maybe [Text] -> Maybe Command -> Maybe Value -> CompletionItem

-- | The label of this completion item.
--   
--   The label property is also by default the text that is inserted when
--   selecting this completion.
--   
--   If label details are provided the label itself should be an
--   unqualified name of the completion item.
[$sel:_label:CompletionItem] :: CompletionItem -> Text

-- | Additional details for the label
[$sel:_labelDetails:CompletionItem] :: CompletionItem -> Maybe CompletionItemLabelDetails

-- | The kind of this completion item. Based of the kind an icon is chosen
--   by the editor.
[$sel:_kind:CompletionItem] :: CompletionItem -> Maybe CompletionItemKind

-- | Tags for this completion item.
[$sel:_tags:CompletionItem] :: CompletionItem -> Maybe [CompletionItemTag]

-- | A human-readable string with additional information about this item,
--   like type or symbol information.
[$sel:_detail:CompletionItem] :: CompletionItem -> Maybe Text

-- | A human-readable string that represents a doc-comment.
[$sel:_documentation:CompletionItem] :: CompletionItem -> Maybe (Text |? MarkupContent)

-- | Indicates if this item is deprecated. @deprecated Use <tt>tags</tt>
--   instead.
[$sel:_deprecated:CompletionItem] :: CompletionItem -> Maybe Bool

-- | Select this item when showing.
--   
--   <ul>
--   <li>Note* that only one completion item can be selected and that the
--   tool / client decides which item that is. The rule is that the *first*
--   item of those that match best is selected.</li>
--   </ul>
[$sel:_preselect:CompletionItem] :: CompletionItem -> Maybe Bool

-- | A string that should be used when comparing this item with other
--   items. When <tt>falsy</tt> the <a>label</a> is used.
[$sel:_sortText:CompletionItem] :: CompletionItem -> Maybe Text

-- | A string that should be used when filtering a set of completion items.
--   When <tt>falsy</tt> the <a>label</a> is used.
[$sel:_filterText:CompletionItem] :: CompletionItem -> Maybe Text

-- | A string that should be inserted into a document when selecting this
--   completion. When <tt>falsy</tt> the <a>label</a> is used.
--   
--   The <tt>insertText</tt> is subject to interpretation by the client
--   side. Some tools might not take the string literally. For example VS
--   Code when code complete is requested in this example
--   `con<a>position</a>` and a completion item with an <tt>insertText</tt>
--   of <tt>console</tt> is provided it will only insert <tt>sole</tt>.
--   Therefore it is recommended to use <tt>textEdit</tt> instead since it
--   avoids additional client side interpretation.
[$sel:_insertText:CompletionItem] :: CompletionItem -> Maybe Text

-- | The format of the insert text. The format applies to both the
--   <tt>insertText</tt> property and the <tt>newText</tt> property of a
--   provided <tt>textEdit</tt>. If omitted defaults to <a>PlainText</a>.
--   
--   Please note that the insertTextFormat doesn't apply to
--   <tt>additionalTextEdits</tt>.
[$sel:_insertTextFormat:CompletionItem] :: CompletionItem -> Maybe InsertTextFormat

-- | How whitespace and indentation is handled during completion item
--   insertion. If not provided the clients default value depends on the
--   `textDocument.completion.insertTextMode` client capability.
[$sel:_insertTextMode:CompletionItem] :: CompletionItem -> Maybe InsertTextMode

-- | An <tt>TextEdit</tt> which is applied to a document when selecting
--   this completion. When an edit is provided the value of
--   <a>insertText</a> is ignored.
--   
--   Most editors support two different operations when accepting a
--   completion item. One is to insert a completion text and the other is
--   to replace an existing text with a completion text. Since this can
--   usually not be predetermined by a server it can report both ranges.
--   Clients need to signal support for <tt>InsertReplaceEdits</tt> via the
--   `textDocument.completion.insertReplaceSupport` client capability
--   property.
--   
--   <ul>
--   <li>Note 1:* The text edit's range as well as both ranges from an
--   insert replace edit must be a [single line] and they must contain the
--   position at which completion has been requested.</li>
--   <li>Note 2:* If an <tt>InsertReplaceEdit</tt> is returned the edit's
--   insert range must be a prefix of the edit's replace range, that means
--   it must be contained and starting at the same position.</li>
--   </ul>
--   
--   @since 3.16.0 additional type <tt>InsertReplaceEdit</tt>
[$sel:_textEdit:CompletionItem] :: CompletionItem -> Maybe (TextEdit |? InsertReplaceEdit)

-- | The edit text used if the completion item is part of a CompletionList
--   and CompletionList defines an item default for the text edit range.
--   
--   Clients will only honor this property if they opt into completion list
--   item defaults using the capability `completionList.itemDefaults`.
--   
--   If not provided and a list's default range is provided the label
--   property is used as a text.
[$sel:_textEditText:CompletionItem] :: CompletionItem -> Maybe Text

-- | An optional array of additional <tt>TextEdit</tt> that are applied
--   when selecting this completion. Edits must not overlap (including the
--   same insert position) with the main <a>textEdit</a> nor with
--   themselves.
--   
--   Additional text edits should be used to change text unrelated to the
--   current cursor position (for example adding an import statement at the
--   top of the file if the completion item will insert an unqualified
--   type).
[$sel:_additionalTextEdits:CompletionItem] :: CompletionItem -> Maybe [TextEdit]

-- | An optional set of characters that when pressed while this completion
--   is active will accept it first and then type that character. *Note*
--   that all commit characters should have `length=1` and that superfluous
--   characters will be ignored.
[$sel:_commitCharacters:CompletionItem] :: CompletionItem -> Maybe [Text]

-- | An optional <tt>Command</tt> that is executed *after* inserting this
--   completion. *Note* that additional modifications to the current
--   document should be described with the
--   <a>additionalTextEdits</a>-property.
[$sel:_command:CompletionItem] :: CompletionItem -> Maybe Command

-- | A data entry field that is preserved on a completion item between a
--   <tt>CompletionRequest</tt>.
[$sel:_data_:CompletionItem] :: CompletionItem -> Maybe Value

-- | Contains additional information about the context in which a
--   completion request is triggered.
data CompletionContext
CompletionContext :: CompletionTriggerKind -> Maybe Text -> CompletionContext

-- | How the completion was triggered.
[$sel:_triggerKind:CompletionContext] :: CompletionContext -> CompletionTriggerKind

-- | The trigger character (a single character) that has trigger code
--   complete. Is undefined if `triggerKind !==
--   CompletionTriggerKind.TriggerCharacter`
[$sel:_triggerCharacter:CompletionContext] :: CompletionContext -> Maybe Text

-- | Completion client capabilities
data CompletionClientCapabilities
CompletionClientCapabilities :: Maybe Bool -> Maybe (Rec (("snippetSupport" .== Maybe Bool) .+ (("commitCharactersSupport" .== Maybe Bool) .+ (("documentationFormat" .== Maybe [MarkupKind]) .+ (("deprecatedSupport" .== Maybe Bool) .+ (("preselectSupport" .== Maybe Bool) .+ (("tagSupport" .== Maybe (Rec (("valueSet" .== [CompletionItemTag]) .+ Empty))) .+ (("insertReplaceSupport" .== Maybe Bool) .+ (("resolveSupport" .== Maybe (Rec (("properties" .== [Text]) .+ Empty))) .+ (("insertTextModeSupport" .== Maybe (Rec (("valueSet" .== [InsertTextMode]) .+ Empty))) .+ (("labelDetailsSupport" .== Maybe Bool) .+ Empty))))))))))) -> Maybe (Rec (("valueSet" .== Maybe [CompletionItemKind]) .+ Empty)) -> Maybe InsertTextMode -> Maybe Bool -> Maybe (Rec (("itemDefaults" .== Maybe [Text]) .+ Empty)) -> CompletionClientCapabilities

-- | Whether completion supports dynamic registration.
[$sel:_dynamicRegistration:CompletionClientCapabilities] :: CompletionClientCapabilities -> Maybe Bool

-- | The client supports the following <tt>CompletionItem</tt> specific
--   capabilities.
[$sel:_completionItem:CompletionClientCapabilities] :: CompletionClientCapabilities -> Maybe (Rec (("snippetSupport" .== Maybe Bool) .+ (("commitCharactersSupport" .== Maybe Bool) .+ (("documentationFormat" .== Maybe [MarkupKind]) .+ (("deprecatedSupport" .== Maybe Bool) .+ (("preselectSupport" .== Maybe Bool) .+ (("tagSupport" .== Maybe (Rec (("valueSet" .== [CompletionItemTag]) .+ Empty))) .+ (("insertReplaceSupport" .== Maybe Bool) .+ (("resolveSupport" .== Maybe (Rec (("properties" .== [Text]) .+ Empty))) .+ (("insertTextModeSupport" .== Maybe (Rec (("valueSet" .== [InsertTextMode]) .+ Empty))) .+ (("labelDetailsSupport" .== Maybe Bool) .+ Empty)))))))))))

[$sel:_completionItemKind:CompletionClientCapabilities] :: CompletionClientCapabilities -> Maybe (Rec (("valueSet" .== Maybe [CompletionItemKind]) .+ Empty))

-- | Defines how the client handles whitespace and indentation when
--   accepting a completion item that uses multi line text in either
--   <tt>insertText</tt> or <tt>textEdit</tt>.
[$sel:_insertTextMode:CompletionClientCapabilities] :: CompletionClientCapabilities -> Maybe InsertTextMode

-- | The client supports to send additional context information for a
--   `textDocument/completion` request.
[$sel:_contextSupport:CompletionClientCapabilities] :: CompletionClientCapabilities -> Maybe Bool

-- | The client supports the following <tt>CompletionList</tt> specific
--   capabilities.
[$sel:_completionList:CompletionClientCapabilities] :: CompletionClientCapabilities -> Maybe (Rec (("itemDefaults" .== Maybe [Text]) .+ Empty))

-- | Represents a reference to a command. Provides a title which will be
--   used to represent a command in the UI and, optionally, an array of
--   arguments which will be passed to the command handler function when
--   invoked.
data Command
Command :: Text -> Text -> Maybe [Value] -> Command

-- | Title of the command, like <tt>save</tt>.
[$sel:_title:Command] :: Command -> Text

-- | The identifier of the actual command handler.
[$sel:_command:Command] :: Command -> Text

-- | Arguments that the command handler should be invoked with.
[$sel:_arguments:Command] :: Command -> Maybe [Value]

-- | Parameters for a <tt>ColorPresentationRequest</tt>.
data ColorPresentationParams
ColorPresentationParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> Color -> Range -> ColorPresentationParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:ColorPresentationParams] :: ColorPresentationParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:ColorPresentationParams] :: ColorPresentationParams -> Maybe ProgressToken

-- | The text document.
[$sel:_textDocument:ColorPresentationParams] :: ColorPresentationParams -> TextDocumentIdentifier

-- | The color to request presentations for.
[$sel:_color:ColorPresentationParams] :: ColorPresentationParams -> Color

-- | The range where the color would be inserted. Serves as a context.
[$sel:_range:ColorPresentationParams] :: ColorPresentationParams -> Range

data ColorPresentation
ColorPresentation :: Text -> Maybe TextEdit -> Maybe [TextEdit] -> ColorPresentation

-- | The label of this color presentation. It will be shown on the color
--   picker header. By default this is also the text that is inserted when
--   selecting this color presentation.
[$sel:_label:ColorPresentation] :: ColorPresentation -> Text

-- | An <tt>TextEdit</tt> which is applied to a document when selecting
--   this presentation for the color. When <tt>falsy</tt> the <a>label</a>
--   is used.
[$sel:_textEdit:ColorPresentation] :: ColorPresentation -> Maybe TextEdit

-- | An optional array of additional <tt>TextEdit</tt> that are applied
--   when selecting this color presentation. Edits must not overlap with
--   the main <a>textEdit</a> nor with themselves.
[$sel:_additionalTextEdits:ColorPresentation] :: ColorPresentation -> Maybe [TextEdit]

-- | Represents a color range from a document.
data ColorInformation
ColorInformation :: Range -> Color -> ColorInformation

-- | The range in the document where this color appears.
[$sel:_range:ColorInformation] :: ColorInformation -> Range

-- | The actual color value for this color range.
[$sel:_color:ColorInformation] :: ColorInformation -> Color

-- | Represents a color in RGBA space.
data Color
Color :: Float -> Float -> Float -> Float -> Color

-- | The red component of this color in the range [0-1].
[$sel:_red:Color] :: Color -> Float

-- | The green component of this color in the range [0-1].
[$sel:_green:Color] :: Color -> Float

-- | The blue component of this color in the range [0-1].
[$sel:_blue:Color] :: Color -> Float

-- | The alpha component of this color in the range [0-1].
[$sel:_alpha:Color] :: Color -> Float

data CodeLensWorkspaceClientCapabilities
CodeLensWorkspaceClientCapabilities :: Maybe Bool -> CodeLensWorkspaceClientCapabilities

-- | Whether the client implementation supports a refresh request sent from
--   the server to the client.
--   
--   Note that this event is global and will force the client to refresh
--   all code lenses currently shown. It should be used with absolute care
--   and is useful for situation where a server for example detect a
--   project wide change that requires such a calculation.
[$sel:_refreshSupport:CodeLensWorkspaceClientCapabilities] :: CodeLensWorkspaceClientCapabilities -> Maybe Bool

-- | Registration options for a <tt>CodeLensRequest</tt>.
data CodeLensRegistrationOptions
CodeLensRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Bool -> CodeLensRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:CodeLensRegistrationOptions] :: CodeLensRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:CodeLensRegistrationOptions] :: CodeLensRegistrationOptions -> Maybe Bool

-- | Code lens has a resolve provider as well.
[$sel:_resolveProvider:CodeLensRegistrationOptions] :: CodeLensRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>CodeLensRequest</tt>.
data CodeLensParams
CodeLensParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> CodeLensParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:CodeLensParams] :: CodeLensParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:CodeLensParams] :: CodeLensParams -> Maybe ProgressToken

-- | The document to request code lens for.
[$sel:_textDocument:CodeLensParams] :: CodeLensParams -> TextDocumentIdentifier

-- | Code Lens provider options of a <tt>CodeLensRequest</tt>.
data CodeLensOptions
CodeLensOptions :: Maybe Bool -> Maybe Bool -> CodeLensOptions

[$sel:_workDoneProgress:CodeLensOptions] :: CodeLensOptions -> Maybe Bool

-- | Code lens has a resolve provider as well.
[$sel:_resolveProvider:CodeLensOptions] :: CodeLensOptions -> Maybe Bool

-- | The client capabilities of a <tt>CodeLensRequest</tt>.
data CodeLensClientCapabilities
CodeLensClientCapabilities :: Maybe Bool -> CodeLensClientCapabilities

-- | Whether code lens supports dynamic registration.
[$sel:_dynamicRegistration:CodeLensClientCapabilities] :: CodeLensClientCapabilities -> Maybe Bool

-- | A code lens represents a <tt>Command</tt> that should be shown along
--   with source text, like the number of references, a way to run tests,
--   etc.
--   
--   A code lens is _unresolved_ when no command is associated to it. For
--   performance reasons the creation of a code lens and resolving should
--   be done in two stages.
data CodeLens
CodeLens :: Range -> Maybe Command -> Maybe Value -> CodeLens

-- | The range in which this code lens is valid. Should only span a single
--   line.
[$sel:_range:CodeLens] :: CodeLens -> Range

-- | The command this code lens represents.
[$sel:_command:CodeLens] :: CodeLens -> Maybe Command

-- | A data entry field that is preserved on a code lens item between a
--   <tt>CodeLensRequest</tt> and a <tt>CodeLensResolveRequest</tt>
[$sel:_data_:CodeLens] :: CodeLens -> Maybe Value

-- | Structure to capture a description for an error code.
data CodeDescription
CodeDescription :: Uri -> CodeDescription

-- | An URI to open with more information about the diagnostic error.
[$sel:_href:CodeDescription] :: CodeDescription -> Uri

-- | The reason why code actions were requested.
data CodeActionTriggerKind

-- | Code actions were explicitly requested by the user or by an extension.
CodeActionTriggerKind_Invoked :: CodeActionTriggerKind

-- | Code actions were requested automatically.
--   
--   This typically happens when current selection in a file changes, but
--   can also be triggered when file content changes.
CodeActionTriggerKind_Automatic :: CodeActionTriggerKind

-- | Registration options for a <tt>CodeActionRequest</tt>.
data CodeActionRegistrationOptions
CodeActionRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe [CodeActionKind] -> Maybe Bool -> CodeActionRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:CodeActionRegistrationOptions] :: CodeActionRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:CodeActionRegistrationOptions] :: CodeActionRegistrationOptions -> Maybe Bool

-- | CodeActionKinds that this server may return.
--   
--   The list of kinds may be generic, such as <a>Refactor</a>, or the
--   server may list out every specific kind they provide.
[$sel:_codeActionKinds:CodeActionRegistrationOptions] :: CodeActionRegistrationOptions -> Maybe [CodeActionKind]

-- | The server provides support to resolve additional information for a
--   code action.
[$sel:_resolveProvider:CodeActionRegistrationOptions] :: CodeActionRegistrationOptions -> Maybe Bool

-- | The parameters of a <tt>CodeActionRequest</tt>.
data CodeActionParams
CodeActionParams :: Maybe ProgressToken -> Maybe ProgressToken -> TextDocumentIdentifier -> Range -> CodeActionContext -> CodeActionParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:CodeActionParams] :: CodeActionParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:CodeActionParams] :: CodeActionParams -> Maybe ProgressToken

-- | The document in which the command was invoked.
[$sel:_textDocument:CodeActionParams] :: CodeActionParams -> TextDocumentIdentifier

-- | The range for which the command was invoked.
[$sel:_range:CodeActionParams] :: CodeActionParams -> Range

-- | Context carrying additional information.
[$sel:_context:CodeActionParams] :: CodeActionParams -> CodeActionContext

-- | Provider options for a <tt>CodeActionRequest</tt>.
data CodeActionOptions
CodeActionOptions :: Maybe Bool -> Maybe [CodeActionKind] -> Maybe Bool -> CodeActionOptions

[$sel:_workDoneProgress:CodeActionOptions] :: CodeActionOptions -> Maybe Bool

-- | CodeActionKinds that this server may return.
--   
--   The list of kinds may be generic, such as <a>Refactor</a>, or the
--   server may list out every specific kind they provide.
[$sel:_codeActionKinds:CodeActionOptions] :: CodeActionOptions -> Maybe [CodeActionKind]

-- | The server provides support to resolve additional information for a
--   code action.
[$sel:_resolveProvider:CodeActionOptions] :: CodeActionOptions -> Maybe Bool

-- | A set of predefined code action kinds
data CodeActionKind

-- | Empty kind.
CodeActionKind_Empty :: CodeActionKind

-- | Base kind for quickfix actions: <tt>quickfix</tt>
CodeActionKind_QuickFix :: CodeActionKind

-- | Base kind for refactoring actions: <tt>refactor</tt>
CodeActionKind_Refactor :: CodeActionKind

-- | Base kind for refactoring extraction actions: 'refactor.extract'
--   
--   Example extract actions:
--   
--   <ul>
--   <li>Extract method</li>
--   <li>Extract function</li>
--   <li>Extract variable</li>
--   <li>Extract interface from class</li>
--   <li>...</li>
--   </ul>
CodeActionKind_RefactorExtract :: CodeActionKind

-- | Base kind for refactoring inline actions: 'refactor.inline'
--   
--   Example inline actions:
--   
--   <ul>
--   <li>Inline function</li>
--   <li>Inline variable</li>
--   <li>Inline constant</li>
--   <li>...</li>
--   </ul>
CodeActionKind_RefactorInline :: CodeActionKind

-- | Base kind for refactoring rewrite actions: 'refactor.rewrite'
--   
--   Example rewrite actions:
--   
--   <ul>
--   <li>Convert JavaScript function to class</li>
--   <li>Add or remove parameter</li>
--   <li>Encapsulate field</li>
--   <li>Make method static</li>
--   <li>Move method to base class</li>
--   <li>...</li>
--   </ul>
CodeActionKind_RefactorRewrite :: CodeActionKind

-- | Base kind for source actions: <tt>source</tt>
--   
--   Source code actions apply to the entire file.
CodeActionKind_Source :: CodeActionKind

-- | Base kind for an organize imports source action:
--   `source.organizeImports`
CodeActionKind_SourceOrganizeImports :: CodeActionKind

-- | Base kind for auto-fix source actions: `source.fixAll`.
--   
--   Fix all actions automatically fix errors that have a clear fix that do
--   not require user input. They should not suppress errors or perform
--   unsafe fixes such as generating new types or classes.
CodeActionKind_SourceFixAll :: CodeActionKind
CodeActionKind_Custom :: Text -> CodeActionKind

-- | Contains additional diagnostic information about the context in which
--   a <a>provideCodeActions</a> is run.
data CodeActionContext
CodeActionContext :: [Diagnostic] -> Maybe [CodeActionKind] -> Maybe CodeActionTriggerKind -> CodeActionContext

-- | An array of diagnostics known on the client side overlapping the range
--   provided to the `textDocument/codeAction` request. They are provided
--   so that the server knows which errors are currently presented to the
--   user for the given range. There is no guarantee that these accurately
--   reflect the error state of the resource. The primary parameter to
--   compute code actions is the provided range.
[$sel:_diagnostics:CodeActionContext] :: CodeActionContext -> [Diagnostic]

-- | Requested kind of actions to return.
--   
--   Actions not of this kind are filtered out by the client before being
--   shown. So servers can omit computing them.
[$sel:_only:CodeActionContext] :: CodeActionContext -> Maybe [CodeActionKind]

-- | The reason why code actions were requested.
[$sel:_triggerKind:CodeActionContext] :: CodeActionContext -> Maybe CodeActionTriggerKind

-- | The Client Capabilities of a <tt>CodeActionRequest</tt>.
data CodeActionClientCapabilities
CodeActionClientCapabilities :: Maybe Bool -> Maybe (Rec (("codeActionKind" .== Rec (("valueSet" .== [CodeActionKind]) .+ Empty)) .+ Empty)) -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe (Rec (("properties" .== [Text]) .+ Empty)) -> Maybe Bool -> CodeActionClientCapabilities

-- | Whether code action supports dynamic registration.
[$sel:_dynamicRegistration:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe Bool

-- | The client support code action literals of type <tt>CodeAction</tt> as
--   a valid response of the `textDocument/codeAction` request. If the
--   property is not set the request can only return <tt>Command</tt>
--   literals.
[$sel:_codeActionLiteralSupport:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe (Rec (("codeActionKind" .== Rec (("valueSet" .== [CodeActionKind]) .+ Empty)) .+ Empty))

-- | Whether code action supports the <tt>isPreferred</tt> property.
[$sel:_isPreferredSupport:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe Bool

-- | Whether code action supports the <tt>disabled</tt> property.
[$sel:_disabledSupport:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe Bool

-- | Whether code action supports the `data` property which is preserved
--   between a `textDocument/codeAction` and a `codeAction/resolve`
--   request.
[$sel:_dataSupport:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe Bool

-- | Whether the client supports resolving additional code action
--   properties via a separate `codeAction/resolve` request.
[$sel:_resolveSupport:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe (Rec (("properties" .== [Text]) .+ Empty))

-- | Whether the client honors the change annotations in text edits and
--   resource operations returned via the `CodeAction#edit` property by for
--   example presenting the workspace edit in the user interface and asking
--   for confirmation.
[$sel:_honorsChangeAnnotations:CodeActionClientCapabilities] :: CodeActionClientCapabilities -> Maybe Bool

-- | A code action represents a change that can be performed in code, e.g.
--   to fix a problem or to refactor code.
--   
--   A CodeAction must set either <tt>edit</tt> and/or a <tt>command</tt>.
--   If both are supplied, the <tt>edit</tt> is applied first, then the
--   <tt>command</tt> is executed.
data CodeAction
CodeAction :: Text -> Maybe CodeActionKind -> Maybe [Diagnostic] -> Maybe Bool -> Maybe (Rec (("reason" .== Text) .+ Empty)) -> Maybe WorkspaceEdit -> Maybe Command -> Maybe Value -> CodeAction

-- | A short, human-readable, title for this code action.
[$sel:_title:CodeAction] :: CodeAction -> Text

-- | The kind of the code action.
--   
--   Used to filter code actions.
[$sel:_kind:CodeAction] :: CodeAction -> Maybe CodeActionKind

-- | The diagnostics that this code action resolves.
[$sel:_diagnostics:CodeAction] :: CodeAction -> Maybe [Diagnostic]

-- | Marks this as a preferred action. Preferred actions are used by the
--   `auto fix` command and can be targeted by keybindings.
--   
--   A quick fix should be marked preferred if it properly addresses the
--   underlying error. A refactoring should be marked preferred if it is
--   the most reasonable choice of actions to take.
[$sel:_isPreferred:CodeAction] :: CodeAction -> Maybe Bool

-- | Marks that the code action cannot currently be applied.
--   
--   Clients should follow the following guidelines regarding disabled code
--   actions:
--   
--   <ul>
--   <li>Disabled code actions are not shown in automatic <a>lightbulbs</a>
--   code action menus.</li>
--   <li>Disabled actions are shown as faded out in the code action menu
--   when the user requests a more specific type of code action, such as
--   refactorings.</li>
--   <li>If the user has a <a>keybinding</a> that auto applies a code
--   action and only disabled code actions are returned, the client should
--   show the user an error message with <tt>reason</tt> in the
--   editor.</li>
--   </ul>
[$sel:_disabled:CodeAction] :: CodeAction -> Maybe (Rec (("reason" .== Text) .+ Empty))

-- | The workspace edit this code action performs.
[$sel:_edit:CodeAction] :: CodeAction -> Maybe WorkspaceEdit

-- | A command this code action executes. If a code action provides an edit
--   and a command, first the edit is executed and then the command.
[$sel:_command:CodeAction] :: CodeAction -> Maybe Command

-- | A data entry field that is preserved on a code action between a
--   `textDocument<i>codeAction` and a `codeAction</i>resolve` request.
[$sel:_data_:CodeAction] :: CodeAction -> Maybe Value

-- | Defines the capabilities provided by the client.
data ClientCapabilities
ClientCapabilities :: Maybe WorkspaceClientCapabilities -> Maybe TextDocumentClientCapabilities -> Maybe NotebookDocumentClientCapabilities -> Maybe WindowClientCapabilities -> Maybe GeneralClientCapabilities -> Maybe Value -> ClientCapabilities

-- | Workspace specific client capabilities.
[$sel:_workspace:ClientCapabilities] :: ClientCapabilities -> Maybe WorkspaceClientCapabilities

-- | Text document specific client capabilities.
[$sel:_textDocument:ClientCapabilities] :: ClientCapabilities -> Maybe TextDocumentClientCapabilities

-- | Capabilities specific to the notebook document support.
[$sel:_notebookDocument:ClientCapabilities] :: ClientCapabilities -> Maybe NotebookDocumentClientCapabilities

-- | Window specific client capabilities.
[$sel:_window:ClientCapabilities] :: ClientCapabilities -> Maybe WindowClientCapabilities

-- | General client capabilities.
[$sel:_general:ClientCapabilities] :: ClientCapabilities -> Maybe GeneralClientCapabilities

-- | Experimental client capabilities.
[$sel:_experimental:ClientCapabilities] :: ClientCapabilities -> Maybe Value

-- | An identifier to refer to a change annotation stored with a workspace
--   edit.
newtype ChangeAnnotationIdentifier
ChangeAnnotationIdentifier :: Text -> ChangeAnnotationIdentifier

-- | Additional information that describes document changes.
data ChangeAnnotation
ChangeAnnotation :: Text -> Maybe Bool -> Maybe Text -> ChangeAnnotation

-- | A human-readable string describing the actual change. The string is
--   rendered prominent in the user interface.
[$sel:_label:ChangeAnnotation] :: ChangeAnnotation -> Text

-- | A flag which indicates that user confirmation is needed before
--   applying the change.
[$sel:_needsConfirmation:ChangeAnnotation] :: ChangeAnnotation -> Maybe Bool

-- | A human-readable string which is rendered less prominent in the user
--   interface.
[$sel:_description:ChangeAnnotation] :: ChangeAnnotation -> Maybe Text

data CancelParams
CancelParams :: (Int32 |? Text) -> CancelParams

-- | The request id to cancel.
[$sel:_id:CancelParams] :: CancelParams -> Int32 |? Text

-- | Call hierarchy options used during static or dynamic registration.
data CallHierarchyRegistrationOptions
CallHierarchyRegistrationOptions :: (DocumentSelector |? Null) -> Maybe Bool -> Maybe Text -> CallHierarchyRegistrationOptions

-- | A document selector to identify the scope of the registration. If set
--   to null the document selector provided on the client side will be
--   used.
[$sel:_documentSelector:CallHierarchyRegistrationOptions] :: CallHierarchyRegistrationOptions -> DocumentSelector |? Null

[$sel:_workDoneProgress:CallHierarchyRegistrationOptions] :: CallHierarchyRegistrationOptions -> Maybe Bool

-- | The id used to register the request. The id can be used to deregister
--   the request again. See also Registration#id.
[$sel:_id:CallHierarchyRegistrationOptions] :: CallHierarchyRegistrationOptions -> Maybe Text

-- | The parameter of a `textDocument/prepareCallHierarchy` request.
data CallHierarchyPrepareParams
CallHierarchyPrepareParams :: TextDocumentIdentifier -> Position -> Maybe ProgressToken -> CallHierarchyPrepareParams

-- | The text document.
[$sel:_textDocument:CallHierarchyPrepareParams] :: CallHierarchyPrepareParams -> TextDocumentIdentifier

-- | The position inside the text document.
[$sel:_position:CallHierarchyPrepareParams] :: CallHierarchyPrepareParams -> Position

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:CallHierarchyPrepareParams] :: CallHierarchyPrepareParams -> Maybe ProgressToken

-- | The parameter of a `callHierarchy/outgoingCalls` request.
data CallHierarchyOutgoingCallsParams
CallHierarchyOutgoingCallsParams :: Maybe ProgressToken -> Maybe ProgressToken -> CallHierarchyItem -> CallHierarchyOutgoingCallsParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:CallHierarchyOutgoingCallsParams] :: CallHierarchyOutgoingCallsParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:CallHierarchyOutgoingCallsParams] :: CallHierarchyOutgoingCallsParams -> Maybe ProgressToken

[$sel:_item:CallHierarchyOutgoingCallsParams] :: CallHierarchyOutgoingCallsParams -> CallHierarchyItem

-- | Represents an outgoing call, e.g. calling a getter from a method or a
--   method from a constructor etc.
data CallHierarchyOutgoingCall
CallHierarchyOutgoingCall :: CallHierarchyItem -> [Range] -> CallHierarchyOutgoingCall

-- | The item that is called.
[$sel:_to:CallHierarchyOutgoingCall] :: CallHierarchyOutgoingCall -> CallHierarchyItem

-- | The range at which this item is called. This is the range relative to
--   the caller, e.g the item passed to
--   <a>provideCallHierarchyOutgoingCalls</a> and not <a>to</a>.
[$sel:_fromRanges:CallHierarchyOutgoingCall] :: CallHierarchyOutgoingCall -> [Range]

-- | Call hierarchy options used during static registration.
data CallHierarchyOptions
CallHierarchyOptions :: Maybe Bool -> CallHierarchyOptions

[$sel:_workDoneProgress:CallHierarchyOptions] :: CallHierarchyOptions -> Maybe Bool

-- | Represents programming constructs like functions or constructors in
--   the context of call hierarchy.
data CallHierarchyItem
CallHierarchyItem :: Text -> SymbolKind -> Maybe [SymbolTag] -> Maybe Text -> Uri -> Range -> Range -> Maybe Value -> CallHierarchyItem

-- | The name of this item.
[$sel:_name:CallHierarchyItem] :: CallHierarchyItem -> Text

-- | The kind of this item.
[$sel:_kind:CallHierarchyItem] :: CallHierarchyItem -> SymbolKind

-- | Tags for this item.
[$sel:_tags:CallHierarchyItem] :: CallHierarchyItem -> Maybe [SymbolTag]

-- | More detail for this item, e.g. the signature of a function.
[$sel:_detail:CallHierarchyItem] :: CallHierarchyItem -> Maybe Text

-- | The resource identifier of this item.
[$sel:_uri:CallHierarchyItem] :: CallHierarchyItem -> Uri

-- | The range enclosing this symbol not including leading/trailing
--   whitespace but everything else, e.g. comments and code.
[$sel:_range:CallHierarchyItem] :: CallHierarchyItem -> Range

-- | The range that should be selected and revealed when this symbol is
--   being picked, e.g. the name of a function. Must be contained by the
--   <a>range</a>.
[$sel:_selectionRange:CallHierarchyItem] :: CallHierarchyItem -> Range

-- | A data entry field that is preserved between a call hierarchy prepare
--   and incoming calls or outgoing calls requests.
[$sel:_data_:CallHierarchyItem] :: CallHierarchyItem -> Maybe Value

-- | The parameter of a `callHierarchy/incomingCalls` request.
data CallHierarchyIncomingCallsParams
CallHierarchyIncomingCallsParams :: Maybe ProgressToken -> Maybe ProgressToken -> CallHierarchyItem -> CallHierarchyIncomingCallsParams

-- | An optional token that a server can use to report work done progress.
[$sel:_workDoneToken:CallHierarchyIncomingCallsParams] :: CallHierarchyIncomingCallsParams -> Maybe ProgressToken

-- | An optional token that a server can use to report partial results
--   (e.g. streaming) to the client.
[$sel:_partialResultToken:CallHierarchyIncomingCallsParams] :: CallHierarchyIncomingCallsParams -> Maybe ProgressToken

[$sel:_item:CallHierarchyIncomingCallsParams] :: CallHierarchyIncomingCallsParams -> CallHierarchyItem

-- | Represents an incoming call, e.g. a caller of a method or constructor.
data CallHierarchyIncomingCall
CallHierarchyIncomingCall :: CallHierarchyItem -> [Range] -> CallHierarchyIncomingCall

-- | The item that makes the call.
[$sel:_from:CallHierarchyIncomingCall] :: CallHierarchyIncomingCall -> CallHierarchyItem

-- | The ranges at which the calls appear. This is relative to the caller
--   denoted by <a>from</a>.
[$sel:_fromRanges:CallHierarchyIncomingCall] :: CallHierarchyIncomingCall -> [Range]

data CallHierarchyClientCapabilities
CallHierarchyClientCapabilities :: Maybe Bool -> CallHierarchyClientCapabilities

-- | Whether implementation supports dynamic registration. If this is set
--   to <tt>true</tt> the client supports the new
--   `(TextDocumentRegistrationOptions &amp; StaticRegistrationOptions)`
--   return value for the corresponding server capability as well.
[$sel:_dynamicRegistration:CallHierarchyClientCapabilities] :: CallHierarchyClientCapabilities -> Maybe Bool

-- | A base for all symbol information.
data BaseSymbolInformation
BaseSymbolInformation :: Text -> SymbolKind -> Maybe [SymbolTag] -> Maybe Text -> BaseSymbolInformation

-- | The name of this symbol.
[$sel:_name:BaseSymbolInformation] :: BaseSymbolInformation -> Text

-- | The kind of this symbol.
[$sel:_kind:BaseSymbolInformation] :: BaseSymbolInformation -> SymbolKind

-- | Tags for this symbol.
[$sel:_tags:BaseSymbolInformation] :: BaseSymbolInformation -> Maybe [SymbolTag]

-- | The name of the symbol containing this symbol. This information is for
--   user interface purposes (e.g. to render a qualifier in the user
--   interface if necessary). It can't be used to re-infer a hierarchy for
--   the document symbols.
[$sel:_containerName:BaseSymbolInformation] :: BaseSymbolInformation -> Maybe Text

-- | The result returned from the apply workspace edit request.
--   
--   @since 3.17 renamed from ApplyWorkspaceEditResponse
data ApplyWorkspaceEditResult
ApplyWorkspaceEditResult :: Bool -> Maybe Text -> Maybe UInt -> ApplyWorkspaceEditResult

-- | Indicates whether the edit was applied or not.
[$sel:_applied:ApplyWorkspaceEditResult] :: ApplyWorkspaceEditResult -> Bool

-- | An optional textual description for why the edit was not applied. This
--   may be used by the server for diagnostic logging or to provide a
--   suitable error for a request that triggered the edit.
[$sel:_failureReason:ApplyWorkspaceEditResult] :: ApplyWorkspaceEditResult -> Maybe Text

-- | Depending on the client's failure handling strategy
--   <tt>failedChange</tt> might contain the index of the change that
--   failed. This property is only available if the client signals a
--   <tt>failureHandlingStrategy</tt> in its client capabilities.
[$sel:_failedChange:ApplyWorkspaceEditResult] :: ApplyWorkspaceEditResult -> Maybe UInt

-- | The parameters passed via a apply workspace edit request.
data ApplyWorkspaceEditParams
ApplyWorkspaceEditParams :: Maybe Text -> WorkspaceEdit -> ApplyWorkspaceEditParams

-- | An optional label of the workspace edit. This label is presented in
--   the user interface for example on an undo stack to undo the workspace
--   edit.
[$sel:_label:ApplyWorkspaceEditParams] :: ApplyWorkspaceEditParams -> Maybe Text

-- | The edits to apply.
[$sel:_edit:ApplyWorkspaceEditParams] :: ApplyWorkspaceEditParams -> WorkspaceEdit

-- | A special text edit with an additional change annotation.
--   
--   @since 3.16.0.
data AnnotatedTextEdit
AnnotatedTextEdit :: Range -> Text -> ChangeAnnotationIdentifier -> AnnotatedTextEdit

-- | The range of the text document to be manipulated. To insert text into
--   a document create a range where start === end.
[$sel:_range:AnnotatedTextEdit] :: AnnotatedTextEdit -> Range

-- | The string to be inserted. For delete operations use an empty string.
[$sel:_newText:AnnotatedTextEdit] :: AnnotatedTextEdit -> Text

-- | The actual identifier of the change annotation
[$sel:_annotationId:AnnotatedTextEdit] :: AnnotatedTextEdit -> ChangeAnnotationIdentifier

module Language.LSP.Protocol.Message

-- | Notification message type as defined in the spec.
data NotificationMessage
NotificationMessage :: Text -> Text -> Maybe Value -> NotificationMessage
[$sel:_jsonrpc:NotificationMessage] :: NotificationMessage -> Text
[$sel:_method:NotificationMessage] :: NotificationMessage -> Text
[$sel:_params:NotificationMessage] :: NotificationMessage -> Maybe Value

-- | Request message type as defined in the spec.
data RequestMessage
RequestMessage :: Text -> (Int32 |? Text) -> Text -> Maybe Value -> RequestMessage
[$sel:_jsonrpc:RequestMessage] :: RequestMessage -> Text
[$sel:_id:RequestMessage] :: RequestMessage -> Int32 |? Text
[$sel:_method:RequestMessage] :: RequestMessage -> Text
[$sel:_params:RequestMessage] :: RequestMessage -> Maybe Value

-- | Response error type as defined in the spec.
data ResponseError
ResponseError :: (LSPErrorCodes |? ErrorCodes) -> Text -> Maybe Value -> ResponseError
[$sel:_code:ResponseError] :: ResponseError -> LSPErrorCodes |? ErrorCodes
[$sel:_message:ResponseError] :: ResponseError -> Text
[$sel:_xdata:ResponseError] :: ResponseError -> Maybe Value

-- | Response message type as defined in the spec.
data ResponseMessage
ResponseMessage :: Text -> (Int32 |? (Text |? Null)) -> Maybe Value -> Maybe ResponseError -> ResponseMessage
[$sel:_jsonrpc:ResponseMessage] :: ResponseMessage -> Text
[$sel:_id:ResponseMessage] :: ResponseMessage -> Int32 |? (Text |? Null)
[$sel:_result:ResponseMessage] :: ResponseMessage -> Maybe Value
[$sel:_error:ResponseMessage] :: ResponseMessage -> Maybe ResponseError

-- | Typed notification message, containing the correct parameter payload.
data TNotificationMessage (m :: Method f Notification)
TNotificationMessage :: Text -> SMethod m -> MessageParams m -> TNotificationMessage (m :: Method f Notification)
[$sel:_jsonrpc:TNotificationMessage] :: TNotificationMessage (m :: Method f Notification) -> Text
[$sel:_method:TNotificationMessage] :: TNotificationMessage (m :: Method f Notification) -> SMethod m
[$sel:_params:TNotificationMessage] :: TNotificationMessage (m :: Method f Notification) -> MessageParams m

-- | Typed request message, containing the correct parameter payload.
data TRequestMessage (m :: Method f Request)
TRequestMessage :: Text -> LspId m -> SMethod m -> MessageParams m -> TRequestMessage (m :: Method f Request)
[$sel:_jsonrpc:TRequestMessage] :: TRequestMessage (m :: Method f Request) -> Text
[$sel:_id:TRequestMessage] :: TRequestMessage (m :: Method f Request) -> LspId m
[$sel:_method:TRequestMessage] :: TRequestMessage (m :: Method f Request) -> SMethod m
[$sel:_params:TRequestMessage] :: TRequestMessage (m :: Method f Request) -> MessageParams m
data TResponseError (m :: Method f Request)
TResponseError :: (LSPErrorCodes |? ErrorCodes) -> Text -> Maybe (ErrorData m) -> TResponseError (m :: Method f Request)
[$sel:_code:TResponseError] :: TResponseError (m :: Method f Request) -> LSPErrorCodes |? ErrorCodes
[$sel:_message:TResponseError] :: TResponseError (m :: Method f Request) -> Text
[$sel:_xdata:TResponseError] :: TResponseError (m :: Method f Request) -> Maybe (ErrorData m)
toUntypedResponseError :: ToJSON (ErrorData m) => TResponseError m -> ResponseError

-- | A typed response message with a correct result payload.
data TResponseMessage (m :: Method f Request)
TResponseMessage :: Text -> Maybe (LspId m) -> Either ResponseError (MessageResult m) -> TResponseMessage (m :: Method f Request)
[$sel:_jsonrpc:TResponseMessage] :: TResponseMessage (m :: Method f Request) -> Text
[$sel:_id:TResponseMessage] :: TResponseMessage (m :: Method f Request) -> Maybe (LspId m)
[$sel:_result:TResponseMessage] :: TResponseMessage (m :: Method f Request) -> Either ResponseError (MessageResult m)

-- | A typed custom message. A special data type is needed to distinguish
--   between notifications and requests, since a CustomMethod can be both!
data TCustomMessage s f t
[ReqMess] :: TRequestMessage (Method_CustomMethod s :: Method f Request) -> TCustomMessage s f Request
[NotMess] :: TNotificationMessage (Method_CustomMethod s :: Method f Notification) -> TCustomMessage s f Notification

-- | Map a method to the Request/Notification type with the correct
--   payload.
type family TMessage m
type TClientMessage (m :: Method ClientToServer t) = TMessage m
type TServerMessage (m :: Method ServerToClient t) = TMessage m

-- | Replace a missing field in an object with a null field, to simplify
--   parsing This is a hack to allow other types than Maybe to work like
--   Maybe in allowing the field to be missing. See also this issue:
--   <a>https://github.com/haskell/aeson/issues/646</a>
addNullField :: String -> Value -> Value

-- | Id used for a request, Can be either a String or an Int
data LspId (m :: Method f Request)
IdInt :: !Int32 -> LspId (m :: Method f Request)
IdString :: !Text -> LspId (m :: Method f Request)
data SomeLspId
[SomeLspId] :: !LspId m -> SomeLspId

-- | Which direction messages are sent in.
data MessageDirection
ServerToClient :: MessageDirection
ClientToServer :: MessageDirection

-- | What kind of message is sent.
data MessageKind
Notification :: MessageKind
Request :: MessageKind

-- | Singleton type for <a>MessageDirection</a>.
data SMessageDirection (f :: MessageDirection)
[SClientToServer] :: SMessageDirection ClientToServer
[SServerToClient] :: SMessageDirection ServerToClient
[SBothDirections] :: SMessageDirection f

-- | Singleton type for <a>MessageKind</a>.
data SMessageKind (f :: MessageKind)
[SNotification] :: SMessageKind Notification
[SRequest] :: SMessageKind Request
[SBothTypes] :: SMessageKind f
data FromServerMessage' a
[FromServerMess] :: forall t (m :: Method ServerToClient t) a. SMethod m -> TMessage m -> FromServerMessage' a
[FromServerRsp] :: forall (m :: Method ClientToServer Request) a. a m -> TResponseMessage m -> FromServerMessage' a
type FromServerMessage = FromServerMessage' SMethod
fromServerNot :: forall (m :: Method ServerToClient Notification). TMessage m ~ TNotificationMessage m => TNotificationMessage m -> FromServerMessage
fromServerReq :: forall (m :: Method ServerToClient Request). TMessage m ~ TRequestMessage m => TRequestMessage m -> FromServerMessage
data FromClientMessage' a
[FromClientMess] :: forall t (m :: Method ClientToServer t) a. SMethod m -> TMessage m -> FromClientMessage' a
[FromClientRsp] :: forall (m :: Method ServerToClient Request) a. a m -> TResponseMessage m -> FromClientMessage' a
type FromClientMessage = FromClientMessage' SMethod
fromClientNot :: forall (m :: Method ClientToServer Notification). TMessage m ~ TNotificationMessage m => TNotificationMessage m -> FromClientMessage
fromClientReq :: forall (m :: Method ClientToServer Request). TMessage m ~ TRequestMessage m => TRequestMessage m -> FromClientMessage
type LookupFunc f a = forall (m :: Method f Request). LspId m -> Maybe (SMethod m, a m)
parseServerMessage :: LookupFunc ClientToServer a -> Value -> Parser (FromServerMessage' a)
parseClientMessage :: LookupFunc ServerToClient a -> Value -> Parser (FromClientMessage' a)
clientResponseJSON :: SClientMethod m -> (HasJSON (TResponseMessage m) => x) -> x
serverResponseJSON :: SServerMethod m -> (HasJSON (TResponseMessage m) => x) -> x
clientMethodJSON :: SClientMethod m -> (ToJSON (TClientMessage m) => x) -> x
serverMethodJSON :: SServerMethod m -> (ToJSON (TServerMessage m) => x) -> x
type HasJSON a = (ToJSON a, FromJSON a, Eq a)
data ClientNotOrReq m
[IsClientNot] :: (HasJSON (TClientMessage m), TMessage m ~ TNotificationMessage m) => ClientNotOrReq (m :: Method ClientToServer Notification)
[IsClientReq] :: forall (m :: Method ClientToServer Request). (HasJSON (TClientMessage m), HasJSON (TResponseMessage m), TMessage m ~ TRequestMessage m) => ClientNotOrReq m
[IsClientEither] :: ClientNotOrReq (Method_CustomMethod s)
data ServerNotOrReq m
[IsServerNot] :: (HasJSON (TServerMessage m), TMessage m ~ TNotificationMessage m) => ServerNotOrReq (m :: Method ServerToClient Notification)
[IsServerReq] :: forall (m :: Method ServerToClient Request). (HasJSON (TServerMessage m), HasJSON (TResponseMessage m), TMessage m ~ TRequestMessage m) => ServerNotOrReq m
[IsServerEither] :: ServerNotOrReq (Method_CustomMethod s)
splitClientMethod :: SClientMethod m -> ClientNotOrReq m
splitServerMethod :: SServerMethod m -> ServerNotOrReq m

-- | Given a witness that two custom methods are of the same type, produce
--   a witness that the methods are the same
data CustomEq m1 m2
[CustomEq] :: (m1 ~ (Method_CustomMethod s :: Method f t1), m2 ~ (Method_CustomMethod s :: Method f t2)) => (t1 ~ t2 => m1 :~~: m2) -> CustomEq m1 m2
runEq :: t1 ~ t2 => (SMethod m1 -> SMethod m2 -> Maybe (Either (CustomEq m1 m2) (m1 :~~: m2))) -> SMethod (m1 :: Method f t1) -> SMethod (m2 :: Method f t2) -> Maybe (m1 :~~: m2)

-- | Heterogeneous equality on singleton server methods
mEqServer :: SServerMethod m1 -> SServerMethod m2 -> Maybe (Either (CustomEq m1 m2) (m1 :~~: m2))

-- | Heterogeneous equality on singleton client methods
mEqClient :: SClientMethod m1 -> SClientMethod m2 -> Maybe (Either (CustomEq m1 m2) (m1 :~~: m2))

-- | A type representing a LSP method (or class of methods), intended to be
--   used mostly at the type level.
data Method f t
[Method_TextDocumentImplementation] :: Method ClientToServer Request
[Method_TextDocumentTypeDefinition] :: Method ClientToServer Request
[Method_WorkspaceWorkspaceFolders] :: Method ServerToClient Request
[Method_WorkspaceConfiguration] :: Method ServerToClient Request
[Method_TextDocumentDocumentColor] :: Method ClientToServer Request
[Method_TextDocumentColorPresentation] :: Method ClientToServer Request
[Method_TextDocumentFoldingRange] :: Method ClientToServer Request
[Method_TextDocumentDeclaration] :: Method ClientToServer Request
[Method_TextDocumentSelectionRange] :: Method ClientToServer Request
[Method_WindowWorkDoneProgressCreate] :: Method ServerToClient Request
[Method_TextDocumentPrepareCallHierarchy] :: Method ClientToServer Request
[Method_CallHierarchyIncomingCalls] :: Method ClientToServer Request
[Method_CallHierarchyOutgoingCalls] :: Method ClientToServer Request
[Method_TextDocumentSemanticTokensFull] :: Method ClientToServer Request
[Method_TextDocumentSemanticTokensFullDelta] :: Method ClientToServer Request
[Method_TextDocumentSemanticTokensRange] :: Method ClientToServer Request
[Method_WorkspaceSemanticTokensRefresh] :: Method ServerToClient Request
[Method_WindowShowDocument] :: Method ServerToClient Request
[Method_TextDocumentLinkedEditingRange] :: Method ClientToServer Request
[Method_WorkspaceWillCreateFiles] :: Method ClientToServer Request
[Method_WorkspaceWillRenameFiles] :: Method ClientToServer Request
[Method_WorkspaceWillDeleteFiles] :: Method ClientToServer Request
[Method_TextDocumentMoniker] :: Method ClientToServer Request
[Method_TextDocumentPrepareTypeHierarchy] :: Method ClientToServer Request
[Method_TypeHierarchySupertypes] :: Method ClientToServer Request
[Method_TypeHierarchySubtypes] :: Method ClientToServer Request
[Method_TextDocumentInlineValue] :: Method ClientToServer Request
[Method_WorkspaceInlineValueRefresh] :: Method ServerToClient Request
[Method_TextDocumentInlayHint] :: Method ClientToServer Request
[Method_InlayHintResolve] :: Method ClientToServer Request
[Method_WorkspaceInlayHintRefresh] :: Method ServerToClient Request
[Method_TextDocumentDiagnostic] :: Method ClientToServer Request
[Method_WorkspaceDiagnostic] :: Method ClientToServer Request
[Method_WorkspaceDiagnosticRefresh] :: Method ServerToClient Request
[Method_ClientRegisterCapability] :: Method ServerToClient Request
[Method_ClientUnregisterCapability] :: Method ServerToClient Request
[Method_Initialize] :: Method ClientToServer Request
[Method_Shutdown] :: Method ClientToServer Request
[Method_WindowShowMessageRequest] :: Method ServerToClient Request
[Method_TextDocumentWillSaveWaitUntil] :: Method ClientToServer Request
[Method_TextDocumentCompletion] :: Method ClientToServer Request
[Method_CompletionItemResolve] :: Method ClientToServer Request
[Method_TextDocumentHover] :: Method ClientToServer Request
[Method_TextDocumentSignatureHelp] :: Method ClientToServer Request
[Method_TextDocumentDefinition] :: Method ClientToServer Request
[Method_TextDocumentReferences] :: Method ClientToServer Request
[Method_TextDocumentDocumentHighlight] :: Method ClientToServer Request
[Method_TextDocumentDocumentSymbol] :: Method ClientToServer Request
[Method_TextDocumentCodeAction] :: Method ClientToServer Request
[Method_CodeActionResolve] :: Method ClientToServer Request
[Method_WorkspaceSymbol] :: Method ClientToServer Request
[Method_WorkspaceSymbolResolve] :: Method ClientToServer Request
[Method_TextDocumentCodeLens] :: Method ClientToServer Request
[Method_CodeLensResolve] :: Method ClientToServer Request
[Method_WorkspaceCodeLensRefresh] :: Method ServerToClient Request
[Method_TextDocumentDocumentLink] :: Method ClientToServer Request
[Method_DocumentLinkResolve] :: Method ClientToServer Request
[Method_TextDocumentFormatting] :: Method ClientToServer Request
[Method_TextDocumentRangeFormatting] :: Method ClientToServer Request
[Method_TextDocumentOnTypeFormatting] :: Method ClientToServer Request
[Method_TextDocumentRename] :: Method ClientToServer Request
[Method_TextDocumentPrepareRename] :: Method ClientToServer Request
[Method_WorkspaceExecuteCommand] :: Method ClientToServer Request
[Method_WorkspaceApplyEdit] :: Method ServerToClient Request
[Method_WorkspaceDidChangeWorkspaceFolders] :: Method ClientToServer Notification
[Method_WindowWorkDoneProgressCancel] :: Method ClientToServer Notification
[Method_WorkspaceDidCreateFiles] :: Method ClientToServer Notification
[Method_WorkspaceDidRenameFiles] :: Method ClientToServer Notification
[Method_WorkspaceDidDeleteFiles] :: Method ClientToServer Notification
[Method_NotebookDocumentDidOpen] :: Method ClientToServer Notification
[Method_NotebookDocumentDidChange] :: Method ClientToServer Notification
[Method_NotebookDocumentDidSave] :: Method ClientToServer Notification
[Method_NotebookDocumentDidClose] :: Method ClientToServer Notification
[Method_Initialized] :: Method ClientToServer Notification
[Method_Exit] :: Method ClientToServer Notification
[Method_WorkspaceDidChangeConfiguration] :: Method ClientToServer Notification
[Method_WindowShowMessage] :: Method ServerToClient Notification
[Method_WindowLogMessage] :: Method ServerToClient Notification
[Method_TelemetryEvent] :: Method ServerToClient Notification
[Method_TextDocumentDidOpen] :: Method ClientToServer Notification
[Method_TextDocumentDidChange] :: Method ClientToServer Notification
[Method_TextDocumentDidClose] :: Method ClientToServer Notification
[Method_TextDocumentDidSave] :: Method ClientToServer Notification
[Method_TextDocumentWillSave] :: Method ClientToServer Notification
[Method_WorkspaceDidChangeWatchedFiles] :: Method ClientToServer Notification
[Method_TextDocumentPublishDiagnostics] :: Method ServerToClient Notification
[Method_SetTrace] :: Method ClientToServer Notification
[Method_LogTrace] :: Method ServerToClient Notification
[Method_CancelRequest] :: Method f Notification
[Method_Progress] :: Method f Notification
[Method_CustomMethod] :: Symbol -> Method f t

-- | Maps a LSP method to its parameter type.
type family MessageParams (m :: Method f t)

-- | Maps a LSP method to its result type.
type family MessageResult (m :: Method f t)

-- | Maps a LSP method to its error data type.
type family ErrorData (m :: Method f t)

-- | Maps a LSP method to its registration options type.
type family RegistrationOptions (m :: Method f t)

-- | A singleton type for <a>Method</a>.
data SMethod m
[SMethod_TextDocumentImplementation] :: SMethod Method_TextDocumentImplementation
[SMethod_TextDocumentTypeDefinition] :: SMethod Method_TextDocumentTypeDefinition
[SMethod_WorkspaceWorkspaceFolders] :: SMethod Method_WorkspaceWorkspaceFolders
[SMethod_WorkspaceConfiguration] :: SMethod Method_WorkspaceConfiguration
[SMethod_TextDocumentDocumentColor] :: SMethod Method_TextDocumentDocumentColor
[SMethod_TextDocumentColorPresentation] :: SMethod Method_TextDocumentColorPresentation
[SMethod_TextDocumentFoldingRange] :: SMethod Method_TextDocumentFoldingRange
[SMethod_TextDocumentDeclaration] :: SMethod Method_TextDocumentDeclaration
[SMethod_TextDocumentSelectionRange] :: SMethod Method_TextDocumentSelectionRange
[SMethod_WindowWorkDoneProgressCreate] :: SMethod Method_WindowWorkDoneProgressCreate
[SMethod_TextDocumentPrepareCallHierarchy] :: SMethod Method_TextDocumentPrepareCallHierarchy
[SMethod_CallHierarchyIncomingCalls] :: SMethod Method_CallHierarchyIncomingCalls
[SMethod_CallHierarchyOutgoingCalls] :: SMethod Method_CallHierarchyOutgoingCalls
[SMethod_TextDocumentSemanticTokensFull] :: SMethod Method_TextDocumentSemanticTokensFull
[SMethod_TextDocumentSemanticTokensFullDelta] :: SMethod Method_TextDocumentSemanticTokensFullDelta
[SMethod_TextDocumentSemanticTokensRange] :: SMethod Method_TextDocumentSemanticTokensRange
[SMethod_WorkspaceSemanticTokensRefresh] :: SMethod Method_WorkspaceSemanticTokensRefresh
[SMethod_WindowShowDocument] :: SMethod Method_WindowShowDocument
[SMethod_TextDocumentLinkedEditingRange] :: SMethod Method_TextDocumentLinkedEditingRange
[SMethod_WorkspaceWillCreateFiles] :: SMethod Method_WorkspaceWillCreateFiles
[SMethod_WorkspaceWillRenameFiles] :: SMethod Method_WorkspaceWillRenameFiles
[SMethod_WorkspaceWillDeleteFiles] :: SMethod Method_WorkspaceWillDeleteFiles
[SMethod_TextDocumentMoniker] :: SMethod Method_TextDocumentMoniker
[SMethod_TextDocumentPrepareTypeHierarchy] :: SMethod Method_TextDocumentPrepareTypeHierarchy
[SMethod_TypeHierarchySupertypes] :: SMethod Method_TypeHierarchySupertypes
[SMethod_TypeHierarchySubtypes] :: SMethod Method_TypeHierarchySubtypes
[SMethod_TextDocumentInlineValue] :: SMethod Method_TextDocumentInlineValue
[SMethod_WorkspaceInlineValueRefresh] :: SMethod Method_WorkspaceInlineValueRefresh
[SMethod_TextDocumentInlayHint] :: SMethod Method_TextDocumentInlayHint
[SMethod_InlayHintResolve] :: SMethod Method_InlayHintResolve
[SMethod_WorkspaceInlayHintRefresh] :: SMethod Method_WorkspaceInlayHintRefresh
[SMethod_TextDocumentDiagnostic] :: SMethod Method_TextDocumentDiagnostic
[SMethod_WorkspaceDiagnostic] :: SMethod Method_WorkspaceDiagnostic
[SMethod_WorkspaceDiagnosticRefresh] :: SMethod Method_WorkspaceDiagnosticRefresh
[SMethod_ClientRegisterCapability] :: SMethod Method_ClientRegisterCapability
[SMethod_ClientUnregisterCapability] :: SMethod Method_ClientUnregisterCapability
[SMethod_Initialize] :: SMethod Method_Initialize
[SMethod_Shutdown] :: SMethod Method_Shutdown
[SMethod_WindowShowMessageRequest] :: SMethod Method_WindowShowMessageRequest
[SMethod_TextDocumentWillSaveWaitUntil] :: SMethod Method_TextDocumentWillSaveWaitUntil
[SMethod_TextDocumentCompletion] :: SMethod Method_TextDocumentCompletion
[SMethod_CompletionItemResolve] :: SMethod Method_CompletionItemResolve
[SMethod_TextDocumentHover] :: SMethod Method_TextDocumentHover
[SMethod_TextDocumentSignatureHelp] :: SMethod Method_TextDocumentSignatureHelp
[SMethod_TextDocumentDefinition] :: SMethod Method_TextDocumentDefinition
[SMethod_TextDocumentReferences] :: SMethod Method_TextDocumentReferences
[SMethod_TextDocumentDocumentHighlight] :: SMethod Method_TextDocumentDocumentHighlight
[SMethod_TextDocumentDocumentSymbol] :: SMethod Method_TextDocumentDocumentSymbol
[SMethod_TextDocumentCodeAction] :: SMethod Method_TextDocumentCodeAction
[SMethod_CodeActionResolve] :: SMethod Method_CodeActionResolve
[SMethod_WorkspaceSymbol] :: SMethod Method_WorkspaceSymbol
[SMethod_WorkspaceSymbolResolve] :: SMethod Method_WorkspaceSymbolResolve
[SMethod_TextDocumentCodeLens] :: SMethod Method_TextDocumentCodeLens
[SMethod_CodeLensResolve] :: SMethod Method_CodeLensResolve
[SMethod_WorkspaceCodeLensRefresh] :: SMethod Method_WorkspaceCodeLensRefresh
[SMethod_TextDocumentDocumentLink] :: SMethod Method_TextDocumentDocumentLink
[SMethod_DocumentLinkResolve] :: SMethod Method_DocumentLinkResolve
[SMethod_TextDocumentFormatting] :: SMethod Method_TextDocumentFormatting
[SMethod_TextDocumentRangeFormatting] :: SMethod Method_TextDocumentRangeFormatting
[SMethod_TextDocumentOnTypeFormatting] :: SMethod Method_TextDocumentOnTypeFormatting
[SMethod_TextDocumentRename] :: SMethod Method_TextDocumentRename
[SMethod_TextDocumentPrepareRename] :: SMethod Method_TextDocumentPrepareRename
[SMethod_WorkspaceExecuteCommand] :: SMethod Method_WorkspaceExecuteCommand
[SMethod_WorkspaceApplyEdit] :: SMethod Method_WorkspaceApplyEdit
[SMethod_WorkspaceDidChangeWorkspaceFolders] :: SMethod Method_WorkspaceDidChangeWorkspaceFolders
[SMethod_WindowWorkDoneProgressCancel] :: SMethod Method_WindowWorkDoneProgressCancel
[SMethod_WorkspaceDidCreateFiles] :: SMethod Method_WorkspaceDidCreateFiles
[SMethod_WorkspaceDidRenameFiles] :: SMethod Method_WorkspaceDidRenameFiles
[SMethod_WorkspaceDidDeleteFiles] :: SMethod Method_WorkspaceDidDeleteFiles
[SMethod_NotebookDocumentDidOpen] :: SMethod Method_NotebookDocumentDidOpen
[SMethod_NotebookDocumentDidChange] :: SMethod Method_NotebookDocumentDidChange
[SMethod_NotebookDocumentDidSave] :: SMethod Method_NotebookDocumentDidSave
[SMethod_NotebookDocumentDidClose] :: SMethod Method_NotebookDocumentDidClose
[SMethod_Initialized] :: SMethod Method_Initialized
[SMethod_Exit] :: SMethod Method_Exit
[SMethod_WorkspaceDidChangeConfiguration] :: SMethod Method_WorkspaceDidChangeConfiguration
[SMethod_WindowShowMessage] :: SMethod Method_WindowShowMessage
[SMethod_WindowLogMessage] :: SMethod Method_WindowLogMessage
[SMethod_TelemetryEvent] :: SMethod Method_TelemetryEvent
[SMethod_TextDocumentDidOpen] :: SMethod Method_TextDocumentDidOpen
[SMethod_TextDocumentDidChange] :: SMethod Method_TextDocumentDidChange
[SMethod_TextDocumentDidClose] :: SMethod Method_TextDocumentDidClose
[SMethod_TextDocumentDidSave] :: SMethod Method_TextDocumentDidSave
[SMethod_TextDocumentWillSave] :: SMethod Method_TextDocumentWillSave
[SMethod_WorkspaceDidChangeWatchedFiles] :: SMethod Method_WorkspaceDidChangeWatchedFiles
[SMethod_TextDocumentPublishDiagnostics] :: SMethod Method_TextDocumentPublishDiagnostics
[SMethod_SetTrace] :: SMethod Method_SetTrace
[SMethod_LogTrace] :: SMethod Method_LogTrace
[SMethod_CancelRequest] :: SMethod Method_CancelRequest
[SMethod_Progress] :: SMethod Method_Progress
[SMethod_CustomMethod] :: forall s. KnownSymbol s => Proxy s -> SMethod (Method_CustomMethod s)

-- | A method which isn't statically known.
data SomeMethod
[SomeMethod] :: forall m. SMethod m -> SomeMethod

-- | Turn a <a>SomeMethod</a> into its LSP method string.
someMethodToMethodString :: SomeMethod -> String

-- | Turn a LSP method string into a <a>SomeMethod</a>.
methodStringToSomeMethod :: String -> SomeMethod

-- | Get a singleton witness for the message direction of a <a>SMethod</a>.
messageDirection :: forall f t (m :: Method f t). SMethod m -> SMessageDirection f

-- | Get a singleton witness for the message kind of a <a>SMethod</a>.
messageKind :: forall f t (m :: Method f t). SMethod m -> SMessageKind t

-- | Is this an "optional" method which servers and clients are allowed to
--   ignore?
isOptionalMethod :: SomeMethod -> Bool
type SClientMethod (m :: Method ClientToServer t) = SMethod m
type SServerMethod (m :: Method ServerToClient t) = SMethod m
data SomeClientMethod
SomeClientMethod :: SMethod m -> SomeClientMethod
data SomeServerMethod
SomeServerMethod :: SMethod m -> SomeServerMethod
someClientMethod :: SMethod m -> Maybe SomeClientMethod
someServerMethod :: SMethod m -> Maybe SomeServerMethod

-- | Typed registration type, with correct options.
data TRegistration (m :: Method ClientToServer t)
TRegistration :: Text -> SClientMethod m -> !Maybe (RegistrationOptions m) -> TRegistration (m :: Method ClientToServer t)

-- | The id used to register the request. The id can be used to deregister
--   the request again.
[$sel:_id:TRegistration] :: TRegistration (m :: Method ClientToServer t) -> Text

-- | The method / capability to register for.
[$sel:_method:TRegistration] :: TRegistration (m :: Method ClientToServer t) -> SClientMethod m

-- | Options necessary for the registration. Make this strict to aid the
--   pattern matching exhaustiveness checker
[$sel:_registerOptions:TRegistration] :: TRegistration (m :: Method ClientToServer t) -> !Maybe (RegistrationOptions m)
regHelper :: forall m_abXJ6 x_abXJ7. SMethod m_abXJ6 -> (Show (RegistrationOptions m_abXJ6) => ToJSON (RegistrationOptions m_abXJ6) => FromJSON (RegistrationOptions m_abXJ6) => x_abXJ7) -> x_abXJ7
data SomeRegistration
SomeRegistration :: TRegistration m -> SomeRegistration
toUntypedRegistration :: TRegistration m -> Registration
toSomeRegistration :: Registration -> Maybe SomeRegistration

-- | Typed unregistration type.
data TUnregistration (m :: Method ClientToServer t)
TUnregistration :: Text -> SMethod m -> TUnregistration (m :: Method ClientToServer t)

-- | The id used to unregister the request or notification. Usually an id
--   provided during the register request.
[$sel:_id:TUnregistration] :: TUnregistration (m :: Method ClientToServer t) -> Text

-- | The method / capability to unregister for.
[$sel:_method:TUnregistration] :: TUnregistration (m :: Method ClientToServer t) -> SMethod m
data SomeUnregistration
SomeUnregistration :: TUnregistration m -> SomeUnregistration
toUntypedUnregistration :: TUnregistration m -> Unregistration
toSomeUnregistration :: Unregistration -> Maybe SomeUnregistration

module Language.LSP.Protocol.Lens
class HasPartialResultToken s a | s -> a
partialResultToken :: HasPartialResultToken s a => Lens' s a
class HasPosition s a | s -> a
position :: HasPosition s a => Lens' s a
class HasTextDocument s a | s -> a
textDocument :: HasTextDocument s a => Lens' s a
class HasWorkDoneToken s a | s -> a
workDoneToken :: HasWorkDoneToken s a => Lens' s a
class HasRange s a | s -> a
range :: HasRange s a => Lens' s a
class HasUri s a | s -> a
uri :: HasUri s a => Lens' s a
class HasDocumentSelector s a | s -> a
documentSelector :: HasDocumentSelector s a => Lens' s a
class HasId s a | s -> a
id :: HasId s a => Lens' s a
class HasWorkDoneProgress s a | s -> a
workDoneProgress :: HasWorkDoneProgress s a => Lens' s a
class HasName s a | s -> a
name :: HasName s a => Lens' s a
class HasEvent s a | s -> a
event :: HasEvent s a => Lens' s a
class HasItems s a | s -> a
items :: HasItems s a => Lens' s a
class HasColor s a | s -> a
color :: HasColor s a => Lens' s a
class HasAdditionalTextEdits s a | s -> a
additionalTextEdits :: HasAdditionalTextEdits s a => Lens' s a
class HasLabel s a | s -> a
label :: HasLabel s a => Lens' s a
class HasTextEdit s a | s -> a
textEdit :: HasTextEdit s a => Lens' s a
class HasCollapsedText s a | s -> a
collapsedText :: HasCollapsedText s a => Lens' s a
class HasEndCharacter s a | s -> a
endCharacter :: HasEndCharacter s a => Lens' s a
class HasEndLine s a | s -> a
endLine :: HasEndLine s a => Lens' s a
class HasKind s a | s -> a
kind :: HasKind s a => Lens' s a
class HasStartCharacter s a | s -> a
startCharacter :: HasStartCharacter s a => Lens' s a
class HasStartLine s a | s -> a
startLine :: HasStartLine s a => Lens' s a
class HasPositions s a | s -> a
positions :: HasPositions s a => Lens' s a
class HasParent s a | s -> a
parent :: HasParent s a => Lens' s a
class HasToken s a | s -> a
token :: HasToken s a => Lens' s a
class HasData_ s a | s -> a
data_ :: HasData_ s a => Lens' s a
class HasDetail s a | s -> a
detail :: HasDetail s a => Lens' s a
class HasSelectionRange s a | s -> a
selectionRange :: HasSelectionRange s a => Lens' s a
class HasTags s a | s -> a
tags :: HasTags s a => Lens' s a
class HasItem s a | s -> a
item :: HasItem s a => Lens' s a
class HasFrom s a | s -> a
from :: HasFrom s a => Lens' s a
class HasFromRanges s a | s -> a
fromRanges :: HasFromRanges s a => Lens' s a
class HasTo s a | s -> a
to :: HasTo s a => Lens' s a
class HasResultId s a | s -> a
resultId :: HasResultId s a => Lens' s a
class HasFull s a | s -> a
full :: HasFull s a => Lens' s a
class HasLegend s a | s -> a
legend :: HasLegend s a => Lens' s a
class HasPreviousResultId s a | s -> a
previousResultId :: HasPreviousResultId s a => Lens' s a
class HasEdits s a | s -> a
edits :: HasEdits s a => Lens' s a
class HasExternal s a | s -> a
external :: HasExternal s a => Lens' s a
class HasSelection s a | s -> a
selection :: HasSelection s a => Lens' s a
class HasTakeFocus s a | s -> a
takeFocus :: HasTakeFocus s a => Lens' s a
class HasSuccess s a | s -> a
success :: HasSuccess s a => Lens' s a
class HasRanges s a | s -> a
ranges :: HasRanges s a => Lens' s a
class HasWordPattern s a | s -> a
wordPattern :: HasWordPattern s a => Lens' s a
class HasFiles s a | s -> a
files :: HasFiles s a => Lens' s a
class HasChangeAnnotations s a | s -> a
changeAnnotations :: HasChangeAnnotations s a => Lens' s a
class HasChanges s a | s -> a
changes :: HasChanges s a => Lens' s a
class HasDocumentChanges s a | s -> a
documentChanges :: HasDocumentChanges s a => Lens' s a
class HasFilters s a | s -> a
filters :: HasFilters s a => Lens' s a
class HasIdentifier s a | s -> a
identifier :: HasIdentifier s a => Lens' s a
class HasScheme s a | s -> a
scheme :: HasScheme s a => Lens' s a
class HasUnique s a | s -> a
unique :: HasUnique s a => Lens' s a
class HasContext s a | s -> a
context :: HasContext s a => Lens' s a
class HasPaddingLeft s a | s -> a
paddingLeft :: HasPaddingLeft s a => Lens' s a
class HasPaddingRight s a | s -> a
paddingRight :: HasPaddingRight s a => Lens' s a
class HasTextEdits s a | s -> a
textEdits :: HasTextEdits s a => Lens' s a
class HasTooltip s a | s -> a
tooltip :: HasTooltip s a => Lens' s a
class HasResolveProvider s a | s -> a
resolveProvider :: HasResolveProvider s a => Lens' s a
class HasRelatedDocuments s a | s -> a
relatedDocuments :: HasRelatedDocuments s a => Lens' s a
class HasRetriggerRequest s a | s -> a
retriggerRequest :: HasRetriggerRequest s a => Lens' s a
class HasInterFileDependencies s a | s -> a
interFileDependencies :: HasInterFileDependencies s a => Lens' s a
class HasWorkspaceDiagnostics s a | s -> a
workspaceDiagnostics :: HasWorkspaceDiagnostics s a => Lens' s a
class HasPreviousResultIds s a | s -> a
previousResultIds :: HasPreviousResultIds s a => Lens' s a
class HasCellTextDocuments s a | s -> a
cellTextDocuments :: HasCellTextDocuments s a => Lens' s a
class HasNotebookDocument s a | s -> a
notebookDocument :: HasNotebookDocument s a => Lens' s a
class HasChange s a | s -> a
change :: HasChange s a => Lens' s a
class HasRegistrations s a | s -> a
registrations :: HasRegistrations s a => Lens' s a
class HasUnregisterations s a | s -> a
unregisterations :: HasUnregisterations s a => Lens' s a
class HasCapabilities s a | s -> a
capabilities :: HasCapabilities s a => Lens' s a
class HasClientInfo s a | s -> a
clientInfo :: HasClientInfo s a => Lens' s a
class HasInitializationOptions s a | s -> a
initializationOptions :: HasInitializationOptions s a => Lens' s a
class HasLocale s a | s -> a
locale :: HasLocale s a => Lens' s a
class HasProcessId s a | s -> a
processId :: HasProcessId s a => Lens' s a
class HasRootPath s a | s -> a
rootPath :: HasRootPath s a => Lens' s a
class HasRootUri s a | s -> a
rootUri :: HasRootUri s a => Lens' s a
class HasTrace s a | s -> a
trace :: HasTrace s a => Lens' s a
class HasWorkspaceFolders s a | s -> a
workspaceFolders :: HasWorkspaceFolders s a => Lens' s a
class HasServerInfo s a | s -> a
serverInfo :: HasServerInfo s a => Lens' s a
class HasRetry s a | s -> a
retry :: HasRetry s a => Lens' s a
class HasSettings s a | s -> a
settings :: HasSettings s a => Lens' s a
class HasSection s a | s -> a
section :: HasSection s a => Lens' s a
class HasMessage s a | s -> a
message :: HasMessage s a => Lens' s a
class HasType_ s a | s -> a
type_ :: HasType_ s a => Lens' s a
class HasActions s a | s -> a
actions :: HasActions s a => Lens' s a
class HasTitle s a | s -> a
title :: HasTitle s a => Lens' s a
class HasContentChanges s a | s -> a
contentChanges :: HasContentChanges s a => Lens' s a
class HasSyncKind s a | s -> a
syncKind :: HasSyncKind s a => Lens' s a
class HasText s a | s -> a
text :: HasText s a => Lens' s a
class HasIncludeText s a | s -> a
includeText :: HasIncludeText s a => Lens' s a
class HasReason s a | s -> a
reason :: HasReason s a => Lens' s a
class HasNewText s a | s -> a
newText :: HasNewText s a => Lens' s a
class HasWatchers s a | s -> a
watchers :: HasWatchers s a => Lens' s a
class HasDiagnostics s a | s -> a
diagnostics :: HasDiagnostics s a => Lens' s a
class HasVersion s a | s -> a
version :: HasVersion s a => Lens' s a
class HasCommand s a | s -> a
command :: HasCommand s a => Lens' s a
class HasCommitCharacters s a | s -> a
commitCharacters :: HasCommitCharacters s a => Lens' s a
class HasDeprecated s a | s -> a
deprecated :: HasDeprecated s a => Lens' s a
class HasDocumentation s a | s -> a
documentation :: HasDocumentation s a => Lens' s a
class HasFilterText s a | s -> a
filterText :: HasFilterText s a => Lens' s a
class HasInsertText s a | s -> a
insertText :: HasInsertText s a => Lens' s a
class HasInsertTextFormat s a | s -> a
insertTextFormat :: HasInsertTextFormat s a => Lens' s a
class HasInsertTextMode s a | s -> a
insertTextMode :: HasInsertTextMode s a => Lens' s a
class HasLabelDetails s a | s -> a
labelDetails :: HasLabelDetails s a => Lens' s a
class HasPreselect s a | s -> a
preselect :: HasPreselect s a => Lens' s a
class HasSortText s a | s -> a
sortText :: HasSortText s a => Lens' s a
class HasTextEditText s a | s -> a
textEditText :: HasTextEditText s a => Lens' s a
class HasIsIncomplete s a | s -> a
isIncomplete :: HasIsIncomplete s a => Lens' s a
class HasItemDefaults s a | s -> a
itemDefaults :: HasItemDefaults s a => Lens' s a
class HasAllCommitCharacters s a | s -> a
allCommitCharacters :: HasAllCommitCharacters s a => Lens' s a
class HasCompletionItem s a | s -> a
completionItem :: HasCompletionItem s a => Lens' s a
class HasTriggerCharacters s a | s -> a
triggerCharacters :: HasTriggerCharacters s a => Lens' s a
class HasContents s a | s -> a
contents :: HasContents s a => Lens' s a
class HasActiveParameter s a | s -> a
activeParameter :: HasActiveParameter s a => Lens' s a
class HasActiveSignature s a | s -> a
activeSignature :: HasActiveSignature s a => Lens' s a
class HasSignatures s a | s -> a
signatures :: HasSignatures s a => Lens' s a
class HasRetriggerCharacters s a | s -> a
retriggerCharacters :: HasRetriggerCharacters s a => Lens' s a
class HasContainerName s a | s -> a
containerName :: HasContainerName s a => Lens' s a
class HasLocation s a | s -> a
location :: HasLocation s a => Lens' s a
class HasChildren s a | s -> a
children :: HasChildren s a => Lens' s a
class HasArguments s a | s -> a
arguments :: HasArguments s a => Lens' s a
class HasDisabled s a | s -> a
disabled :: HasDisabled s a => Lens' s a
class HasEdit s a | s -> a
edit :: HasEdit s a => Lens' s a
class HasIsPreferred s a | s -> a
isPreferred :: HasIsPreferred s a => Lens' s a
class HasCodeActionKinds s a | s -> a
codeActionKinds :: HasCodeActionKinds s a => Lens' s a
class HasQuery s a | s -> a
query :: HasQuery s a => Lens' s a
class HasTarget s a | s -> a
target :: HasTarget s a => Lens' s a
class HasOptions s a | s -> a
options :: HasOptions s a => Lens' s a
class HasCh s a | s -> a
ch :: HasCh s a => Lens' s a
class HasFirstTriggerCharacter s a | s -> a
firstTriggerCharacter :: HasFirstTriggerCharacter s a => Lens' s a
class HasMoreTriggerCharacter s a | s -> a
moreTriggerCharacter :: HasMoreTriggerCharacter s a => Lens' s a
class HasNewName s a | s -> a
newName :: HasNewName s a => Lens' s a
class HasPrepareProvider s a | s -> a
prepareProvider :: HasPrepareProvider s a => Lens' s a
class HasCommands s a | s -> a
commands :: HasCommands s a => Lens' s a
class HasApplied s a | s -> a
applied :: HasApplied s a => Lens' s a
class HasFailedChange s a | s -> a
failedChange :: HasFailedChange s a => Lens' s a
class HasFailureReason s a | s -> a
failureReason :: HasFailureReason s a => Lens' s a
class HasCancellable s a | s -> a
cancellable :: HasCancellable s a => Lens' s a
class HasPercentage s a | s -> a
percentage :: HasPercentage s a => Lens' s a
class HasValue s a | s -> a
value :: HasValue s a => Lens' s a
class HasVerbose s a | s -> a
verbose :: HasVerbose s a => Lens' s a
class HasOriginSelectionRange s a | s -> a
originSelectionRange :: HasOriginSelectionRange s a => Lens' s a
class HasTargetRange s a | s -> a
targetRange :: HasTargetRange s a => Lens' s a
class HasTargetSelectionRange s a | s -> a
targetSelectionRange :: HasTargetSelectionRange s a => Lens' s a
class HasTargetUri s a | s -> a
targetUri :: HasTargetUri s a => Lens' s a
class HasEnd s a | s -> a
end :: HasEnd s a => Lens' s a
class HasStart s a | s -> a
start :: HasStart s a => Lens' s a
class HasAdded s a | s -> a
added :: HasAdded s a => Lens' s a
class HasRemoved s a | s -> a
removed :: HasRemoved s a => Lens' s a
class HasScopeUri s a | s -> a
scopeUri :: HasScopeUri s a => Lens' s a
class HasAlpha s a | s -> a
alpha :: HasAlpha s a => Lens' s a
class HasBlue s a | s -> a
blue :: HasBlue s a => Lens' s a
class HasGreen s a | s -> a
green :: HasGreen s a => Lens' s a
class HasRed s a | s -> a
red :: HasRed s a => Lens' s a
class HasCharacter s a | s -> a
character :: HasCharacter s a => Lens' s a
class HasLine s a | s -> a
line :: HasLine s a => Lens' s a
class HasDeleteCount s a | s -> a
deleteCount :: HasDeleteCount s a => Lens' s a
class HasAnnotationId s a | s -> a
annotationId :: HasAnnotationId s a => Lens' s a
class HasNewUri s a | s -> a
newUri :: HasNewUri s a => Lens' s a
class HasOldUri s a | s -> a
oldUri :: HasOldUri s a => Lens' s a
class HasDescription s a | s -> a
description :: HasDescription s a => Lens' s a
class HasNeedsConfirmation s a | s -> a
needsConfirmation :: HasNeedsConfirmation s a => Lens' s a
class HasPattern s a | s -> a
pattern :: HasPattern s a => Lens' s a
class HasFrameId s a | s -> a
frameId :: HasFrameId s a => Lens' s a
class HasStoppedLocation s a | s -> a
stoppedLocation :: HasStoppedLocation s a => Lens' s a
class HasCaseSensitiveLookup s a | s -> a
caseSensitiveLookup :: HasCaseSensitiveLookup s a => Lens' s a
class HasVariableName s a | s -> a
variableName :: HasVariableName s a => Lens' s a
class HasExpression s a | s -> a
expression :: HasExpression s a => Lens' s a
class HasCells s a | s -> a
cells :: HasCells s a => Lens' s a
class HasMetadata s a | s -> a
metadata :: HasMetadata s a => Lens' s a
class HasNotebookType s a | s -> a
notebookType :: HasNotebookType s a => Lens' s a
class HasLanguageId s a | s -> a
languageId :: HasLanguageId s a => Lens' s a
class HasMethod s a | s -> a
method :: HasMethod s a => Lens' s a
class HasRegisterOptions s a | s -> a
registerOptions :: HasRegisterOptions s a => Lens' s a
class HasCallHierarchyProvider s a | s -> a
callHierarchyProvider :: HasCallHierarchyProvider s a => Lens' s a
class HasCodeActionProvider s a | s -> a
codeActionProvider :: HasCodeActionProvider s a => Lens' s a
class HasCodeLensProvider s a | s -> a
codeLensProvider :: HasCodeLensProvider s a => Lens' s a
class HasColorProvider s a | s -> a
colorProvider :: HasColorProvider s a => Lens' s a
class HasCompletionProvider s a | s -> a
completionProvider :: HasCompletionProvider s a => Lens' s a
class HasDeclarationProvider s a | s -> a
declarationProvider :: HasDeclarationProvider s a => Lens' s a
class HasDefinitionProvider s a | s -> a
definitionProvider :: HasDefinitionProvider s a => Lens' s a
class HasDiagnosticProvider s a | s -> a
diagnosticProvider :: HasDiagnosticProvider s a => Lens' s a
class HasDocumentFormattingProvider s a | s -> a
documentFormattingProvider :: HasDocumentFormattingProvider s a => Lens' s a
class HasDocumentHighlightProvider s a | s -> a
documentHighlightProvider :: HasDocumentHighlightProvider s a => Lens' s a
class HasDocumentLinkProvider s a | s -> a
documentLinkProvider :: HasDocumentLinkProvider s a => Lens' s a
class HasDocumentOnTypeFormattingProvider s a | s -> a
documentOnTypeFormattingProvider :: HasDocumentOnTypeFormattingProvider s a => Lens' s a
class HasDocumentRangeFormattingProvider s a | s -> a
documentRangeFormattingProvider :: HasDocumentRangeFormattingProvider s a => Lens' s a
class HasDocumentSymbolProvider s a | s -> a
documentSymbolProvider :: HasDocumentSymbolProvider s a => Lens' s a
class HasExecuteCommandProvider s a | s -> a
executeCommandProvider :: HasExecuteCommandProvider s a => Lens' s a
class HasExperimental s a | s -> a
experimental :: HasExperimental s a => Lens' s a
class HasFoldingRangeProvider s a | s -> a
foldingRangeProvider :: HasFoldingRangeProvider s a => Lens' s a
class HasHoverProvider s a | s -> a
hoverProvider :: HasHoverProvider s a => Lens' s a
class HasImplementationProvider s a | s -> a
implementationProvider :: HasImplementationProvider s a => Lens' s a
class HasInlayHintProvider s a | s -> a
inlayHintProvider :: HasInlayHintProvider s a => Lens' s a
class HasInlineValueProvider s a | s -> a
inlineValueProvider :: HasInlineValueProvider s a => Lens' s a
class HasLinkedEditingRangeProvider s a | s -> a
linkedEditingRangeProvider :: HasLinkedEditingRangeProvider s a => Lens' s a
class HasMonikerProvider s a | s -> a
monikerProvider :: HasMonikerProvider s a => Lens' s a
class HasNotebookDocumentSync s a | s -> a
notebookDocumentSync :: HasNotebookDocumentSync s a => Lens' s a
class HasPositionEncoding s a | s -> a
positionEncoding :: HasPositionEncoding s a => Lens' s a
class HasReferencesProvider s a | s -> a
referencesProvider :: HasReferencesProvider s a => Lens' s a
class HasRenameProvider s a | s -> a
renameProvider :: HasRenameProvider s a => Lens' s a
class HasSelectionRangeProvider s a | s -> a
selectionRangeProvider :: HasSelectionRangeProvider s a => Lens' s a
class HasSemanticTokensProvider s a | s -> a
semanticTokensProvider :: HasSemanticTokensProvider s a => Lens' s a
class HasSignatureHelpProvider s a | s -> a
signatureHelpProvider :: HasSignatureHelpProvider s a => Lens' s a
class HasTextDocumentSync s a | s -> a
textDocumentSync :: HasTextDocumentSync s a => Lens' s a
class HasTypeDefinitionProvider s a | s -> a
typeDefinitionProvider :: HasTypeDefinitionProvider s a => Lens' s a
class HasTypeHierarchyProvider s a | s -> a
typeHierarchyProvider :: HasTypeHierarchyProvider s a => Lens' s a
class HasWorkspace s a | s -> a
workspace :: HasWorkspace s a => Lens' s a
class HasWorkspaceSymbolProvider s a | s -> a
workspaceSymbolProvider :: HasWorkspaceSymbolProvider s a => Lens' s a
class HasGlobPattern s a | s -> a
globPattern :: HasGlobPattern s a => Lens' s a
class HasCode s a | s -> a
code :: HasCode s a => Lens' s a
class HasCodeDescription s a | s -> a
codeDescription :: HasCodeDescription s a => Lens' s a
class HasRelatedInformation s a | s -> a
relatedInformation :: HasRelatedInformation s a => Lens' s a
class HasSeverity s a | s -> a
severity :: HasSeverity s a => Lens' s a
class HasSource s a | s -> a
source :: HasSource s a => Lens' s a
class HasTriggerCharacter s a | s -> a
triggerCharacter :: HasTriggerCharacter s a => Lens' s a
class HasTriggerKind s a | s -> a
triggerKind :: HasTriggerKind s a => Lens' s a
class HasInsert s a | s -> a
insert :: HasInsert s a => Lens' s a
class HasReplace s a | s -> a
replace :: HasReplace s a => Lens' s a
class HasActiveSignatureHelp s a | s -> a
activeSignatureHelp :: HasActiveSignatureHelp s a => Lens' s a
class HasIsRetrigger s a | s -> a
isRetrigger :: HasIsRetrigger s a => Lens' s a
class HasParameters s a | s -> a
parameters :: HasParameters s a => Lens' s a
class HasIncludeDeclaration s a | s -> a
includeDeclaration :: HasIncludeDeclaration s a => Lens' s a
class HasOnly s a | s -> a
only :: HasOnly s a => Lens' s a
class HasInsertFinalNewline s a | s -> a
insertFinalNewline :: HasInsertFinalNewline s a => Lens' s a
class HasInsertSpaces s a | s -> a
insertSpaces :: HasInsertSpaces s a => Lens' s a
class HasTabSize s a | s -> a
tabSize :: HasTabSize s a => Lens' s a
class HasTrimFinalNewlines s a | s -> a
trimFinalNewlines :: HasTrimFinalNewlines s a => Lens' s a
class HasTrimTrailingWhitespace s a | s -> a
trimTrailingWhitespace :: HasTrimTrailingWhitespace s a => Lens' s a
class HasTokenModifiers s a | s -> a
tokenModifiers :: HasTokenModifiers s a => Lens' s a
class HasTokenTypes s a | s -> a
tokenTypes :: HasTokenTypes s a => Lens' s a
class HasIgnoreIfExists s a | s -> a
ignoreIfExists :: HasIgnoreIfExists s a => Lens' s a
class HasOverwrite s a | s -> a
overwrite :: HasOverwrite s a => Lens' s a
class HasIgnoreIfNotExists s a | s -> a
ignoreIfNotExists :: HasIgnoreIfNotExists s a => Lens' s a
class HasRecursive s a | s -> a
recursive :: HasRecursive s a => Lens' s a
class HasGlob s a | s -> a
glob :: HasGlob s a => Lens' s a
class HasMatches s a | s -> a
matches :: HasMatches s a => Lens' s a
class HasDocument s a | s -> a
document :: HasDocument s a => Lens' s a
class HasExecutionSummary s a | s -> a
executionSummary :: HasExecutionSummary s a => Lens' s a
class HasGeneral s a | s -> a
general :: HasGeneral s a => Lens' s a
class HasWindow s a | s -> a
window :: HasWindow s a => Lens' s a
class HasOpenClose s a | s -> a
openClose :: HasOpenClose s a => Lens' s a
class HasSave s a | s -> a
save :: HasSave s a => Lens' s a
class HasWillSave s a | s -> a
willSave :: HasWillSave s a => Lens' s a
class HasWillSaveWaitUntil s a | s -> a
willSaveWaitUntil :: HasWillSaveWaitUntil s a => Lens' s a
class HasNotebookSelector s a | s -> a
notebookSelector :: HasNotebookSelector s a => Lens' s a
class HasChangeNotifications s a | s -> a
changeNotifications :: HasChangeNotifications s a => Lens' s a
class HasSupported s a | s -> a
supported :: HasSupported s a => Lens' s a
class HasDidCreate s a | s -> a
didCreate :: HasDidCreate s a => Lens' s a
class HasDidDelete s a | s -> a
didDelete :: HasDidDelete s a => Lens' s a
class HasDidRename s a | s -> a
didRename :: HasDidRename s a => Lens' s a
class HasWillCreate s a | s -> a
willCreate :: HasWillCreate s a => Lens' s a
class HasWillDelete s a | s -> a
willDelete :: HasWillDelete s a => Lens' s a
class HasWillRename s a | s -> a
willRename :: HasWillRename s a => Lens' s a
class HasHref s a | s -> a
href :: HasHref s a => Lens' s a
class HasLanguage s a | s -> a
language :: HasLanguage s a => Lens' s a
class HasNotebook s a | s -> a
notebook :: HasNotebook s a => Lens' s a
class HasIgnoreCase s a | s -> a
ignoreCase :: HasIgnoreCase s a => Lens' s a
class HasExecutionOrder s a | s -> a
executionOrder :: HasExecutionOrder s a => Lens' s a
class HasApplyEdit s a | s -> a
applyEdit :: HasApplyEdit s a => Lens' s a
class HasCodeLens s a | s -> a
codeLens :: HasCodeLens s a => Lens' s a
class HasConfiguration s a | s -> a
configuration :: HasConfiguration s a => Lens' s a
class HasDidChangeConfiguration s a | s -> a
didChangeConfiguration :: HasDidChangeConfiguration s a => Lens' s a
class HasDidChangeWatchedFiles s a | s -> a
didChangeWatchedFiles :: HasDidChangeWatchedFiles s a => Lens' s a
class HasExecuteCommand s a | s -> a
executeCommand :: HasExecuteCommand s a => Lens' s a
class HasFileOperations s a | s -> a
fileOperations :: HasFileOperations s a => Lens' s a
class HasInlayHint s a | s -> a
inlayHint :: HasInlayHint s a => Lens' s a
class HasInlineValue s a | s -> a
inlineValue :: HasInlineValue s a => Lens' s a
class HasSemanticTokens s a | s -> a
semanticTokens :: HasSemanticTokens s a => Lens' s a
class HasSymbol s a | s -> a
symbol :: HasSymbol s a => Lens' s a
class HasWorkspaceEdit s a | s -> a
workspaceEdit :: HasWorkspaceEdit s a => Lens' s a
class HasCallHierarchy s a | s -> a
callHierarchy :: HasCallHierarchy s a => Lens' s a
class HasCodeAction s a | s -> a
codeAction :: HasCodeAction s a => Lens' s a
class HasCompletion s a | s -> a
completion :: HasCompletion s a => Lens' s a
class HasDeclaration s a | s -> a
declaration :: HasDeclaration s a => Lens' s a
class HasDefinition s a | s -> a
definition :: HasDefinition s a => Lens' s a
class HasDiagnostic s a | s -> a
diagnostic :: HasDiagnostic s a => Lens' s a
class HasDocumentHighlight s a | s -> a
documentHighlight :: HasDocumentHighlight s a => Lens' s a
class HasDocumentLink s a | s -> a
documentLink :: HasDocumentLink s a => Lens' s a
class HasDocumentSymbol s a | s -> a
documentSymbol :: HasDocumentSymbol s a => Lens' s a
class HasFoldingRange s a | s -> a
foldingRange :: HasFoldingRange s a => Lens' s a
class HasFormatting s a | s -> a
formatting :: HasFormatting s a => Lens' s a
class HasHover s a | s -> a
hover :: HasHover s a => Lens' s a
class HasImplementation s a | s -> a
implementation :: HasImplementation s a => Lens' s a
class HasLinkedEditingRange s a | s -> a
linkedEditingRange :: HasLinkedEditingRange s a => Lens' s a
class HasMoniker s a | s -> a
moniker :: HasMoniker s a => Lens' s a
class HasOnTypeFormatting s a | s -> a
onTypeFormatting :: HasOnTypeFormatting s a => Lens' s a
class HasPublishDiagnostics s a | s -> a
publishDiagnostics :: HasPublishDiagnostics s a => Lens' s a
class HasRangeFormatting s a | s -> a
rangeFormatting :: HasRangeFormatting s a => Lens' s a
class HasReferences s a | s -> a
references :: HasReferences s a => Lens' s a
class HasRename s a | s -> a
rename :: HasRename s a => Lens' s a
class HasSignatureHelp s a | s -> a
signatureHelp :: HasSignatureHelp s a => Lens' s a
class HasSynchronization s a | s -> a
synchronization :: HasSynchronization s a => Lens' s a
class HasTypeDefinition s a | s -> a
typeDefinition :: HasTypeDefinition s a => Lens' s a
class HasTypeHierarchy s a | s -> a
typeHierarchy :: HasTypeHierarchy s a => Lens' s a
class HasShowDocument s a | s -> a
showDocument :: HasShowDocument s a => Lens' s a
class HasShowMessage s a | s -> a
showMessage :: HasShowMessage s a => Lens' s a
class HasMarkdown s a | s -> a
markdown :: HasMarkdown s a => Lens' s a
class HasPositionEncodings s a | s -> a
positionEncodings :: HasPositionEncodings s a => Lens' s a
class HasRegularExpressions s a | s -> a
regularExpressions :: HasRegularExpressions s a => Lens' s a
class HasStaleRequestSupport s a | s -> a
staleRequestSupport :: HasStaleRequestSupport s a => Lens' s a
class HasBaseUri s a | s -> a
baseUri :: HasBaseUri s a => Lens' s a
class HasChangeAnnotationSupport s a | s -> a
changeAnnotationSupport :: HasChangeAnnotationSupport s a => Lens' s a
class HasFailureHandling s a | s -> a
failureHandling :: HasFailureHandling s a => Lens' s a
class HasNormalizesLineEndings s a | s -> a
normalizesLineEndings :: HasNormalizesLineEndings s a => Lens' s a
class HasResourceOperations s a | s -> a
resourceOperations :: HasResourceOperations s a => Lens' s a
class HasDynamicRegistration s a | s -> a
dynamicRegistration :: HasDynamicRegistration s a => Lens' s a
class HasRelativePatternSupport s a | s -> a
relativePatternSupport :: HasRelativePatternSupport s a => Lens' s a
class HasResolveSupport s a | s -> a
resolveSupport :: HasResolveSupport s a => Lens' s a
class HasSymbolKind s a | s -> a
symbolKind :: HasSymbolKind s a => Lens' s a
class HasTagSupport s a | s -> a
tagSupport :: HasTagSupport s a => Lens' s a
class HasRefreshSupport s a | s -> a
refreshSupport :: HasRefreshSupport s a => Lens' s a
class HasDidSave s a | s -> a
didSave :: HasDidSave s a => Lens' s a
class HasCompletionItemKind s a | s -> a
completionItemKind :: HasCompletionItemKind s a => Lens' s a
class HasCompletionList s a | s -> a
completionList :: HasCompletionList s a => Lens' s a
class HasContextSupport s a | s -> a
contextSupport :: HasContextSupport s a => Lens' s a
class HasContentFormat s a | s -> a
contentFormat :: HasContentFormat s a => Lens' s a
class HasSignatureInformation s a | s -> a
signatureInformation :: HasSignatureInformation s a => Lens' s a
class HasLinkSupport s a | s -> a
linkSupport :: HasLinkSupport s a => Lens' s a
class HasHierarchicalDocumentSymbolSupport s a | s -> a
hierarchicalDocumentSymbolSupport :: HasHierarchicalDocumentSymbolSupport s a => Lens' s a
class HasLabelSupport s a | s -> a
labelSupport :: HasLabelSupport s a => Lens' s a
class HasCodeActionLiteralSupport s a | s -> a
codeActionLiteralSupport :: HasCodeActionLiteralSupport s a => Lens' s a
class HasDataSupport s a | s -> a
dataSupport :: HasDataSupport s a => Lens' s a
class HasDisabledSupport s a | s -> a
disabledSupport :: HasDisabledSupport s a => Lens' s a
class HasHonorsChangeAnnotations s a | s -> a
honorsChangeAnnotations :: HasHonorsChangeAnnotations s a => Lens' s a
class HasIsPreferredSupport s a | s -> a
isPreferredSupport :: HasIsPreferredSupport s a => Lens' s a
class HasTooltipSupport s a | s -> a
tooltipSupport :: HasTooltipSupport s a => Lens' s a
class HasPrepareSupport s a | s -> a
prepareSupport :: HasPrepareSupport s a => Lens' s a
class HasPrepareSupportDefaultBehavior s a | s -> a
prepareSupportDefaultBehavior :: HasPrepareSupportDefaultBehavior s a => Lens' s a
class HasFoldingRangeKind s a | s -> a
foldingRangeKind :: HasFoldingRangeKind s a => Lens' s a
class HasLineFoldingOnly s a | s -> a
lineFoldingOnly :: HasLineFoldingOnly s a => Lens' s a
class HasRangeLimit s a | s -> a
rangeLimit :: HasRangeLimit s a => Lens' s a
class HasCodeDescriptionSupport s a | s -> a
codeDescriptionSupport :: HasCodeDescriptionSupport s a => Lens' s a
class HasVersionSupport s a | s -> a
versionSupport :: HasVersionSupport s a => Lens' s a
class HasAugmentsSyntaxTokens s a | s -> a
augmentsSyntaxTokens :: HasAugmentsSyntaxTokens s a => Lens' s a
class HasFormats s a | s -> a
formats :: HasFormats s a => Lens' s a
class HasMultilineTokenSupport s a | s -> a
multilineTokenSupport :: HasMultilineTokenSupport s a => Lens' s a
class HasOverlappingTokenSupport s a | s -> a
overlappingTokenSupport :: HasOverlappingTokenSupport s a => Lens' s a
class HasRequests s a | s -> a
requests :: HasRequests s a => Lens' s a
class HasServerCancelSupport s a | s -> a
serverCancelSupport :: HasServerCancelSupport s a => Lens' s a
class HasRelatedDocumentSupport s a | s -> a
relatedDocumentSupport :: HasRelatedDocumentSupport s a => Lens' s a
class HasExecutionSummarySupport s a | s -> a
executionSummarySupport :: HasExecutionSummarySupport s a => Lens' s a
class HasMessageActionItem s a | s -> a
messageActionItem :: HasMessageActionItem s a => Lens' s a
class HasSupport s a | s -> a
support :: HasSupport s a => Lens' s a
class HasEngine s a | s -> a
engine :: HasEngine s a => Lens' s a
class HasAllowedTags s a | s -> a
allowedTags :: HasAllowedTags s a => Lens' s a
class HasParser s a | s -> a
parser :: HasParser s a => Lens' s a
class HasLength s a | s -> a
length :: HasLength s a => Lens' s a
class HasStartChar s a | s -> a
startChar :: HasStartChar s a => Lens' s a
class HasTokenType s a | s -> a
tokenType :: HasTokenType s a => Lens' s a
class HasDeltaLine s a | s -> a
deltaLine :: HasDeltaLine s a => Lens' s a
class HasDeltaStartChar s a | s -> a
deltaStartChar :: HasDeltaStartChar s a => Lens' s a
class HasJsonrpc s a | s -> a
jsonrpc :: HasJsonrpc s a => Lens' s a
class HasParams s a | s -> a
params :: HasParams s a => Lens' s a
class HasError s a | s -> a
error :: HasError s a => Lens' s a
class HasResult s a | s -> a
result :: HasResult s a => Lens' s a
class HasXdata s a | s -> a
xdata :: HasXdata s a => Lens' s a

module Language.LSP.Protocol.Capabilities

-- | Capabilities for full conformance to the current LSP specification.
fullCaps :: ClientCapabilities

-- | A specific version of the LSP specification.
data LSPVersion
LSPVersion :: Int -> Int -> LSPVersion

-- | Capabilities for full conformance to the LSP specification up until a
--   version.
capsForVersion :: LSPVersion -> ClientCapabilities

-- | Whether the client supports dynamic registration for the given method.
dynamicRegistrationSupported :: SMethod m -> ClientCapabilities -> Bool

module Language.LSP.Protocol.Utils.SMethodMap

-- | A specialized alternative to a full dependent map for use with
--   <a>SMethod</a>.
data SMethodMap (v :: Method f t -> Type)
singleton :: SMethod a -> v a -> SMethodMap v
insert :: SMethod a -> v a -> SMethodMap v -> SMethodMap v
delete :: SMethod a -> SMethodMap v -> SMethodMap v
member :: SMethod a -> SMethodMap v -> Bool
lookup :: SMethod a -> SMethodMap v -> Maybe (v a)
map :: (forall a. u a -> v a) -> SMethodMap u -> SMethodMap v
instance forall (f :: Language.LSP.Protocol.Message.Meta.MessageDirection) (t :: Language.LSP.Protocol.Message.Meta.MessageKind) (v :: Language.LSP.Protocol.Internal.Method.Method f t -> *). GHC.Base.Semigroup (Language.LSP.Protocol.Utils.SMethodMap.SMethodMap v)
instance forall (f :: Language.LSP.Protocol.Message.Meta.MessageDirection) (t :: Language.LSP.Protocol.Message.Meta.MessageKind) (v :: Language.LSP.Protocol.Internal.Method.Method f t -> *). GHC.Base.Monoid (Language.LSP.Protocol.Utils.SMethodMap.SMethodMap v)
